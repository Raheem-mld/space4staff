{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { IgrValueBrushScale } from \"./igr-value-brush-scale\";\nimport { IgrContourValueResolver } from \"./igr-contour-value-resolver\";\nimport { IgrScatterTriangulationSeries } from \"./igr-scatter-triangulation-series\";\nimport { ScatterContourSeries } from \"./ScatterContourSeries\";\n/**\n * Series class for rendering isarithmic contours based on a triangulation of X+Y+Value points in the ItemsSource.\n*/\n\nvar IgrScatterContourSeries =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(IgrScatterContourSeries, _super);\n\n  function IgrScatterContourSeries(props) {\n    return _super.call(this, props) || this;\n  }\n\n  IgrScatterContourSeries.prototype.createImplementation = function () {\n    return new ScatterContourSeries();\n  };\n\n  Object.defineProperty(IgrScatterContourSeries.prototype, \"i\", {\n    /**\n                                 * @hidden\n                                 */\n    get: function () {\n      return this._implementation;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrScatterContourSeries.prototype, \"isLineContour\", {\n    /**\n     * Gets whether the current series shows a line contour shape.\n    */\n    get: function () {\n      return this.i.du;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrScatterContourSeries.prototype, \"valueMemberPath\", {\n    /**\n     * Gets or set the name of the property from which to retrieve the numeric values from the ItemsSource items.\n    */\n    get: function () {\n      return this.i.q9;\n    },\n    set: function (v) {\n      this.i.q9 = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrScatterContourSeries.prototype, \"fillScale\", {\n    /**\n     * Gets or sets the ValueBrushScale to use when determining Brushes for each contour line, based on the values found in ValueMemberPath.\n    */\n    get: function () {\n      if (this.i.q3 == null) {\n        return null;\n      }\n\n      if (!this.i.q3.externalObject) {\n        var e = IgrValueBrushScale._createFromInternal(this.i.q3);\n\n        if (e) {\n          e._implementation = this.i.q3;\n        }\n\n        this.i.q3.externalObject = e;\n      }\n\n      return this.i.q3.externalObject;\n    },\n    set: function (v) {\n      if (v != null && this._stylingContainer && v._styling) v._styling(this._stylingContainer, this, this);\n      v == null ? this.i.q3 = null : this.i.q3 = v.i;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrScatterContourSeries.prototype, \"actualFillScale\", {\n    /**\n     * Gets actual fill scale that is set on the FillScale property or default FillScale\n    */\n    get: function () {\n      if (this.i.q2 == null) {\n        return null;\n      }\n\n      if (!this.i.q2.externalObject) {\n        var e = IgrValueBrushScale._createFromInternal(this.i.q2);\n\n        if (e) {\n          e._implementation = this.i.q2;\n        }\n\n        this.i.q2.externalObject = e;\n      }\n\n      return this.i.q2.externalObject;\n    },\n    set: function (v) {\n      if (v != null && this._stylingContainer && v._styling) v._styling(this._stylingContainer, this, this);\n      v == null ? this.i.q2 = null : this.i.q2 = v.i;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrScatterContourSeries.prototype, \"valueResolver\", {\n    /**\n     * Gets or set the ContourValueResolver used to determine the numeric values of contours.\n    */\n    get: function () {\n      if (this.i.q0 == null) {\n        return null;\n      }\n\n      if (!this.i.q0.externalObject) {\n        var e = IgrContourValueResolver._createFromInternal(this.i.q0);\n\n        if (e) {\n          e._implementation = this.i.q0;\n        }\n\n        this.i.q0.externalObject = e;\n      }\n\n      return this.i.q0.externalObject;\n    },\n    set: function (v) {\n      if (v != null && this._stylingContainer && v._styling) v._styling(this._stylingContainer, this, this);\n      v == null ? this.i.q0 = null : this.i.q0 = v.i;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  IgrScatterContourSeries.prototype.findByName = function (name) {\n    var baseResult = _super.prototype.findByName.call(this, name);\n\n    if (baseResult) {\n      return baseResult;\n    }\n\n    if (this.fillScale && this.fillScale.name && this.fillScale.name == name) {\n      return this.fillScale;\n    }\n\n    if (this.actualFillScale && this.actualFillScale.name && this.actualFillScale.name == name) {\n      return this.actualFillScale;\n    }\n\n    if (this.valueResolver && this.valueResolver.name && this.valueResolver.name == name) {\n      return this.valueResolver;\n    }\n\n    return null;\n  };\n\n  IgrScatterContourSeries.prototype._styling = function (container, component, parent) {\n    _super.prototype._styling.call(this, container, component, parent);\n\n    this._inStyling = true;\n\n    if (this.fillScale && this.fillScale._styling) {\n      this.fillScale._styling(container, component, this);\n    }\n\n    if (this.actualFillScale && this.actualFillScale._styling) {\n      this.actualFillScale._styling(container, component, this);\n    }\n\n    if (this.valueResolver && this.valueResolver._styling) {\n      this.valueResolver._styling(container, component, this);\n    }\n\n    this._inStyling = false;\n  };\n\n  IgrScatterContourSeries.prototype.getItemValue = function (item, memberPathName) {\n    var iv = this.i.hk(item, memberPathName);\n    return iv;\n  };\n\n  return IgrScatterContourSeries;\n}(IgrScatterTriangulationSeries);\n\nexport { IgrScatterContourSeries };","map":{"version":3,"sources":["../../../../src/igniteui-charts/lib/igr-scatter-contour-series.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __extends } from \"tslib\";\nimport { IgrValueBrushScale } from \"./igr-value-brush-scale\";\nimport { IgrContourValueResolver } from \"./igr-contour-value-resolver\";\nimport { IgrScatterTriangulationSeries } from \"./igr-scatter-triangulation-series\";\nimport { ScatterContourSeries } from \"./ScatterContourSeries\";\n/**\n * Series class for rendering isarithmic contours based on a triangulation of X+Y+Value points in the ItemsSource.\n*/\nvar IgrScatterContourSeries = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(IgrScatterContourSeries, _super);\n    function IgrScatterContourSeries(props) {\n        return _super.call(this, props) || this;\n    }\n    IgrScatterContourSeries.prototype.createImplementation = function () {\n        return new ScatterContourSeries();\n    };\n    Object.defineProperty(IgrScatterContourSeries.prototype, \"i\", {\n        /**\n                                     * @hidden\n                                     */\n        get: function () {\n            return this._implementation;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrScatterContourSeries.prototype, \"isLineContour\", {\n        /**\n         * Gets whether the current series shows a line contour shape.\n        */\n        get: function () {\n            return this.i.du;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrScatterContourSeries.prototype, \"valueMemberPath\", {\n        /**\n         * Gets or set the name of the property from which to retrieve the numeric values from the ItemsSource items.\n        */\n        get: function () {\n            return this.i.q9;\n        },\n        set: function (v) {\n            this.i.q9 = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrScatterContourSeries.prototype, \"fillScale\", {\n        /**\n         * Gets or sets the ValueBrushScale to use when determining Brushes for each contour line, based on the values found in ValueMemberPath.\n        */\n        get: function () {\n            if (this.i.q3 == null) {\n                return null;\n            }\n            if (!this.i.q3.externalObject) {\n                var e = IgrValueBrushScale._createFromInternal(this.i.q3);\n                if (e) {\n                    e._implementation = this.i.q3;\n                }\n                this.i.q3.externalObject = e;\n            }\n            return this.i.q3.externalObject;\n        },\n        set: function (v) {\n            if (v != null && this._stylingContainer && v._styling)\n                v._styling(this._stylingContainer, this, this);\n            v == null ? this.i.q3 = null : this.i.q3 = v.i;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrScatterContourSeries.prototype, \"actualFillScale\", {\n        /**\n         * Gets actual fill scale that is set on the FillScale property or default FillScale\n        */\n        get: function () {\n            if (this.i.q2 == null) {\n                return null;\n            }\n            if (!this.i.q2.externalObject) {\n                var e = IgrValueBrushScale._createFromInternal(this.i.q2);\n                if (e) {\n                    e._implementation = this.i.q2;\n                }\n                this.i.q2.externalObject = e;\n            }\n            return this.i.q2.externalObject;\n        },\n        set: function (v) {\n            if (v != null && this._stylingContainer && v._styling)\n                v._styling(this._stylingContainer, this, this);\n            v == null ? this.i.q2 = null : this.i.q2 = v.i;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrScatterContourSeries.prototype, \"valueResolver\", {\n        /**\n         * Gets or set the ContourValueResolver used to determine the numeric values of contours.\n        */\n        get: function () {\n            if (this.i.q0 == null) {\n                return null;\n            }\n            if (!this.i.q0.externalObject) {\n                var e = IgrContourValueResolver._createFromInternal(this.i.q0);\n                if (e) {\n                    e._implementation = this.i.q0;\n                }\n                this.i.q0.externalObject = e;\n            }\n            return this.i.q0.externalObject;\n        },\n        set: function (v) {\n            if (v != null && this._stylingContainer && v._styling)\n                v._styling(this._stylingContainer, this, this);\n            v == null ? this.i.q0 = null : this.i.q0 = v.i;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    IgrScatterContourSeries.prototype.findByName = function (name) {\n        var baseResult = _super.prototype.findByName.call(this, name);\n        if (baseResult) {\n            return baseResult;\n        }\n        if (this.fillScale && this.fillScale.name && this.fillScale.name == name) {\n            return this.fillScale;\n        }\n        if (this.actualFillScale && this.actualFillScale.name && this.actualFillScale.name == name) {\n            return this.actualFillScale;\n        }\n        if (this.valueResolver && this.valueResolver.name && this.valueResolver.name == name) {\n            return this.valueResolver;\n        }\n        return null;\n    };\n    IgrScatterContourSeries.prototype._styling = function (container, component, parent) {\n        _super.prototype._styling.call(this, container, component, parent);\n        this._inStyling = true;\n        if (this.fillScale && this.fillScale._styling) {\n            this.fillScale._styling(container, component, this);\n        }\n        if (this.actualFillScale && this.actualFillScale._styling) {\n            this.actualFillScale._styling(container, component, this);\n        }\n        if (this.valueResolver && this.valueResolver._styling) {\n            this.valueResolver._styling(container, component, this);\n        }\n        this._inStyling = false;\n    };\n    IgrScatterContourSeries.prototype.getItemValue = function (item, memberPathName) {\n        var iv = this.i.hk(item, memberPathName);\n        return (iv);\n    };\n    return IgrScatterContourSeries;\n}(IgrScatterTriangulationSeries));\nexport { IgrScatterContourSeries };\n//# sourceMappingURL=igr-scatter-contour-series.js.map\n"]},"metadata":{},"sourceType":"module"}