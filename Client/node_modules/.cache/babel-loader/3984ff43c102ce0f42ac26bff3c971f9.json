{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Description } from \"./Description\";\nimport { markType } from \"./type\";\n/**\n * @hidden\n */\n\nvar DataGridComparisonOperatorSelectorDescription =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(DataGridComparisonOperatorSelectorDescription, _super);\n\n  function DataGridComparisonOperatorSelectorDescription() {\n    var _this = _super.call(this) || this;\n\n    _this.m = null;\n    _this.f = 0;\n    _this.k = null;\n    _this.g = 0;\n    _this.n = null;\n    _this.l = null;\n    _this.j = null;\n    return _this;\n  }\n\n  DataGridComparisonOperatorSelectorDescription.prototype.get_type = function () {\n    return \"DataGridComparisonOperatorSelector\";\n  };\n\n  Object.defineProperty(DataGridComparisonOperatorSelectorDescription.prototype, \"type\", {\n    get: function () {\n      return this.get_type();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(DataGridComparisonOperatorSelectorDescription.prototype, \"value\", {\n    get: function () {\n      return this.m;\n    },\n    set: function (a) {\n      this.m = a;\n      this.e(\"Value\");\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(DataGridComparisonOperatorSelectorDescription.prototype, \"customFilterID\", {\n    get: function () {\n      return this.f;\n    },\n    set: function (a) {\n      this.f = a;\n      this.e(\"CustomFilterID\");\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(DataGridComparisonOperatorSelectorDescription.prototype, \"dataType\", {\n    get: function () {\n      return this.k;\n    },\n    set: function (a) {\n      this.k = a;\n      this.e(\"DataType\");\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(DataGridComparisonOperatorSelectorDescription.prototype, \"maxHeight\", {\n    get: function () {\n      return this.g;\n    },\n    set: function (a) {\n      this.g = a;\n      this.e(\"MaxHeight\");\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(DataGridComparisonOperatorSelectorDescription.prototype, \"valueChangedRef\", {\n    get: function () {\n      return this.n;\n    },\n    set: function (a) {\n      this.n = a;\n      this.e(\"ValueChangedRef\");\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(DataGridComparisonOperatorSelectorDescription.prototype, \"openingRef\", {\n    get: function () {\n      return this.l;\n    },\n    set: function (a) {\n      this.l = a;\n      this.e(\"OpeningRef\");\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(DataGridComparisonOperatorSelectorDescription.prototype, \"closingRef\", {\n    get: function () {\n      return this.j;\n    },\n    set: function (a) {\n      this.j = a;\n      this.e(\"ClosingRef\");\n    },\n    enumerable: false,\n    configurable: true\n  });\n  DataGridComparisonOperatorSelectorDescription.$t = markType(DataGridComparisonOperatorSelectorDescription, 'DataGridComparisonOperatorSelectorDescription', Description.$);\n  return DataGridComparisonOperatorSelectorDescription;\n}(Description);\n\nexport { DataGridComparisonOperatorSelectorDescription };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/DataGridComparisonOperatorSelectorDescription.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Description } from \"./Description\";\nimport { markType } from \"./type\";\n/**\n * @hidden\n */\nvar DataGridComparisonOperatorSelectorDescription = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(DataGridComparisonOperatorSelectorDescription, _super);\n    function DataGridComparisonOperatorSelectorDescription() {\n        var _this = _super.call(this) || this;\n        _this.m = null;\n        _this.f = 0;\n        _this.k = null;\n        _this.g = 0;\n        _this.n = null;\n        _this.l = null;\n        _this.j = null;\n        return _this;\n    }\n    DataGridComparisonOperatorSelectorDescription.prototype.get_type = function () {\n        return \"DataGridComparisonOperatorSelector\";\n    };\n    Object.defineProperty(DataGridComparisonOperatorSelectorDescription.prototype, \"type\", {\n        get: function () {\n            return this.get_type();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(DataGridComparisonOperatorSelectorDescription.prototype, \"value\", {\n        get: function () {\n            return this.m;\n        },\n        set: function (a) {\n            this.m = a;\n            this.e(\"Value\");\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(DataGridComparisonOperatorSelectorDescription.prototype, \"customFilterID\", {\n        get: function () {\n            return this.f;\n        },\n        set: function (a) {\n            this.f = a;\n            this.e(\"CustomFilterID\");\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(DataGridComparisonOperatorSelectorDescription.prototype, \"dataType\", {\n        get: function () {\n            return this.k;\n        },\n        set: function (a) {\n            this.k = a;\n            this.e(\"DataType\");\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(DataGridComparisonOperatorSelectorDescription.prototype, \"maxHeight\", {\n        get: function () {\n            return this.g;\n        },\n        set: function (a) {\n            this.g = a;\n            this.e(\"MaxHeight\");\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(DataGridComparisonOperatorSelectorDescription.prototype, \"valueChangedRef\", {\n        get: function () {\n            return this.n;\n        },\n        set: function (a) {\n            this.n = a;\n            this.e(\"ValueChangedRef\");\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(DataGridComparisonOperatorSelectorDescription.prototype, \"openingRef\", {\n        get: function () {\n            return this.l;\n        },\n        set: function (a) {\n            this.l = a;\n            this.e(\"OpeningRef\");\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(DataGridComparisonOperatorSelectorDescription.prototype, \"closingRef\", {\n        get: function () {\n            return this.j;\n        },\n        set: function (a) {\n            this.j = a;\n            this.e(\"ClosingRef\");\n        },\n        enumerable: false,\n        configurable: true\n    });\n    DataGridComparisonOperatorSelectorDescription.$t = markType(DataGridComparisonOperatorSelectorDescription, 'DataGridComparisonOperatorSelectorDescription', Description.$);\n    return DataGridComparisonOperatorSelectorDescription;\n}(Description));\nexport { DataGridComparisonOperatorSelectorDescription };\n//# sourceMappingURL=DataGridComparisonOperatorSelectorDescription.js.map\n"]},"metadata":{},"sourceType":"module"}