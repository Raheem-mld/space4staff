{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\n/**\n * @hidden\n */\n\nvar FilterExpressionDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(FilterExpressionDescriptionMetadata, _super);\n\n  function FilterExpressionDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  FilterExpressionDescriptionMetadata.b = function (a) {\n    if (FilterExpressionDescriptionMetadata.a == null) {\n      FilterExpressionDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      FilterExpressionDescriptionMetadata.c(FilterExpressionDescriptionMetadata.a);\n    }\n\n    if (a.g(FilterExpressionDescriptionMetadata.a)) {\n      return;\n    }\n\n    a.s(FilterExpressionDescriptionMetadata.a);\n  };\n\n  FilterExpressionDescriptionMetadata.c = function (a) {};\n\n  FilterExpressionDescriptionMetadata.d = function (a) {\n    FilterExpressionDescriptionMetadata.b(a);\n    a.t(\"FilterExpression\", FilterExpressionDescriptionMetadata.a);\n  };\n\n  FilterExpressionDescriptionMetadata.$t = markType(FilterExpressionDescriptionMetadata, 'FilterExpressionDescriptionMetadata');\n  FilterExpressionDescriptionMetadata.a = null;\n  return FilterExpressionDescriptionMetadata;\n}(Base);\n\nexport { FilterExpressionDescriptionMetadata };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/FilterExpressionDescriptionMetadata.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,IAAT,EAAe,YAAf,EAAmC,QAAnC,QAAmD,QAAnD;AAEA,SAAS,YAAT,QAA6B,gBAA7B;AAEA;;AAEG;;AACH,IAAA,mCAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAyD,EAAA,SAAA,CAAA,mCAAA,EAAA,MAAA,CAAA;;AAAzD,WAAA,mCAAA,GAAA;;AAmBC;;AAhBe,EAAA,mCAAA,CAAA,CAAA,GAAf,UAAiB,CAAjB,EAA0C;AACzC,QAAI,mCAAmC,CAAC,CAApC,IAAyC,IAA7C,EAAmD;AAClD,MAAA,mCAAmC,CAAC,CAApC,GAAwC,IAAI,YAAJ,CAAiC,YAAjC,EAA+C,YAA/C,EAA6D,CAA7D,CAAxC;AACA,MAAA,mCAAmC,CAAC,CAApC,CAAsC,mCAAmC,CAAC,CAA1E;AACA;;AACD,QAAI,CAAC,CAAC,CAAF,CAAI,mCAAmC,CAAC,CAAxC,CAAJ,EAAgD;AAC/C;AACA;;AACD,IAAA,CAAC,CAAC,CAAF,CAAI,mCAAmC,CAAC,CAAxC;AACA,GATc;;AAUR,EAAA,mCAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAwC,CACvC,CADM;;AAEA,EAAA,mCAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAkC;AACjC,IAAA,mCAAmC,CAAC,CAApC,CAAsC,CAAtC;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,kBAAJ,EAAwB,mCAAmC,CAAC,CAA5D;AACA,GAHM;;AAdA,EAAA,mCAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,mCAAD,EAAsC,qCAAtC,CAAnB;AACQ,EAAA,mCAAA,CAAA,CAAA,GAAkC,IAAlC;AAiBhB,SAAA,mCAAA;AAAC,CAnBD,CAAyD,IAAzD,CAAA;;SAAa,mC","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\n/**\n * @hidden\n */\nvar FilterExpressionDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(FilterExpressionDescriptionMetadata, _super);\n    function FilterExpressionDescriptionMetadata() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    FilterExpressionDescriptionMetadata.b = function (a) {\n        if (FilterExpressionDescriptionMetadata.a == null) {\n            FilterExpressionDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n            FilterExpressionDescriptionMetadata.c(FilterExpressionDescriptionMetadata.a);\n        }\n        if (a.g(FilterExpressionDescriptionMetadata.a)) {\n            return;\n        }\n        a.s(FilterExpressionDescriptionMetadata.a);\n    };\n    FilterExpressionDescriptionMetadata.c = function (a) {\n    };\n    FilterExpressionDescriptionMetadata.d = function (a) {\n        FilterExpressionDescriptionMetadata.b(a);\n        a.t(\"FilterExpression\", FilterExpressionDescriptionMetadata.a);\n    };\n    FilterExpressionDescriptionMetadata.$t = markType(FilterExpressionDescriptionMetadata, 'FilterExpressionDescriptionMetadata');\n    FilterExpressionDescriptionMetadata.a = null;\n    return FilterExpressionDescriptionMetadata;\n}(Base));\nexport { FilterExpressionDescriptionMetadata };\n//# sourceMappingURL=FilterExpressionDescriptionMetadata.js.map\n"]},"metadata":{},"sourceType":"module"}