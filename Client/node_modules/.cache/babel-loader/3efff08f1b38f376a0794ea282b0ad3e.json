{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends, __values } from \"tslib\";\nimport { Base, String_$type, fromEnum, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { List$1 } from \"./List$1\";\nimport { HashSet$1 } from \"./HashSet$1\";\nimport { StringBuilder } from \"./StringBuilder\";\nimport { stringJoin1 } from \"./string\";\n/**\n * @hidden\n */\n\nvar CodeGeneratingImportManager =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(CodeGeneratingImportManager, _super);\n\n  function CodeGeneratingImportManager() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this._packageOverride = null;\n    _this._isImportsOnly = false;\n    _this.j = new List$1(String_$type, 0);\n    _this.h = new HashSet$1(String_$type, 0);\n    _this.i = new List$1(String_$type, 0);\n    _this.f = new Dictionary$2(String_$type, List$1.$.specialize(String_$type), 0);\n    _this.g = new Dictionary$2(String_$type, HashSet$1.$.specialize(String_$type), 0);\n    return _this;\n  }\n\n  Object.defineProperty(CodeGeneratingImportManager.prototype, \"packageOverride\", {\n    get: function () {\n      return this._packageOverride;\n    },\n    set: function (a) {\n      this._packageOverride = a;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(CodeGeneratingImportManager.prototype, \"isImportsOnly\", {\n    get: function () {\n      return this._isImportsOnly;\n    },\n    set: function (a) {\n      this._isImportsOnly = a;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  CodeGeneratingImportManager.prototype.addUsing = function (a) {\n    if (!this.h.contains(a)) {\n      this.h.add_1(a);\n      this.j.add(a);\n    }\n  };\n\n  Object.defineProperty(CodeGeneratingImportManager.prototype, \"hasPackageImports\", {\n    get: function () {\n      return this.f.count > 0;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  CodeGeneratingImportManager.prototype.packageImportsToString = function () {\n    var a = new StringBuilder(0);\n\n    for (var b = 0; b < this.i.count; b++) {\n      var c = this.i._inner[b];\n      var d = this.f.item(c);\n      var e = stringJoin1(String_$type, \", \", d);\n\n      if (this.isImportsOnly && b > 0) {\n        a.u(\",\");\n      }\n\n      if (this.isImportsOnly) {\n        a.l(e);\n      } else {\n        a.u(\"import { \" + e + \" } from '\" + c + \"';\");\n      }\n    }\n\n    return a.toString();\n  };\n\n  CodeGeneratingImportManager.prototype.usingsToString = function () {\n    var a = new StringBuilder(0);\n\n    for (var b = 0; b < this.j.count; b++) {\n      a.u(this.j._inner[b]);\n    }\n\n    return a.toString();\n  };\n\n  CodeGeneratingImportManager.prototype.any = function () {\n    return this.i.count > 0 || this.j.count > 0;\n  };\n\n  CodeGeneratingImportManager.prototype.addPackageImport = function (a, b) {\n    if (this.packageOverride != null) {\n      a = this.packageOverride;\n    }\n\n    if (!this.g.containsKey(a)) {\n      this.i.add(a);\n      this.g.addItem(a, new HashSet$1(String_$type, 0));\n      this.f.addItem(a, new List$1(String_$type, 0));\n    }\n\n    if (!this.g.item(a).contains(b)) {\n      this.g.item(a).add_1(b);\n      this.f.item(a).add(b);\n    }\n  };\n\n  CodeGeneratingImportManager.merge = function (a, b) {\n    var e_1, _a, e_2, _b, e_3, _c, e_4, _d, e_5, _e, e_6, _f;\n\n    var c = new CodeGeneratingImportManager();\n\n    if (a.isImportsOnly || b.isImportsOnly) {\n      c.isImportsOnly = true;\n    }\n\n    if (b.f.count > 0 || a.f.count > 0) {\n      try {\n        for (var _g = __values(fromEnum(a.f.keys)), _h = _g.next(); !_h.done; _h = _g.next()) {\n          var d = _h.value;\n\n          try {\n            for (var _j = (e_2 = void 0, __values(fromEnum(a.f.item(d)))), _k = _j.next(); !_k.done; _k = _j.next()) {\n              var e = _k.value;\n              c.addPackageImport(d, e);\n            }\n          } catch (e_2_1) {\n            e_2 = {\n              error: e_2_1\n            };\n          } finally {\n            try {\n              if (_k && !_k.done && (_b = _j.return)) _b.call(_j);\n            } finally {\n              if (e_2) throw e_2.error;\n            }\n          }\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (_h && !_h.done && (_a = _g.return)) _a.call(_g);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n\n      try {\n        for (var _l = __values(fromEnum(b.f.keys)), _m = _l.next(); !_m.done; _m = _l.next()) {\n          var f = _m.value;\n\n          try {\n            for (var _o = (e_4 = void 0, __values(fromEnum(b.f.item(f)))), _p = _o.next(); !_p.done; _p = _o.next()) {\n              var g = _p.value;\n              c.addPackageImport(f, g);\n            }\n          } catch (e_4_1) {\n            e_4 = {\n              error: e_4_1\n            };\n          } finally {\n            try {\n              if (_p && !_p.done && (_d = _o.return)) _d.call(_o);\n            } finally {\n              if (e_4) throw e_4.error;\n            }\n          }\n        }\n      } catch (e_3_1) {\n        e_3 = {\n          error: e_3_1\n        };\n      } finally {\n        try {\n          if (_m && !_m.done && (_c = _l.return)) _c.call(_l);\n        } finally {\n          if (e_3) throw e_3.error;\n        }\n      }\n    } else {\n      try {\n        for (var _q = __values(fromEnum(a.j)), _r = _q.next(); !_r.done; _r = _q.next()) {\n          var h = _r.value;\n          c.addUsing(h);\n        }\n      } catch (e_5_1) {\n        e_5 = {\n          error: e_5_1\n        };\n      } finally {\n        try {\n          if (_r && !_r.done && (_e = _q.return)) _e.call(_q);\n        } finally {\n          if (e_5) throw e_5.error;\n        }\n      }\n\n      try {\n        for (var _s = __values(fromEnum(b.j)), _t = _s.next(); !_t.done; _t = _s.next()) {\n          var i = _t.value;\n          c.addUsing(i);\n        }\n      } catch (e_6_1) {\n        e_6 = {\n          error: e_6_1\n        };\n      } finally {\n        try {\n          if (_t && !_t.done && (_f = _s.return)) _f.call(_s);\n        } finally {\n          if (e_6) throw e_6.error;\n        }\n      }\n    }\n\n    return c;\n  };\n\n  CodeGeneratingImportManager.prototype.removeDuplicates = function (a) {\n    var e_7, _a, e_8, _b, e_9, _c;\n\n    var b = CodeGeneratingImportManager.merge(this, new CodeGeneratingImportManager());\n\n    if (this.isImportsOnly) {\n      b.isImportsOnly = true;\n    }\n\n    if (a.f.count > 0) {\n      try {\n        for (var _d = __values(fromEnum(a.f.keys)), _e = _d.next(); !_e.done; _e = _d.next()) {\n          var c = _e.value;\n\n          if (this.f.containsKey(c)) {\n            try {\n              for (var _f = (e_8 = void 0, __values(fromEnum(a.f.item(c)))), _g = _f.next(); !_g.done; _g = _f.next()) {\n                var d = _g.value;\n\n                if (b.g.containsKey(c) && b.g.item(c).contains(d)) {\n                  b.g.item(c).remove(d);\n                  b.f.item(c).remove(d);\n\n                  if (b.f.item(c).count == 0) {\n                    b.i.remove(c);\n                    b.g.removeItem(c);\n                    b.f.removeItem(c);\n                  }\n                }\n              }\n            } catch (e_8_1) {\n              e_8 = {\n                error: e_8_1\n              };\n            } finally {\n              try {\n                if (_g && !_g.done && (_b = _f.return)) _b.call(_f);\n              } finally {\n                if (e_8) throw e_8.error;\n              }\n            }\n          }\n        }\n      } catch (e_7_1) {\n        e_7 = {\n          error: e_7_1\n        };\n      } finally {\n        try {\n          if (_e && !_e.done && (_a = _d.return)) _a.call(_d);\n        } finally {\n          if (e_7) throw e_7.error;\n        }\n      }\n    } else {\n      try {\n        for (var _h = __values(fromEnum(a.j)), _j = _h.next(); !_j.done; _j = _h.next()) {\n          var e = _j.value;\n\n          if (b.h.contains(e)) {\n            b.h.remove(e);\n            b.j.remove(e);\n          }\n        }\n      } catch (e_9_1) {\n        e_9 = {\n          error: e_9_1\n        };\n      } finally {\n        try {\n          if (_j && !_j.done && (_c = _h.return)) _c.call(_h);\n        } finally {\n          if (e_9) throw e_9.error;\n        }\n      }\n    }\n\n    return b;\n  };\n\n  CodeGeneratingImportManager.$t = markType(CodeGeneratingImportManager, 'CodeGeneratingImportManager');\n  return CodeGeneratingImportManager;\n}(Base);\n\nexport { CodeGeneratingImportManager };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/CodeGeneratingImportManager.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends, __values } from \"tslib\";\nimport { Base, String_$type, fromEnum, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { List$1 } from \"./List$1\";\nimport { HashSet$1 } from \"./HashSet$1\";\nimport { StringBuilder } from \"./StringBuilder\";\nimport { stringJoin1 } from \"./string\";\n/**\n * @hidden\n */\nvar CodeGeneratingImportManager = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(CodeGeneratingImportManager, _super);\n    function CodeGeneratingImportManager() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._packageOverride = null;\n        _this._isImportsOnly = false;\n        _this.j = new List$1(String_$type, 0);\n        _this.h = new HashSet$1(String_$type, 0);\n        _this.i = new List$1(String_$type, 0);\n        _this.f = new Dictionary$2(String_$type, List$1.$.specialize(String_$type), 0);\n        _this.g = new Dictionary$2(String_$type, HashSet$1.$.specialize(String_$type), 0);\n        return _this;\n    }\n    Object.defineProperty(CodeGeneratingImportManager.prototype, \"packageOverride\", {\n        get: function () {\n            return this._packageOverride;\n        },\n        set: function (a) {\n            this._packageOverride = a;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(CodeGeneratingImportManager.prototype, \"isImportsOnly\", {\n        get: function () {\n            return this._isImportsOnly;\n        },\n        set: function (a) {\n            this._isImportsOnly = a;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    CodeGeneratingImportManager.prototype.addUsing = function (a) {\n        if (!this.h.contains(a)) {\n            this.h.add_1(a);\n            this.j.add(a);\n        }\n    };\n    Object.defineProperty(CodeGeneratingImportManager.prototype, \"hasPackageImports\", {\n        get: function () {\n            return this.f.count > 0;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    CodeGeneratingImportManager.prototype.packageImportsToString = function () {\n        var a = new StringBuilder(0);\n        for (var b = 0; b < this.i.count; b++) {\n            var c = this.i._inner[b];\n            var d = this.f.item(c);\n            var e = stringJoin1(String_$type, \", \", d);\n            if (this.isImportsOnly && b > 0) {\n                a.u(\",\");\n            }\n            if (this.isImportsOnly) {\n                a.l(e);\n            }\n            else {\n                a.u(\"import { \" + e + \" } from '\" + c + \"';\");\n            }\n        }\n        return a.toString();\n    };\n    CodeGeneratingImportManager.prototype.usingsToString = function () {\n        var a = new StringBuilder(0);\n        for (var b = 0; b < this.j.count; b++) {\n            a.u(this.j._inner[b]);\n        }\n        return a.toString();\n    };\n    CodeGeneratingImportManager.prototype.any = function () {\n        return this.i.count > 0 || this.j.count > 0;\n    };\n    CodeGeneratingImportManager.prototype.addPackageImport = function (a, b) {\n        if (this.packageOverride != null) {\n            a = this.packageOverride;\n        }\n        if (!this.g.containsKey(a)) {\n            this.i.add(a);\n            this.g.addItem(a, new HashSet$1(String_$type, 0));\n            this.f.addItem(a, new List$1(String_$type, 0));\n        }\n        if (!this.g.item(a).contains(b)) {\n            this.g.item(a).add_1(b);\n            this.f.item(a).add(b);\n        }\n    };\n    CodeGeneratingImportManager.merge = function (a, b) {\n        var e_1, _a, e_2, _b, e_3, _c, e_4, _d, e_5, _e, e_6, _f;\n        var c = new CodeGeneratingImportManager();\n        if (a.isImportsOnly || b.isImportsOnly) {\n            c.isImportsOnly = true;\n        }\n        if (b.f.count > 0 || a.f.count > 0) {\n            try {\n                for (var _g = __values(fromEnum(a.f.keys)), _h = _g.next(); !_h.done; _h = _g.next()) {\n                    var d = _h.value;\n                    try {\n                        for (var _j = (e_2 = void 0, __values(fromEnum(a.f.item(d)))), _k = _j.next(); !_k.done; _k = _j.next()) {\n                            var e = _k.value;\n                            c.addPackageImport(d, e);\n                        }\n                    }\n                    catch (e_2_1) {\n                        e_2 = { error: e_2_1 };\n                    }\n                    finally {\n                        try {\n                            if (_k && !_k.done && (_b = _j.return))\n                                _b.call(_j);\n                        }\n                        finally {\n                            if (e_2)\n                                throw e_2.error;\n                        }\n                    }\n                }\n            }\n            catch (e_1_1) {\n                e_1 = { error: e_1_1 };\n            }\n            finally {\n                try {\n                    if (_h && !_h.done && (_a = _g.return))\n                        _a.call(_g);\n                }\n                finally {\n                    if (e_1)\n                        throw e_1.error;\n                }\n            }\n            try {\n                for (var _l = __values(fromEnum(b.f.keys)), _m = _l.next(); !_m.done; _m = _l.next()) {\n                    var f = _m.value;\n                    try {\n                        for (var _o = (e_4 = void 0, __values(fromEnum(b.f.item(f)))), _p = _o.next(); !_p.done; _p = _o.next()) {\n                            var g = _p.value;\n                            c.addPackageImport(f, g);\n                        }\n                    }\n                    catch (e_4_1) {\n                        e_4 = { error: e_4_1 };\n                    }\n                    finally {\n                        try {\n                            if (_p && !_p.done && (_d = _o.return))\n                                _d.call(_o);\n                        }\n                        finally {\n                            if (e_4)\n                                throw e_4.error;\n                        }\n                    }\n                }\n            }\n            catch (e_3_1) {\n                e_3 = { error: e_3_1 };\n            }\n            finally {\n                try {\n                    if (_m && !_m.done && (_c = _l.return))\n                        _c.call(_l);\n                }\n                finally {\n                    if (e_3)\n                        throw e_3.error;\n                }\n            }\n        }\n        else {\n            try {\n                for (var _q = __values(fromEnum(a.j)), _r = _q.next(); !_r.done; _r = _q.next()) {\n                    var h = _r.value;\n                    c.addUsing(h);\n                }\n            }\n            catch (e_5_1) {\n                e_5 = { error: e_5_1 };\n            }\n            finally {\n                try {\n                    if (_r && !_r.done && (_e = _q.return))\n                        _e.call(_q);\n                }\n                finally {\n                    if (e_5)\n                        throw e_5.error;\n                }\n            }\n            try {\n                for (var _s = __values(fromEnum(b.j)), _t = _s.next(); !_t.done; _t = _s.next()) {\n                    var i = _t.value;\n                    c.addUsing(i);\n                }\n            }\n            catch (e_6_1) {\n                e_6 = { error: e_6_1 };\n            }\n            finally {\n                try {\n                    if (_t && !_t.done && (_f = _s.return))\n                        _f.call(_s);\n                }\n                finally {\n                    if (e_6)\n                        throw e_6.error;\n                }\n            }\n        }\n        return c;\n    };\n    CodeGeneratingImportManager.prototype.removeDuplicates = function (a) {\n        var e_7, _a, e_8, _b, e_9, _c;\n        var b = CodeGeneratingImportManager.merge(this, new CodeGeneratingImportManager());\n        if (this.isImportsOnly) {\n            b.isImportsOnly = true;\n        }\n        if (a.f.count > 0) {\n            try {\n                for (var _d = __values(fromEnum(a.f.keys)), _e = _d.next(); !_e.done; _e = _d.next()) {\n                    var c = _e.value;\n                    if (this.f.containsKey(c)) {\n                        try {\n                            for (var _f = (e_8 = void 0, __values(fromEnum(a.f.item(c)))), _g = _f.next(); !_g.done; _g = _f.next()) {\n                                var d = _g.value;\n                                if (b.g.containsKey(c) && b.g.item(c).contains(d)) {\n                                    b.g.item(c).remove(d);\n                                    b.f.item(c).remove(d);\n                                    if (b.f.item(c).count == 0) {\n                                        b.i.remove(c);\n                                        b.g.removeItem(c);\n                                        b.f.removeItem(c);\n                                    }\n                                }\n                            }\n                        }\n                        catch (e_8_1) {\n                            e_8 = { error: e_8_1 };\n                        }\n                        finally {\n                            try {\n                                if (_g && !_g.done && (_b = _f.return))\n                                    _b.call(_f);\n                            }\n                            finally {\n                                if (e_8)\n                                    throw e_8.error;\n                            }\n                        }\n                    }\n                }\n            }\n            catch (e_7_1) {\n                e_7 = { error: e_7_1 };\n            }\n            finally {\n                try {\n                    if (_e && !_e.done && (_a = _d.return))\n                        _a.call(_d);\n                }\n                finally {\n                    if (e_7)\n                        throw e_7.error;\n                }\n            }\n        }\n        else {\n            try {\n                for (var _h = __values(fromEnum(a.j)), _j = _h.next(); !_j.done; _j = _h.next()) {\n                    var e = _j.value;\n                    if (b.h.contains(e)) {\n                        b.h.remove(e);\n                        b.j.remove(e);\n                    }\n                }\n            }\n            catch (e_9_1) {\n                e_9 = { error: e_9_1 };\n            }\n            finally {\n                try {\n                    if (_j && !_j.done && (_c = _h.return))\n                        _c.call(_h);\n                }\n                finally {\n                    if (e_9)\n                        throw e_9.error;\n                }\n            }\n        }\n        return b;\n    };\n    CodeGeneratingImportManager.$t = markType(CodeGeneratingImportManager, 'CodeGeneratingImportManager');\n    return CodeGeneratingImportManager;\n}(Base));\nexport { CodeGeneratingImportManager };\n//# sourceMappingURL=CodeGeneratingImportManager.js.map\n"]},"metadata":{},"sourceType":"module"}