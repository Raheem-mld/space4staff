{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { PrimaryKeyValueDescriptionMetadata } from \"./PrimaryKeyValueDescriptionMetadata\";\nimport { CellKeyDescription } from \"./CellKeyDescription\";\n/**\n * @hidden\n */\n\nvar CellKeyDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(CellKeyDescriptionMetadata, _super);\n\n  function CellKeyDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  CellKeyDescriptionMetadata.b = function (a) {\n    if (CellKeyDescriptionMetadata.a == null) {\n      CellKeyDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      CellKeyDescriptionMetadata.c(CellKeyDescriptionMetadata.a);\n    }\n\n    if (a.g(CellKeyDescriptionMetadata.a)) {\n      return;\n    }\n\n    a.s(CellKeyDescriptionMetadata.a);\n    PrimaryKeyValueDescriptionMetadata.d(a);\n  };\n\n  CellKeyDescriptionMetadata.c = function (a) {\n    a.item(\"PrimaryKey\", \"ExportedType:PrimaryKeyValue\");\n    a.item(\"RowItem\", \"Unknown\");\n    a.item(\"ColumnUniqueKey\", \"String\");\n  };\n\n  CellKeyDescriptionMetadata.d = function (a) {\n    CellKeyDescriptionMetadata.b(a);\n    a.u(\"CellKey\", function () {\n      return new CellKeyDescription();\n    });\n    a.t(\"CellKey\", CellKeyDescriptionMetadata.a);\n  };\n\n  CellKeyDescriptionMetadata.$t = markType(CellKeyDescriptionMetadata, 'CellKeyDescriptionMetadata');\n  CellKeyDescriptionMetadata.a = null;\n  return CellKeyDescriptionMetadata;\n}(Base);\n\nexport { CellKeyDescriptionMetadata };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/CellKeyDescriptionMetadata.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,IAAT,EAAe,YAAf,EAAmC,QAAnC,QAAmD,QAAnD;AAEA,SAAS,YAAT,QAA6B,gBAA7B;AACA,SAAS,kCAAT,QAAmD,sCAAnD;AACA,SAAS,kBAAT,QAAmC,sBAAnC;AAEA;;AAEG;;AACH,IAAA,0BAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAgD,EAAA,SAAA,CAAA,0BAAA,EAAA,MAAA,CAAA;;AAAhD,WAAA,0BAAA,GAAA;;AAwBC;;AArBe,EAAA,0BAAA,CAAA,CAAA,GAAf,UAAiB,CAAjB,EAA0C;AACzC,QAAI,0BAA0B,CAAC,CAA3B,IAAgC,IAApC,EAA0C;AACzC,MAAA,0BAA0B,CAAC,CAA3B,GAA+B,IAAI,YAAJ,CAAiC,YAAjC,EAA+C,YAA/C,EAA6D,CAA7D,CAA/B;AACA,MAAA,0BAA0B,CAAC,CAA3B,CAA6B,0BAA0B,CAAC,CAAxD;AACA;;AACD,QAAI,CAAC,CAAC,CAAF,CAAI,0BAA0B,CAAC,CAA/B,CAAJ,EAAuC;AACtC;AACA;;AACD,IAAA,CAAC,CAAC,CAAF,CAAI,0BAA0B,CAAC,CAA/B;AACA,IAAA,kCAAkC,CAAC,CAAnC,CAAqC,CAArC;AACA,GAVc;;AAWR,EAAA,0BAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAwC;AACvC,IAAA,CAAC,CAAC,IAAF,CAAO,YAAP,EAAqB,8BAArB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,SAAP,EAAkB,SAAlB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,iBAAP,EAA0B,QAA1B;AACA,GAJM;;AAKA,EAAA,0BAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAkC;AACjC,IAAA,0BAA0B,CAAC,CAA3B,CAA6B,CAA7B;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,SAAJ,EAAe,YAAA;AAAM,aAAA,IAAA,kBAAA,EAAA;AAAwB,KAA7C;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,SAAJ,EAAe,0BAA0B,CAAC,CAA1C;AACA,GAJM;;AAlBA,EAAA,0BAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,0BAAD,EAA6B,4BAA7B,CAAnB;AACQ,EAAA,0BAAA,CAAA,CAAA,GAAkC,IAAlC;AAsBhB,SAAA,0BAAA;AAAC,CAxBD,CAAgD,IAAhD,CAAA;;SAAa,0B","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { PrimaryKeyValueDescriptionMetadata } from \"./PrimaryKeyValueDescriptionMetadata\";\nimport { CellKeyDescription } from \"./CellKeyDescription\";\n/**\n * @hidden\n */\nvar CellKeyDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(CellKeyDescriptionMetadata, _super);\n    function CellKeyDescriptionMetadata() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    CellKeyDescriptionMetadata.b = function (a) {\n        if (CellKeyDescriptionMetadata.a == null) {\n            CellKeyDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n            CellKeyDescriptionMetadata.c(CellKeyDescriptionMetadata.a);\n        }\n        if (a.g(CellKeyDescriptionMetadata.a)) {\n            return;\n        }\n        a.s(CellKeyDescriptionMetadata.a);\n        PrimaryKeyValueDescriptionMetadata.d(a);\n    };\n    CellKeyDescriptionMetadata.c = function (a) {\n        a.item(\"PrimaryKey\", \"ExportedType:PrimaryKeyValue\");\n        a.item(\"RowItem\", \"Unknown\");\n        a.item(\"ColumnUniqueKey\", \"String\");\n    };\n    CellKeyDescriptionMetadata.d = function (a) {\n        CellKeyDescriptionMetadata.b(a);\n        a.u(\"CellKey\", function () { return new CellKeyDescription(); });\n        a.t(\"CellKey\", CellKeyDescriptionMetadata.a);\n    };\n    CellKeyDescriptionMetadata.$t = markType(CellKeyDescriptionMetadata, 'CellKeyDescriptionMetadata');\n    CellKeyDescriptionMetadata.a = null;\n    return CellKeyDescriptionMetadata;\n}(Base));\nexport { CellKeyDescriptionMetadata };\n//# sourceMappingURL=CellKeyDescriptionMetadata.js.map\n"]},"metadata":{},"sourceType":"module"}