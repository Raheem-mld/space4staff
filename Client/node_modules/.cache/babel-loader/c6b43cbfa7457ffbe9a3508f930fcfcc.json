{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { IgrHorizontalStackedSeriesBase } from \"./igr-horizontal-stacked-series-base\";\nimport { StackedLineSeries } from \"./StackedLineSeries\";\n/**\n * Represents a stacked series, where the points in each series are connected with a line.\n*/\n\nvar IgrStackedLineSeries =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(IgrStackedLineSeries, _super);\n\n  function IgrStackedLineSeries(props) {\n    return _super.call(this, props) || this;\n  }\n\n  IgrStackedLineSeries.prototype.createImplementation = function () {\n    return new StackedLineSeries();\n  };\n\n  Object.defineProperty(IgrStackedLineSeries.prototype, \"i\", {\n    /**\n                                 * @hidden\n                                 */\n    get: function () {\n      return this._implementation;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedLineSeries.prototype, \"isLineOnly\", {\n    /**\n     * Gets whether the current series shows only line shapes.\n    */\n    get: function () {\n      return this.i.dv;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return IgrStackedLineSeries;\n}(IgrHorizontalStackedSeriesBase);\n\nexport { IgrStackedLineSeries };","map":{"version":3,"sources":["../../../../src/igniteui-charts/lib/igr-stacked-line-series.ts"],"names":[],"mappings":";AAKA,SAAS,8BAAT,QAAqF,sCAArF;AAKA,SAAS,iBAAT,QAAkC,qBAAlC;AAGA;;AAEE;;AACF,IAAA,oBAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAA6G,EAAA,SAAA,CAAA,oBAAA,EAAA,MAAA,CAAA;;AAa5G,WAAA,oBAAA,CAAY,KAAZ,EAAoB;WACgB,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,KAAN,KAAY,I;AAG/C;;AAdQ,EAAA,oBAAA,CAAA,SAAA,CAAA,oBAAA,GAAV,YAAA;AAEC,WAAO,IAAI,iBAAJ,EAAP;AACA,GAHS;;AAOmB,EAAA,MAAA,CAAA,cAAA,CAAW,oBAAA,CAAA,SAAX,EAAW,GAAX,EAAY;AAHxC;;AAE+B;SACH,YAAA;AAC3B,aAAO,KAAK,eAAZ;AACA,KAFuC;qBAAA;;AAAA,GAAZ;AAW5B,EAAA,MAAA,CAAA,cAAA,CAAI,oBAAA,CAAA,SAAJ,EAAI,YAAJ,EAAc;AAHd;;AAEE;SACF,YAAA;AACC,aAAQ,KAAK,CAAL,CAAO,EAAf;AACA,KAFa;qBAAA;;AAAA,GAAd;AAGD,SAAA,oBAAA;AAAC,CAxBD,CAA6G,8BAA7G,CAAA","sourceRoot":"","sourcesContent":["import { __extends } from \"tslib\";\nimport { IgrHorizontalStackedSeriesBase } from \"./igr-horizontal-stacked-series-base\";\nimport { StackedLineSeries } from \"./StackedLineSeries\";\n/**\n * Represents a stacked series, where the points in each series are connected with a line.\n*/\nvar IgrStackedLineSeries = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(IgrStackedLineSeries, _super);\n    function IgrStackedLineSeries(props) {\n        return _super.call(this, props) || this;\n    }\n    IgrStackedLineSeries.prototype.createImplementation = function () {\n        return new StackedLineSeries();\n    };\n    Object.defineProperty(IgrStackedLineSeries.prototype, \"i\", {\n        /**\n                                     * @hidden\n                                     */\n        get: function () {\n            return this._implementation;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedLineSeries.prototype, \"isLineOnly\", {\n        /**\n         * Gets whether the current series shows only line shapes.\n        */\n        get: function () {\n            return this.i.dv;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return IgrStackedLineSeries;\n}(IgrHorizontalStackedSeriesBase));\nexport { IgrStackedLineSeries };\n//# sourceMappingURL=igr-stacked-line-series.js.map\n"]},"metadata":{},"sourceType":"module"}