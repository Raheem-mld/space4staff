{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { BrushSelectionMode_$type } from \"./BrushSelectionMode\";\nimport { IgrBrushScale } from \"./igr-brush-scale\";\nimport { CustomPaletteBrushScale } from \"./CustomPaletteBrushScale\";\nimport { ensureEnum, brushToString } from \"igniteui-react-core\";\n/**\n * Represents a brush scale that uses index-based brush selection mode.\n*/\n\nvar IgrCustomPaletteBrushScale =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(IgrCustomPaletteBrushScale, _super);\n\n  function IgrCustomPaletteBrushScale(props) {\n    return _super.call(this, props) || this;\n  }\n\n  IgrCustomPaletteBrushScale.prototype.createImplementation = function () {\n    return new CustomPaletteBrushScale();\n  };\n\n  Object.defineProperty(IgrCustomPaletteBrushScale.prototype, \"i\", {\n    /**\n                                 * @hidden\n                                 */\n    get: function () {\n      return this._implementation;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrCustomPaletteBrushScale.prototype, \"brushSelectionMode\", {\n    /**\n     * Gets or sets the brush selection mode.\n    */\n    get: function () {\n      return this.i.brushSelectionMode;\n    },\n    set: function (v) {\n      this.i.brushSelectionMode = ensureEnum(BrushSelectionMode_$type, v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrCustomPaletteBrushScale.prototype, \"isReady\", {\n    /**\n     * Checks if this scale is ready for useage with a series\n    */\n    get: function () {\n      return this.i.isReady;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  IgrCustomPaletteBrushScale.prototype.getBrush1 = function (index, total) {\n    var iv = this.i.getBrush1(index, total);\n    return brushToString(iv);\n  };\n\n  return IgrCustomPaletteBrushScale;\n}(IgrBrushScale);\n\nexport { IgrCustomPaletteBrushScale };","map":{"version":3,"sources":["../../../../src/igniteui-charts/lib/igr-custom-palette-brush-scale.ts"],"names":[],"mappings":";AAKA,SAA6B,wBAA7B,QAA6D,sBAA7D;AACA,SAAS,aAAT,QAAmD,mBAAnD;AACA,SAAS,uBAAT,QAAwC,2BAAxC;AACA,SAAS,UAAT,EAAiC,aAAjC,QAAsD,qBAAtD;AAEA;;AAEE;;AACF,IAAA,0BAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAgD,EAAA,SAAA,CAAA,0BAAA,EAAA,MAAA,CAAA;;AAa/C,WAAA,0BAAA,CAAY,KAAZ,EAAmD;WAClD,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,KAAN,KAAY,I;AACZ;;AAZQ,EAAA,0BAAA,CAAA,SAAA,CAAA,oBAAA,GAAV,YAAA;AAEC,WAAO,IAAI,uBAAJ,EAAP;AACA,GAHS;;AAOmB,EAAA,MAAA,CAAA,cAAA,CAAW,0BAAA,CAAA,SAAX,EAAW,GAAX,EAAY;AAHxC;;AAE+B;SACH,YAAA;AAC3B,aAAO,KAAK,eAAZ;AACA,KAFuC;qBAAA;;AAAA,GAAZ;AAS5B,EAAA,MAAA,CAAA,cAAA,CAAI,0BAAA,CAAA,SAAJ,EAAI,oBAAJ,EAAsB;AAHtB;;AAEE;SACF,YAAA;AACC,aAAO,KAAK,CAAL,CAAO,kBAAd;AACA,KAFqB;SAGtB,UAAuB,CAAvB,EAA4C;AAC3C,WAAK,CAAL,CAAO,kBAAP,GAA4B,UAAU,CAAqB,wBAArB,EAA+C,CAA/C,CAAtC;AACA,KALqB;qBAAA;;AAAA,GAAtB;AASA,EAAA,MAAA,CAAA,cAAA,CAAI,0BAAA,CAAA,SAAJ,EAAI,SAAJ,EAAW;AAHX;;AAEE;SACF,YAAA;AACC,aAAQ,KAAK,CAAL,CAAO,OAAf;AACA,KAFU;qBAAA;;AAAA,GAAX;;AAGO,EAAA,0BAAA,CAAA,SAAA,CAAA,SAAA,GAAP,UAAiB,KAAjB,EAAgC,KAAhC,EAA6C;AAC5C,QAAI,EAAE,GAAG,KAAK,CAAL,CAAO,SAAP,CAAiB,KAAjB,EAAwB,KAAxB,CAAT;AACA,WAAO,aAAa,CAAC,EAAD,CAApB;AACA,GAHM;;AAIR,SAAA,0BAAA;AAAC,CAnCD,CAAgD,aAAhD,CAAA","sourceRoot":"","sourcesContent":["import { __extends } from \"tslib\";\nimport { BrushSelectionMode_$type } from \"./BrushSelectionMode\";\nimport { IgrBrushScale } from \"./igr-brush-scale\";\nimport { CustomPaletteBrushScale } from \"./CustomPaletteBrushScale\";\nimport { ensureEnum, brushToString } from \"igniteui-react-core\";\n/**\n * Represents a brush scale that uses index-based brush selection mode.\n*/\nvar IgrCustomPaletteBrushScale = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(IgrCustomPaletteBrushScale, _super);\n    function IgrCustomPaletteBrushScale(props) {\n        return _super.call(this, props) || this;\n    }\n    IgrCustomPaletteBrushScale.prototype.createImplementation = function () {\n        return new CustomPaletteBrushScale();\n    };\n    Object.defineProperty(IgrCustomPaletteBrushScale.prototype, \"i\", {\n        /**\n                                     * @hidden\n                                     */\n        get: function () {\n            return this._implementation;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrCustomPaletteBrushScale.prototype, \"brushSelectionMode\", {\n        /**\n         * Gets or sets the brush selection mode.\n        */\n        get: function () {\n            return this.i.brushSelectionMode;\n        },\n        set: function (v) {\n            this.i.brushSelectionMode = ensureEnum(BrushSelectionMode_$type, v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrCustomPaletteBrushScale.prototype, \"isReady\", {\n        /**\n         * Checks if this scale is ready for useage with a series\n        */\n        get: function () {\n            return this.i.isReady;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    IgrCustomPaletteBrushScale.prototype.getBrush1 = function (index, total) {\n        var iv = this.i.getBrush1(index, total);\n        return brushToString(iv);\n    };\n    return IgrCustomPaletteBrushScale;\n}(IgrBrushScale));\nexport { IgrCustomPaletteBrushScale };\n//# sourceMappingURL=igr-custom-palette-brush-scale.js.map\n"]},"metadata":{},"sourceType":"module"}