{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { ValueBrushScaleDescriptionMetadata } from \"./ValueBrushScaleDescriptionMetadata\";\nimport { ContourValueResolverDescriptionMetadata } from \"./ContourValueResolverDescriptionMetadata\";\nimport { TriangulationStatusEventArgsDescriptionMetadata } from \"./TriangulationStatusEventArgsDescriptionMetadata\";\nimport { GeographicXYTriangulatingSeriesDescriptionMetadata } from \"./GeographicXYTriangulatingSeriesDescriptionMetadata\";\nimport { GeographicContourLineSeriesDescription } from \"./GeographicContourLineSeriesDescription\";\n/**\n * @hidden\n */\n\nvar GeographicContourLineSeriesDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(GeographicContourLineSeriesDescriptionMetadata, _super);\n\n  function GeographicContourLineSeriesDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  GeographicContourLineSeriesDescriptionMetadata.b = function (a) {\n    if (GeographicContourLineSeriesDescriptionMetadata.a == null) {\n      GeographicContourLineSeriesDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      GeographicContourLineSeriesDescriptionMetadata.c(GeographicContourLineSeriesDescriptionMetadata.a);\n    }\n\n    if (a.g(GeographicContourLineSeriesDescriptionMetadata.a)) {\n      return;\n    }\n\n    a.s(GeographicContourLineSeriesDescriptionMetadata.a);\n    ValueBrushScaleDescriptionMetadata.d(a);\n    ContourValueResolverDescriptionMetadata.d(a);\n    TriangulationStatusEventArgsDescriptionMetadata.d(a);\n  };\n\n  GeographicContourLineSeriesDescriptionMetadata.c = function (a) {\n    GeographicXYTriangulatingSeriesDescriptionMetadata.c(a);\n    a.item(\"ValueMemberPath\", \"String\");\n    a.item(\"FillScale\", \"ExportedType:ValueBrushScale\");\n    a.item(\"ActualFillScale\", \"ExportedType:ValueBrushScale\");\n    a.item(\"ValueResolver\", \"ExportedType:ContourValueResolver\");\n    a.item(\"TriangulationStatusChangedRef\", \"EventRef::triangulationStatusChanged\");\n  };\n\n  GeographicContourLineSeriesDescriptionMetadata.d = function (a) {\n    GeographicContourLineSeriesDescriptionMetadata.b(a);\n    a.u(\"GeographicContourLineSeries\", function () {\n      return new GeographicContourLineSeriesDescription();\n    });\n    a.t(\"GeographicContourLineSeries\", GeographicContourLineSeriesDescriptionMetadata.a);\n  };\n\n  GeographicContourLineSeriesDescriptionMetadata.$t = markType(GeographicContourLineSeriesDescriptionMetadata, 'GeographicContourLineSeriesDescriptionMetadata');\n  GeographicContourLineSeriesDescriptionMetadata.a = null;\n  return GeographicContourLineSeriesDescriptionMetadata;\n}(Base);\n\nexport { GeographicContourLineSeriesDescriptionMetadata };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/GeographicContourLineSeriesDescriptionMetadata.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,IAAT,EAAe,YAAf,EAAmC,QAAnC,QAAmD,QAAnD;AAEA,SAAS,YAAT,QAA6B,gBAA7B;AACA,SAAS,kCAAT,QAAmD,sCAAnD;AACA,SAAS,uCAAT,QAAwD,2CAAxD;AACA,SAAS,+CAAT,QAAgE,mDAAhE;AACA,SAAS,kDAAT,QAAmE,sDAAnE;AACA,SAAS,sCAAT,QAAuD,0CAAvD;AAEA;;AAEG;;AACH,IAAA,8CAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAoE,EAAA,SAAA,CAAA,8CAAA,EAAA,MAAA,CAAA;;AAApE,WAAA,8CAAA,GAAA;;AA6BC;;AA1Be,EAAA,8CAAA,CAAA,CAAA,GAAf,UAAiB,CAAjB,EAA0C;AACzC,QAAI,8CAA8C,CAAC,CAA/C,IAAoD,IAAxD,EAA8D;AAC7D,MAAA,8CAA8C,CAAC,CAA/C,GAAmD,IAAI,YAAJ,CAAiC,YAAjC,EAA+C,YAA/C,EAA6D,CAA7D,CAAnD;AACA,MAAA,8CAA8C,CAAC,CAA/C,CAAiD,8CAA8C,CAAC,CAAhG;AACA;;AACD,QAAI,CAAC,CAAC,CAAF,CAAI,8CAA8C,CAAC,CAAnD,CAAJ,EAA2D;AAC1D;AACA;;AACD,IAAA,CAAC,CAAC,CAAF,CAAI,8CAA8C,CAAC,CAAnD;AACA,IAAA,kCAAkC,CAAC,CAAnC,CAAqC,CAArC;AACA,IAAA,uCAAuC,CAAC,CAAxC,CAA0C,CAA1C;AACA,IAAA,+CAA+C,CAAC,CAAhD,CAAkD,CAAlD;AACA,GAZc;;AAaR,EAAA,8CAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAwC;AACvC,IAAA,kDAAkD,CAAC,CAAnD,CAAqD,CAArD;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,iBAAP,EAA0B,QAA1B;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,WAAP,EAAoB,8BAApB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,iBAAP,EAA0B,8BAA1B;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,eAAP,EAAwB,mCAAxB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,+BAAP,EAAwC,sCAAxC;AACA,GAPM;;AAQA,EAAA,8CAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAkC;AACjC,IAAA,8CAA8C,CAAC,CAA/C,CAAiD,CAAjD;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,6BAAJ,EAAmC,YAAA;AAAM,aAAA,IAAA,sCAAA,EAAA;AAA4C,KAArF;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,6BAAJ,EAAmC,8CAA8C,CAAC,CAAlF;AACA,GAJM;;AAvBA,EAAA,8CAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,8CAAD,EAAiD,gDAAjD,CAAnB;AACQ,EAAA,8CAAA,CAAA,CAAA,GAAkC,IAAlC;AA2BhB,SAAA,8CAAA;AAAC,CA7BD,CAAoE,IAApE,CAAA;;SAAa,8C","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { ValueBrushScaleDescriptionMetadata } from \"./ValueBrushScaleDescriptionMetadata\";\nimport { ContourValueResolverDescriptionMetadata } from \"./ContourValueResolverDescriptionMetadata\";\nimport { TriangulationStatusEventArgsDescriptionMetadata } from \"./TriangulationStatusEventArgsDescriptionMetadata\";\nimport { GeographicXYTriangulatingSeriesDescriptionMetadata } from \"./GeographicXYTriangulatingSeriesDescriptionMetadata\";\nimport { GeographicContourLineSeriesDescription } from \"./GeographicContourLineSeriesDescription\";\n/**\n * @hidden\n */\nvar GeographicContourLineSeriesDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(GeographicContourLineSeriesDescriptionMetadata, _super);\n    function GeographicContourLineSeriesDescriptionMetadata() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    GeographicContourLineSeriesDescriptionMetadata.b = function (a) {\n        if (GeographicContourLineSeriesDescriptionMetadata.a == null) {\n            GeographicContourLineSeriesDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n            GeographicContourLineSeriesDescriptionMetadata.c(GeographicContourLineSeriesDescriptionMetadata.a);\n        }\n        if (a.g(GeographicContourLineSeriesDescriptionMetadata.a)) {\n            return;\n        }\n        a.s(GeographicContourLineSeriesDescriptionMetadata.a);\n        ValueBrushScaleDescriptionMetadata.d(a);\n        ContourValueResolverDescriptionMetadata.d(a);\n        TriangulationStatusEventArgsDescriptionMetadata.d(a);\n    };\n    GeographicContourLineSeriesDescriptionMetadata.c = function (a) {\n        GeographicXYTriangulatingSeriesDescriptionMetadata.c(a);\n        a.item(\"ValueMemberPath\", \"String\");\n        a.item(\"FillScale\", \"ExportedType:ValueBrushScale\");\n        a.item(\"ActualFillScale\", \"ExportedType:ValueBrushScale\");\n        a.item(\"ValueResolver\", \"ExportedType:ContourValueResolver\");\n        a.item(\"TriangulationStatusChangedRef\", \"EventRef::triangulationStatusChanged\");\n    };\n    GeographicContourLineSeriesDescriptionMetadata.d = function (a) {\n        GeographicContourLineSeriesDescriptionMetadata.b(a);\n        a.u(\"GeographicContourLineSeries\", function () { return new GeographicContourLineSeriesDescription(); });\n        a.t(\"GeographicContourLineSeries\", GeographicContourLineSeriesDescriptionMetadata.a);\n    };\n    GeographicContourLineSeriesDescriptionMetadata.$t = markType(GeographicContourLineSeriesDescriptionMetadata, 'GeographicContourLineSeriesDescriptionMetadata');\n    GeographicContourLineSeriesDescriptionMetadata.a = null;\n    return GeographicContourLineSeriesDescriptionMetadata;\n}(Base));\nexport { GeographicContourLineSeriesDescriptionMetadata };\n//# sourceMappingURL=GeographicContourLineSeriesDescriptionMetadata.js.map\n"]},"metadata":{},"sourceType":"module"}