{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { FormatSpecifierDescriptionMetadata } from \"./FormatSpecifierDescriptionMetadata\";\nimport { NumberFormatSpecifierDescription } from \"./NumberFormatSpecifierDescription\";\n/**\n * @hidden\n */\n\nvar NumberFormatSpecifierDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(NumberFormatSpecifierDescriptionMetadata, _super);\n\n  function NumberFormatSpecifierDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  NumberFormatSpecifierDescriptionMetadata.b = function (a) {\n    if (NumberFormatSpecifierDescriptionMetadata.a == null) {\n      NumberFormatSpecifierDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      NumberFormatSpecifierDescriptionMetadata.c(NumberFormatSpecifierDescriptionMetadata.a);\n    }\n\n    if (a.g(NumberFormatSpecifierDescriptionMetadata.a)) {\n      return;\n    }\n\n    a.s(NumberFormatSpecifierDescriptionMetadata.a);\n  };\n\n  NumberFormatSpecifierDescriptionMetadata.c = function (a) {\n    FormatSpecifierDescriptionMetadata.c(a);\n    a.item(\"Locale\", \"String\");\n    a.item(\"CompactDisplay\", \"String\");\n    a.item(\"Currency\", \"String\");\n    a.item(\"CurrencyDisplay\", \"String\");\n    a.item(\"CurrencySign\", \"String\");\n    a.item(\"LocaleMatcher\", \"String\");\n    a.item(\"Notation\", \"String\");\n    a.item(\"NumberingSystem\", \"String\");\n    a.item(\"SignDisplay\", \"String\");\n    a.item(\"Style\", \"String\");\n    a.item(\"Unit\", \"String\");\n    a.item(\"UnitDisplay\", \"String\");\n    a.item(\"UseGrouping\", \"Boolean\");\n    a.item(\"MinimumIntegerDigits\", \"Number:int\");\n    a.item(\"MinimumFractionDigits\", \"Number:int\");\n    a.item(\"MaximumFractionDigits\", \"Number:int\");\n    a.item(\"MinimumSignificantDigits\", \"Number:int\");\n    a.item(\"MaximumSignificantDigits\", \"Number:int\");\n  };\n\n  NumberFormatSpecifierDescriptionMetadata.d = function (a) {\n    NumberFormatSpecifierDescriptionMetadata.b(a);\n    a.u(\"NumberFormatSpecifier\", function () {\n      return new NumberFormatSpecifierDescription();\n    });\n    a.t(\"NumberFormatSpecifier\", NumberFormatSpecifierDescriptionMetadata.a);\n  };\n\n  NumberFormatSpecifierDescriptionMetadata.$t = markType(NumberFormatSpecifierDescriptionMetadata, 'NumberFormatSpecifierDescriptionMetadata');\n  NumberFormatSpecifierDescriptionMetadata.a = null;\n  return NumberFormatSpecifierDescriptionMetadata;\n}(Base);\n\nexport { NumberFormatSpecifierDescriptionMetadata };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/NumberFormatSpecifierDescriptionMetadata.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { FormatSpecifierDescriptionMetadata } from \"./FormatSpecifierDescriptionMetadata\";\nimport { NumberFormatSpecifierDescription } from \"./NumberFormatSpecifierDescription\";\n/**\n * @hidden\n */\nvar NumberFormatSpecifierDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(NumberFormatSpecifierDescriptionMetadata, _super);\n    function NumberFormatSpecifierDescriptionMetadata() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    NumberFormatSpecifierDescriptionMetadata.b = function (a) {\n        if (NumberFormatSpecifierDescriptionMetadata.a == null) {\n            NumberFormatSpecifierDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n            NumberFormatSpecifierDescriptionMetadata.c(NumberFormatSpecifierDescriptionMetadata.a);\n        }\n        if (a.g(NumberFormatSpecifierDescriptionMetadata.a)) {\n            return;\n        }\n        a.s(NumberFormatSpecifierDescriptionMetadata.a);\n    };\n    NumberFormatSpecifierDescriptionMetadata.c = function (a) {\n        FormatSpecifierDescriptionMetadata.c(a);\n        a.item(\"Locale\", \"String\");\n        a.item(\"CompactDisplay\", \"String\");\n        a.item(\"Currency\", \"String\");\n        a.item(\"CurrencyDisplay\", \"String\");\n        a.item(\"CurrencySign\", \"String\");\n        a.item(\"LocaleMatcher\", \"String\");\n        a.item(\"Notation\", \"String\");\n        a.item(\"NumberingSystem\", \"String\");\n        a.item(\"SignDisplay\", \"String\");\n        a.item(\"Style\", \"String\");\n        a.item(\"Unit\", \"String\");\n        a.item(\"UnitDisplay\", \"String\");\n        a.item(\"UseGrouping\", \"Boolean\");\n        a.item(\"MinimumIntegerDigits\", \"Number:int\");\n        a.item(\"MinimumFractionDigits\", \"Number:int\");\n        a.item(\"MaximumFractionDigits\", \"Number:int\");\n        a.item(\"MinimumSignificantDigits\", \"Number:int\");\n        a.item(\"MaximumSignificantDigits\", \"Number:int\");\n    };\n    NumberFormatSpecifierDescriptionMetadata.d = function (a) {\n        NumberFormatSpecifierDescriptionMetadata.b(a);\n        a.u(\"NumberFormatSpecifier\", function () { return new NumberFormatSpecifierDescription(); });\n        a.t(\"NumberFormatSpecifier\", NumberFormatSpecifierDescriptionMetadata.a);\n    };\n    NumberFormatSpecifierDescriptionMetadata.$t = markType(NumberFormatSpecifierDescriptionMetadata, 'NumberFormatSpecifierDescriptionMetadata');\n    NumberFormatSpecifierDescriptionMetadata.a = null;\n    return NumberFormatSpecifierDescriptionMetadata;\n}(Base));\nexport { NumberFormatSpecifierDescriptionMetadata };\n//# sourceMappingURL=NumberFormatSpecifierDescriptionMetadata.js.map\n"]},"metadata":{},"sourceType":"module"}