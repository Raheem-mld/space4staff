{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { GeographicMapImageryDescriptionMetadata } from \"./GeographicMapImageryDescriptionMetadata\";\nimport { ImageTilesReadyEventArgsDescriptionMetadata } from \"./ImageTilesReadyEventArgsDescriptionMetadata\";\nimport { GeographicShapeSeriesBaseDescriptionMetadata } from \"./GeographicShapeSeriesBaseDescriptionMetadata\";\nimport { GeographicTileSeriesDescription } from \"./GeographicTileSeriesDescription\";\n/**\n * @hidden\n */\n\nvar GeographicTileSeriesDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(GeographicTileSeriesDescriptionMetadata, _super);\n\n  function GeographicTileSeriesDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  GeographicTileSeriesDescriptionMetadata.b = function (a) {\n    if (GeographicTileSeriesDescriptionMetadata.a == null) {\n      GeographicTileSeriesDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      GeographicTileSeriesDescriptionMetadata.c(GeographicTileSeriesDescriptionMetadata.a);\n    }\n\n    if (a.g(GeographicTileSeriesDescriptionMetadata.a)) {\n      return;\n    }\n\n    a.s(GeographicTileSeriesDescriptionMetadata.a);\n    GeographicMapImageryDescriptionMetadata.d(a);\n    ImageTilesReadyEventArgsDescriptionMetadata.d(a);\n  };\n\n  GeographicTileSeriesDescriptionMetadata.c = function (a) {\n    GeographicShapeSeriesBaseDescriptionMetadata.c(a);\n    a.item(\"TileImagery\", \"ExportedType:GeographicMapImagery\");\n    a.item(\"ImageTilesReadyRef\", \"EventRef::imageTilesReady\");\n  };\n\n  GeographicTileSeriesDescriptionMetadata.d = function (a) {\n    GeographicTileSeriesDescriptionMetadata.b(a);\n    a.u(\"GeographicTileSeries\", function () {\n      return new GeographicTileSeriesDescription();\n    });\n    a.t(\"GeographicTileSeries\", GeographicTileSeriesDescriptionMetadata.a);\n  };\n\n  GeographicTileSeriesDescriptionMetadata.$t = markType(GeographicTileSeriesDescriptionMetadata, 'GeographicTileSeriesDescriptionMetadata');\n  GeographicTileSeriesDescriptionMetadata.a = null;\n  return GeographicTileSeriesDescriptionMetadata;\n}(Base);\n\nexport { GeographicTileSeriesDescriptionMetadata };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/GeographicTileSeriesDescriptionMetadata.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,IAAT,EAAe,YAAf,EAAmC,QAAnC,QAAmD,QAAnD;AAEA,SAAS,YAAT,QAA6B,gBAA7B;AACA,SAAS,uCAAT,QAAwD,2CAAxD;AACA,SAAS,2CAAT,QAA4D,+CAA5D;AACA,SAAS,4CAAT,QAA6D,gDAA7D;AACA,SAAS,+BAAT,QAAgD,mCAAhD;AAEA;;AAEG;;AACH,IAAA,uCAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAA6D,EAAA,SAAA,CAAA,uCAAA,EAAA,MAAA,CAAA;;AAA7D,WAAA,uCAAA,GAAA;;AAyBC;;AAtBe,EAAA,uCAAA,CAAA,CAAA,GAAf,UAAiB,CAAjB,EAA0C;AACzC,QAAI,uCAAuC,CAAC,CAAxC,IAA6C,IAAjD,EAAuD;AACtD,MAAA,uCAAuC,CAAC,CAAxC,GAA4C,IAAI,YAAJ,CAAiC,YAAjC,EAA+C,YAA/C,EAA6D,CAA7D,CAA5C;AACA,MAAA,uCAAuC,CAAC,CAAxC,CAA0C,uCAAuC,CAAC,CAAlF;AACA;;AACD,QAAI,CAAC,CAAC,CAAF,CAAI,uCAAuC,CAAC,CAA5C,CAAJ,EAAoD;AACnD;AACA;;AACD,IAAA,CAAC,CAAC,CAAF,CAAI,uCAAuC,CAAC,CAA5C;AACA,IAAA,uCAAuC,CAAC,CAAxC,CAA0C,CAA1C;AACA,IAAA,2CAA2C,CAAC,CAA5C,CAA8C,CAA9C;AACA,GAXc;;AAYR,EAAA,uCAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAwC;AACvC,IAAA,4CAA4C,CAAC,CAA7C,CAA+C,CAA/C;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,aAAP,EAAsB,mCAAtB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,oBAAP,EAA6B,2BAA7B;AACA,GAJM;;AAKA,EAAA,uCAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAkC;AACjC,IAAA,uCAAuC,CAAC,CAAxC,CAA0C,CAA1C;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,sBAAJ,EAA4B,YAAA;AAAM,aAAA,IAAA,+BAAA,EAAA;AAAqC,KAAvE;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,sBAAJ,EAA4B,uCAAuC,CAAC,CAApE;AACA,GAJM;;AAnBA,EAAA,uCAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,uCAAD,EAA0C,yCAA1C,CAAnB;AACQ,EAAA,uCAAA,CAAA,CAAA,GAAkC,IAAlC;AAuBhB,SAAA,uCAAA;AAAC,CAzBD,CAA6D,IAA7D,CAAA;;SAAa,uC","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { GeographicMapImageryDescriptionMetadata } from \"./GeographicMapImageryDescriptionMetadata\";\nimport { ImageTilesReadyEventArgsDescriptionMetadata } from \"./ImageTilesReadyEventArgsDescriptionMetadata\";\nimport { GeographicShapeSeriesBaseDescriptionMetadata } from \"./GeographicShapeSeriesBaseDescriptionMetadata\";\nimport { GeographicTileSeriesDescription } from \"./GeographicTileSeriesDescription\";\n/**\n * @hidden\n */\nvar GeographicTileSeriesDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(GeographicTileSeriesDescriptionMetadata, _super);\n    function GeographicTileSeriesDescriptionMetadata() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    GeographicTileSeriesDescriptionMetadata.b = function (a) {\n        if (GeographicTileSeriesDescriptionMetadata.a == null) {\n            GeographicTileSeriesDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n            GeographicTileSeriesDescriptionMetadata.c(GeographicTileSeriesDescriptionMetadata.a);\n        }\n        if (a.g(GeographicTileSeriesDescriptionMetadata.a)) {\n            return;\n        }\n        a.s(GeographicTileSeriesDescriptionMetadata.a);\n        GeographicMapImageryDescriptionMetadata.d(a);\n        ImageTilesReadyEventArgsDescriptionMetadata.d(a);\n    };\n    GeographicTileSeriesDescriptionMetadata.c = function (a) {\n        GeographicShapeSeriesBaseDescriptionMetadata.c(a);\n        a.item(\"TileImagery\", \"ExportedType:GeographicMapImagery\");\n        a.item(\"ImageTilesReadyRef\", \"EventRef::imageTilesReady\");\n    };\n    GeographicTileSeriesDescriptionMetadata.d = function (a) {\n        GeographicTileSeriesDescriptionMetadata.b(a);\n        a.u(\"GeographicTileSeries\", function () { return new GeographicTileSeriesDescription(); });\n        a.t(\"GeographicTileSeries\", GeographicTileSeriesDescriptionMetadata.a);\n    };\n    GeographicTileSeriesDescriptionMetadata.$t = markType(GeographicTileSeriesDescriptionMetadata, 'GeographicTileSeriesDescriptionMetadata');\n    GeographicTileSeriesDescriptionMetadata.a = null;\n    return GeographicTileSeriesDescriptionMetadata;\n}(Base));\nexport { GeographicTileSeriesDescriptionMetadata };\n//# sourceMappingURL=GeographicTileSeriesDescriptionMetadata.js.map\n"]},"metadata":{},"sourceType":"module"}