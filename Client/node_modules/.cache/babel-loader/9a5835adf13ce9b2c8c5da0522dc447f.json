{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { IgrSplineSeriesBase } from \"./igr-spline-series-base\";\nimport { toPoint, fromPoint } from \"igniteui-react-core\";\n/**\n * Represents one part in a StackedSplineSeries or StackedSplineAreaSeries.\n*/\n\nvar IgrSplineFragmentBase =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(IgrSplineFragmentBase, _super);\n\n  function IgrSplineFragmentBase(props) {\n    return _super.call(this, props) || this;\n  }\n\n  Object.defineProperty(IgrSplineFragmentBase.prototype, \"i\", {\n    /**\n                                 * @hidden\n                                 */\n    get: function () {\n      return this._implementation;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrSplineFragmentBase.prototype, \"isFragment\", {\n    /**\n     * Gets whether the current series is a stack fragment.\n    */\n    get: function () {\n      return this.i.dn;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  IgrSplineFragmentBase.prototype.getSeriesValuePosition = function (world, useInterpolation, skipUnknowns) {\n    var iv = this.i.o2(toPoint(world), useInterpolation, skipUnknowns);\n    return fromPoint(iv);\n  };\n\n  return IgrSplineFragmentBase;\n}(IgrSplineSeriesBase);\n\nexport { IgrSplineFragmentBase };","map":{"version":3,"sources":["../../../../src/igniteui-charts/lib/igr-spline-fragment-base.ts"],"names":[],"mappings":";AAKA,SAAS,mBAAT,QAA+D,0BAA/D;AAOA,SAAqB,OAArB,EAA8B,SAA9B,QAA+C,qBAA/C;AAEA;;AAEE;;AACF,IAAA,qBAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAyH,EAAA,SAAA,CAAA,qBAAA,EAAA,MAAA,CAAA;;AAUxH,WAAA,qBAAA,CAAY,KAAZ,EAAoB;WACgB,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,KAAN,KAAY,I;AAG/C;;AAP2B,EAAA,MAAA,CAAA,cAAA,CAAW,qBAAA,CAAA,SAAX,EAAW,GAAX,EAAY;AAHxC;;AAE+B;SACH,YAAA;AAC3B,aAAO,KAAK,eAAZ;AACA,KAFuC;qBAAA;;AAAA,GAAZ;AAW5B,EAAA,MAAA,CAAA,cAAA,CAAI,qBAAA,CAAA,SAAJ,EAAI,YAAJ,EAAc;AAHd;;AAEE;SACF,YAAA;AACC,aAAQ,KAAK,CAAL,CAAO,EAAf;AACA,KAFa;qBAAA;;AAAA,GAAd;;AAGO,EAAA,qBAAA,CAAA,SAAA,CAAA,sBAAA,GAAP,UAA8B,KAA9B,EAA8C,gBAA9C,EAAyE,YAAzE,EAA8F;AAC7F,QAAI,EAAE,GAAG,KAAK,CAAL,CAAO,EAAP,CAAU,OAAO,CAAC,KAAD,CAAjB,EAA0B,gBAA1B,EAA4C,YAA5C,CAAT;AACA,WAAO,SAAS,CAAC,EAAD,CAAhB;AACA,GAHM;;AAIR,SAAA,qBAAA;AAAC,CAzBD,CAAyH,mBAAzH,CAAA","sourceRoot":"","sourcesContent":["import { __extends } from \"tslib\";\nimport { IgrSplineSeriesBase } from \"./igr-spline-series-base\";\nimport { toPoint, fromPoint } from \"igniteui-react-core\";\n/**\n * Represents one part in a StackedSplineSeries or StackedSplineAreaSeries.\n*/\nvar IgrSplineFragmentBase = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(IgrSplineFragmentBase, _super);\n    function IgrSplineFragmentBase(props) {\n        return _super.call(this, props) || this;\n    }\n    Object.defineProperty(IgrSplineFragmentBase.prototype, \"i\", {\n        /**\n                                     * @hidden\n                                     */\n        get: function () {\n            return this._implementation;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrSplineFragmentBase.prototype, \"isFragment\", {\n        /**\n         * Gets whether the current series is a stack fragment.\n        */\n        get: function () {\n            return this.i.dn;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    IgrSplineFragmentBase.prototype.getSeriesValuePosition = function (world, useInterpolation, skipUnknowns) {\n        var iv = this.i.o2(toPoint(world), useInterpolation, skipUnknowns);\n        return fromPoint(iv);\n    };\n    return IgrSplineFragmentBase;\n}(IgrSplineSeriesBase));\nexport { IgrSplineFragmentBase };\n//# sourceMappingURL=igr-spline-fragment-base.js.map\n"]},"metadata":{},"sourceType":"module"}