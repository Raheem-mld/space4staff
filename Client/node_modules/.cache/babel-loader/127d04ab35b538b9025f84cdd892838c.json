{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { AsyncCompletedEventArgsDescriptionMetadata } from \"./AsyncCompletedEventArgsDescriptionMetadata\";\nimport { ShapeFilterRecordEventArgsDescriptionMetadata } from \"./ShapeFilterRecordEventArgsDescriptionMetadata\";\nimport { ShapeDataSourceDescription } from \"./ShapeDataSourceDescription\";\n/**\n * @hidden\n */\n\nvar ShapeDataSourceDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(ShapeDataSourceDescriptionMetadata, _super);\n\n  function ShapeDataSourceDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  ShapeDataSourceDescriptionMetadata.b = function (a) {\n    if (ShapeDataSourceDescriptionMetadata.a == null) {\n      ShapeDataSourceDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      ShapeDataSourceDescriptionMetadata.c(ShapeDataSourceDescriptionMetadata.a);\n    }\n\n    if (a.g(ShapeDataSourceDescriptionMetadata.a)) {\n      return;\n    }\n\n    a.s(ShapeDataSourceDescriptionMetadata.a);\n    AsyncCompletedEventArgsDescriptionMetadata.d(a);\n    ShapeFilterRecordEventArgsDescriptionMetadata.d(a);\n  };\n\n  ShapeDataSourceDescriptionMetadata.c = function (a) {\n    a.item(\"WorldRect\", \"Rect\");\n    a.item(\"ComputedWorldRect\", \"Rect\");\n    a.item(\"DeferImportCompleted\", \"Boolean\");\n    a.item(\"ShapefileSource\", \"String\");\n    a.item(\"DatabaseSource\", \"String\");\n    a.item(\"ImportPendingRef\", \"EventRef::importPending\");\n    a.item(\"ImportCompletedRef\", \"EventRef::importCompleted\");\n    a.item(\"FilterRef\", \"EventRef::filter\");\n  };\n\n  ShapeDataSourceDescriptionMetadata.d = function (a) {\n    ShapeDataSourceDescriptionMetadata.b(a);\n    a.u(\"ShapeDataSource\", function () {\n      return new ShapeDataSourceDescription();\n    });\n    a.t(\"ShapeDataSource\", ShapeDataSourceDescriptionMetadata.a);\n  };\n\n  ShapeDataSourceDescriptionMetadata.$t = markType(ShapeDataSourceDescriptionMetadata, 'ShapeDataSourceDescriptionMetadata');\n  ShapeDataSourceDescriptionMetadata.a = null;\n  return ShapeDataSourceDescriptionMetadata;\n}(Base);\n\nexport { ShapeDataSourceDescriptionMetadata };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/ShapeDataSourceDescriptionMetadata.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,IAAT,EAAe,YAAf,EAAmC,QAAnC,QAAmD,QAAnD;AAEA,SAAS,YAAT,QAA6B,gBAA7B;AACA,SAAS,0CAAT,QAA2D,8CAA3D;AACA,SAAS,6CAAT,QAA8D,iDAA9D;AACA,SAAS,0BAAT,QAA2C,8BAA3C;AAEA;;AAEG;;AACH,IAAA,kCAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAwD,EAAA,SAAA,CAAA,kCAAA,EAAA,MAAA,CAAA;;AAAxD,WAAA,kCAAA,GAAA;;AA8BC;;AA3Be,EAAA,kCAAA,CAAA,CAAA,GAAf,UAAiB,CAAjB,EAA0C;AACzC,QAAI,kCAAkC,CAAC,CAAnC,IAAwC,IAA5C,EAAkD;AACjD,MAAA,kCAAkC,CAAC,CAAnC,GAAuC,IAAI,YAAJ,CAAiC,YAAjC,EAA+C,YAA/C,EAA6D,CAA7D,CAAvC;AACA,MAAA,kCAAkC,CAAC,CAAnC,CAAqC,kCAAkC,CAAC,CAAxE;AACA;;AACD,QAAI,CAAC,CAAC,CAAF,CAAI,kCAAkC,CAAC,CAAvC,CAAJ,EAA+C;AAC9C;AACA;;AACD,IAAA,CAAC,CAAC,CAAF,CAAI,kCAAkC,CAAC,CAAvC;AACA,IAAA,0CAA0C,CAAC,CAA3C,CAA6C,CAA7C;AACA,IAAA,6CAA6C,CAAC,CAA9C,CAAgD,CAAhD;AACA,GAXc;;AAYR,EAAA,kCAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAwC;AACvC,IAAA,CAAC,CAAC,IAAF,CAAO,WAAP,EAAoB,MAApB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,mBAAP,EAA4B,MAA5B;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,sBAAP,EAA+B,SAA/B;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,iBAAP,EAA0B,QAA1B;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,gBAAP,EAAyB,QAAzB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,kBAAP,EAA2B,yBAA3B;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,oBAAP,EAA6B,2BAA7B;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,WAAP,EAAoB,kBAApB;AACA,GATM;;AAUA,EAAA,kCAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAkC;AACjC,IAAA,kCAAkC,CAAC,CAAnC,CAAqC,CAArC;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,iBAAJ,EAAuB,YAAA;AAAM,aAAA,IAAA,0BAAA,EAAA;AAAgC,KAA7D;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,iBAAJ,EAAuB,kCAAkC,CAAC,CAA1D;AACA,GAJM;;AAxBA,EAAA,kCAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,kCAAD,EAAqC,oCAArC,CAAnB;AACQ,EAAA,kCAAA,CAAA,CAAA,GAAkC,IAAlC;AA4BhB,SAAA,kCAAA;AAAC,CA9BD,CAAwD,IAAxD,CAAA;;SAAa,kC","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { AsyncCompletedEventArgsDescriptionMetadata } from \"./AsyncCompletedEventArgsDescriptionMetadata\";\nimport { ShapeFilterRecordEventArgsDescriptionMetadata } from \"./ShapeFilterRecordEventArgsDescriptionMetadata\";\nimport { ShapeDataSourceDescription } from \"./ShapeDataSourceDescription\";\n/**\n * @hidden\n */\nvar ShapeDataSourceDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(ShapeDataSourceDescriptionMetadata, _super);\n    function ShapeDataSourceDescriptionMetadata() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ShapeDataSourceDescriptionMetadata.b = function (a) {\n        if (ShapeDataSourceDescriptionMetadata.a == null) {\n            ShapeDataSourceDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n            ShapeDataSourceDescriptionMetadata.c(ShapeDataSourceDescriptionMetadata.a);\n        }\n        if (a.g(ShapeDataSourceDescriptionMetadata.a)) {\n            return;\n        }\n        a.s(ShapeDataSourceDescriptionMetadata.a);\n        AsyncCompletedEventArgsDescriptionMetadata.d(a);\n        ShapeFilterRecordEventArgsDescriptionMetadata.d(a);\n    };\n    ShapeDataSourceDescriptionMetadata.c = function (a) {\n        a.item(\"WorldRect\", \"Rect\");\n        a.item(\"ComputedWorldRect\", \"Rect\");\n        a.item(\"DeferImportCompleted\", \"Boolean\");\n        a.item(\"ShapefileSource\", \"String\");\n        a.item(\"DatabaseSource\", \"String\");\n        a.item(\"ImportPendingRef\", \"EventRef::importPending\");\n        a.item(\"ImportCompletedRef\", \"EventRef::importCompleted\");\n        a.item(\"FilterRef\", \"EventRef::filter\");\n    };\n    ShapeDataSourceDescriptionMetadata.d = function (a) {\n        ShapeDataSourceDescriptionMetadata.b(a);\n        a.u(\"ShapeDataSource\", function () { return new ShapeDataSourceDescription(); });\n        a.t(\"ShapeDataSource\", ShapeDataSourceDescriptionMetadata.a);\n    };\n    ShapeDataSourceDescriptionMetadata.$t = markType(ShapeDataSourceDescriptionMetadata, 'ShapeDataSourceDescriptionMetadata');\n    ShapeDataSourceDescriptionMetadata.a = null;\n    return ShapeDataSourceDescriptionMetadata;\n}(Base));\nexport { ShapeDataSourceDescriptionMetadata };\n//# sourceMappingURL=ShapeDataSourceDescriptionMetadata.js.map\n"]},"metadata":{},"sourceType":"module"}