{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends, __values } from \"tslib\";\nimport { Base, Number_$type, fromEnum, markType } from \"igniteui-react-core\";\nimport { Dictionary$2 } from \"igniteui-react-core\";\nimport { List$1 } from \"igniteui-react-core\";\n/**\n * @hidden\n */\n\nvar SliceSelectionManager =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(SliceSelectionManager, _super);\n\n  function SliceSelectionManager() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.e = new Dictionary$2(Number_$type, Base.$, 0);\n    return _this;\n  }\n\n  SliceSelectionManager.prototype.k = function (a, b) {\n    if (this.e.containsKey(a)) {\n      this.e.removeItem(a);\n    } else {\n      this.e.item(a, b);\n    }\n  };\n\n  SliceSelectionManager.prototype.c = function (a) {\n    return this.e.containsKey(a);\n  };\n\n  SliceSelectionManager.prototype.b = function () {\n    return this.e.count > 0;\n  };\n\n  SliceSelectionManager.prototype.d = function (a) {\n    return !this.c(a) && this.b();\n  };\n\n  SliceSelectionManager.prototype.g = function (a, b) {\n    switch (a.c) {\n      case 3:\n        break;\n\n      case 1:\n        this.j(a.g, a.f);\n        break;\n\n      case 0:\n        this.h(a.g, a.f);\n        break;\n\n      case 2:\n        for (var c = 0; c < a.f; c++) {\n          if (this.e.containsKey(c)) {\n            this.e.item(c, b.a.item(c));\n          }\n        }\n\n        break;\n\n      case 4:\n        this.f();\n        break;\n    }\n  };\n\n  SliceSelectionManager.prototype.h = function (a, b) {\n    var e_1, _a, e_2, _b;\n\n    var c = new List$1(Number_$type, 0);\n    var d = new List$1(Base.$, 0);\n\n    try {\n      for (var _c = __values(fromEnum(this.e.keys)), _d = _c.next(); !_d.done; _d = _c.next()) {\n        var e = _d.value;\n\n        if (e >= a) {\n          c.add(e);\n          d.add1(this.e.item(e));\n        }\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n\n    var f = 0;\n\n    try {\n      for (var _e = __values(fromEnum(c)), _f = _e.next(); !_f.done; _f = _e.next()) {\n        var g = _f.value;\n        this.e.removeItem(g);\n\n        if (g - b > a) {\n          this.e.item(g - b, d._inner[f]);\n        }\n\n        f++;\n      }\n    } catch (e_2_1) {\n      e_2 = {\n        error: e_2_1\n      };\n    } finally {\n      try {\n        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n      } finally {\n        if (e_2) throw e_2.error;\n      }\n    }\n  };\n\n  SliceSelectionManager.prototype.j = function (a, b) {\n    var e_3, _a, e_4, _b;\n\n    var c = new List$1(Number_$type, 0);\n    var d = new List$1(Base.$, 0);\n\n    try {\n      for (var _c = __values(fromEnum(this.e.keys)), _d = _c.next(); !_d.done; _d = _c.next()) {\n        var e = _d.value;\n\n        if (e >= a) {\n          c.add(e);\n          d.add1(this.e.item(e));\n        }\n      }\n    } catch (e_3_1) {\n      e_3 = {\n        error: e_3_1\n      };\n    } finally {\n      try {\n        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n      } finally {\n        if (e_3) throw e_3.error;\n      }\n    }\n\n    var f = 0;\n\n    try {\n      for (var _e = __values(fromEnum(c)), _f = _e.next(); !_f.done; _f = _e.next()) {\n        var g = _f.value;\n        this.e.removeItem(g);\n        this.e.item(g + b, d._inner[f]);\n        f++;\n      }\n    } catch (e_4_1) {\n      e_4 = {\n        error: e_4_1\n      };\n    } finally {\n      try {\n        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n      } finally {\n        if (e_4) throw e_4.error;\n      }\n    }\n  };\n\n  SliceSelectionManager.prototype.f = function () {\n    this.e.clear();\n  };\n\n  SliceSelectionManager.prototype.a = function () {\n    var e_5, _a;\n\n    var a = new Array(this.e.count);\n    var b = 0;\n\n    try {\n      for (var _b = __values(fromEnum(this.e.keys)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var c = _c.value;\n        a[b] = c;\n        b++;\n      }\n    } catch (e_5_1) {\n      e_5 = {\n        error: e_5_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_5) throw e_5.error;\n      }\n    }\n\n    return a;\n  };\n\n  SliceSelectionManager.prototype.i = function (a, b) {\n    this.f();\n\n    for (var d = 0; d < a.length; d++) {\n      var c = a[d];\n      this.k(c, b.a.item(c));\n    }\n  };\n\n  SliceSelectionManager.$t = markType(SliceSelectionManager, 'SliceSelectionManager');\n  return SliceSelectionManager;\n}(Base);\n\nexport { SliceSelectionManager };","map":{"version":3,"sources":["../../../../src/igniteui-charts/lib/SliceSelectionManager.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends, __values } from \"tslib\";\nimport { Base, Number_$type, fromEnum, markType } from \"igniteui-react-core\";\nimport { Dictionary$2 } from \"igniteui-react-core\";\nimport { List$1 } from \"igniteui-react-core\";\n/**\n * @hidden\n */\nvar SliceSelectionManager = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(SliceSelectionManager, _super);\n    function SliceSelectionManager() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.e = new Dictionary$2(Number_$type, Base.$, 0);\n        return _this;\n    }\n    SliceSelectionManager.prototype.k = function (a, b) {\n        if (this.e.containsKey(a)) {\n            this.e.removeItem(a);\n        }\n        else {\n            this.e.item(a, b);\n        }\n    };\n    SliceSelectionManager.prototype.c = function (a) {\n        return this.e.containsKey(a);\n    };\n    SliceSelectionManager.prototype.b = function () {\n        return this.e.count > 0;\n    };\n    SliceSelectionManager.prototype.d = function (a) {\n        return !this.c(a) && this.b();\n    };\n    SliceSelectionManager.prototype.g = function (a, b) {\n        switch (a.c) {\n            case 3: break;\n            case 1:\n                this.j(a.g, a.f);\n                break;\n            case 0:\n                this.h(a.g, a.f);\n                break;\n            case 2:\n                for (var c = 0; c < a.f; c++) {\n                    if (this.e.containsKey(c)) {\n                        this.e.item(c, b.a.item(c));\n                    }\n                }\n                break;\n            case 4:\n                this.f();\n                break;\n        }\n    };\n    SliceSelectionManager.prototype.h = function (a, b) {\n        var e_1, _a, e_2, _b;\n        var c = new List$1(Number_$type, 0);\n        var d = new List$1(Base.$, 0);\n        try {\n            for (var _c = __values(fromEnum(this.e.keys)), _d = _c.next(); !_d.done; _d = _c.next()) {\n                var e = _d.value;\n                if (e >= a) {\n                    c.add(e);\n                    d.add1(this.e.item(e));\n                }\n            }\n        }\n        catch (e_1_1) {\n            e_1 = { error: e_1_1 };\n        }\n        finally {\n            try {\n                if (_d && !_d.done && (_a = _c.return))\n                    _a.call(_c);\n            }\n            finally {\n                if (e_1)\n                    throw e_1.error;\n            }\n        }\n        var f = 0;\n        try {\n            for (var _e = __values(fromEnum(c)), _f = _e.next(); !_f.done; _f = _e.next()) {\n                var g = _f.value;\n                this.e.removeItem(g);\n                if (g - b > a) {\n                    this.e.item(g - b, d._inner[f]);\n                }\n                f++;\n            }\n        }\n        catch (e_2_1) {\n            e_2 = { error: e_2_1 };\n        }\n        finally {\n            try {\n                if (_f && !_f.done && (_b = _e.return))\n                    _b.call(_e);\n            }\n            finally {\n                if (e_2)\n                    throw e_2.error;\n            }\n        }\n    };\n    SliceSelectionManager.prototype.j = function (a, b) {\n        var e_3, _a, e_4, _b;\n        var c = new List$1(Number_$type, 0);\n        var d = new List$1(Base.$, 0);\n        try {\n            for (var _c = __values(fromEnum(this.e.keys)), _d = _c.next(); !_d.done; _d = _c.next()) {\n                var e = _d.value;\n                if (e >= a) {\n                    c.add(e);\n                    d.add1(this.e.item(e));\n                }\n            }\n        }\n        catch (e_3_1) {\n            e_3 = { error: e_3_1 };\n        }\n        finally {\n            try {\n                if (_d && !_d.done && (_a = _c.return))\n                    _a.call(_c);\n            }\n            finally {\n                if (e_3)\n                    throw e_3.error;\n            }\n        }\n        var f = 0;\n        try {\n            for (var _e = __values(fromEnum(c)), _f = _e.next(); !_f.done; _f = _e.next()) {\n                var g = _f.value;\n                this.e.removeItem(g);\n                this.e.item(g + b, d._inner[f]);\n                f++;\n            }\n        }\n        catch (e_4_1) {\n            e_4 = { error: e_4_1 };\n        }\n        finally {\n            try {\n                if (_f && !_f.done && (_b = _e.return))\n                    _b.call(_e);\n            }\n            finally {\n                if (e_4)\n                    throw e_4.error;\n            }\n        }\n    };\n    SliceSelectionManager.prototype.f = function () {\n        this.e.clear();\n    };\n    SliceSelectionManager.prototype.a = function () {\n        var e_5, _a;\n        var a = new Array(this.e.count);\n        var b = 0;\n        try {\n            for (var _b = __values(fromEnum(this.e.keys)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var c = _c.value;\n                a[b] = c;\n                b++;\n            }\n        }\n        catch (e_5_1) {\n            e_5 = { error: e_5_1 };\n        }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return))\n                    _a.call(_b);\n            }\n            finally {\n                if (e_5)\n                    throw e_5.error;\n            }\n        }\n        return a;\n    };\n    SliceSelectionManager.prototype.i = function (a, b) {\n        this.f();\n        for (var d = 0; d < a.length; d++) {\n            var c = a[d];\n            this.k(c, b.a.item(c));\n        }\n    };\n    SliceSelectionManager.$t = markType(SliceSelectionManager, 'SliceSelectionManager');\n    return SliceSelectionManager;\n}(Base));\nexport { SliceSelectionManager };\n//# sourceMappingURL=SliceSelectionManager.js.map\n"]},"metadata":{},"sourceType":"module"}