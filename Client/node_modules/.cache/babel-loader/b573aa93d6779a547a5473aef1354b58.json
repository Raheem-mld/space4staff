{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { XYChartDescriptionMetadata } from \"./XYChartDescriptionMetadata\";\nimport { CategoryChartDescription } from \"./CategoryChartDescription\";\n/**\n * @hidden\n */\n\nvar CategoryChartDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(CategoryChartDescriptionMetadata, _super);\n\n  function CategoryChartDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  CategoryChartDescriptionMetadata.e = function (a) {\n    a.item(\"TooltipTemplateRef\", \"(w:ToolTip)DataRef:String\");\n    a.item(\"_qualifiedName\", \"String:Infragistics.Controls.Charts.XamCategoryChart\");\n    a.item(\"Width\", \"(w:Width/DimensionTransform,xam:Width/DimensionTransform)String\");\n    a.item(\"Height\", \"(w:Height/DimensionTransform,xam:Height/DimensionTransform)String\");\n    a.item(\"Background\", \"(wf:BackColor/ColorTransform)Brush\");\n  };\n\n  CategoryChartDescriptionMetadata.b = function (a) {\n    if (CategoryChartDescriptionMetadata.a == null) {\n      CategoryChartDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      CategoryChartDescriptionMetadata.c(CategoryChartDescriptionMetadata.a);\n    }\n\n    if (a.g(CategoryChartDescriptionMetadata.a)) {\n      return;\n    }\n\n    a.s(CategoryChartDescriptionMetadata.a);\n  };\n\n  CategoryChartDescriptionMetadata.c = function (a) {\n    XYChartDescriptionMetadata.c(a);\n    a.item(\"TransitionInDuration\", \"Number:int\");\n    a.item(\"TransitionInEasingFunctionRef\", \"(w:TransitionInEasingFunction,wf:TransitionInEasingFunction)MethodRef\");\n    a.item(\"ChartType\", \"ExportedType:string:CategoryChartType\");\n    a.item(\"ChartType@names\", \"Line;Area;Column;Point;StepLine;StepArea;Spline;SplineArea;Waterfall;Auto\");\n    a.item(\"MarkerCollisionAvoidance\", \"ExportedType:string:CategorySeriesMarkerCollisionAvoidance\");\n    a.item(\"MarkerCollisionAvoidance@names\", \"None;Omit\");\n    a.item(\"IsTransitionInEnabled\", \"Boolean\");\n    a.item(\"TransitionInMode\", \"ExportedType:string:CategoryTransitionInMode\");\n    a.item(\"TransitionInMode@names\", \"Auto;FromZero;SweepFromLeft;SweepFromRight;SweepFromTop;SweepFromBottom;SweepFromCenter;AccordionFromLeft;AccordionFromRight;AccordionFromTop;AccordionFromBottom;Expand;SweepFromCategoryAxisMinimum;SweepFromCategoryAxisMaximum;SweepFromValueAxisMinimum;SweepFromValueAxisMaximum;AccordionFromCategoryAxisMinimum;AccordionFromCategoryAxisMaximum;AccordionFromValueAxisMinimum;AccordionFromValueAxisMaximum\");\n    a.item(\"TransitionInSpeedType\", \"ExportedType:string:TransitionInSpeedType\");\n    a.item(\"TransitionInSpeedType@names\", \"Auto;Normal;ValueScaled;IndexScaled;Random\");\n    a.item(\"XAxisInterval\", \"Number:double\");\n    a.item(\"XAxisMinorInterval\", \"Number:double\");\n    a.item(\"XAxisGap\", \"Number:double\");\n    a.item(\"XAxisOverlap\", \"Number:double\");\n    a.item(\"YAxisInterval\", \"Number:double\");\n    a.item(\"YAxisIsLogarithmic\", \"Boolean\");\n    a.item(\"YAxisLogarithmBase\", \"Number:int\");\n    a.item(\"YAxisMinimumValue\", \"Number:double\");\n    a.item(\"YAxisMaximumValue\", \"Number:double\");\n    a.item(\"YAxisMinorInterval\", \"Number:double\");\n    a.item(\"NegativeBrushes\", \"BrushCollection:string\");\n    a.item(\"NegativeOutlines\", \"BrushCollection:string\");\n    a.item(\"YAxisAbbreviateLargeNumbers\", \"Boolean\");\n    a.item(\"IsCategoryHighlightingEnabled\", \"Boolean\");\n    a.item(\"IsItemHighlightingEnabled\", \"Boolean\");\n    CategoryChartDescriptionMetadata.e(a);\n  };\n\n  CategoryChartDescriptionMetadata.d = function (a) {\n    CategoryChartDescriptionMetadata.b(a);\n    a.u(\"CategoryChart\", function () {\n      return new CategoryChartDescription();\n    });\n    a.t(\"CategoryChart\", CategoryChartDescriptionMetadata.a);\n  };\n\n  CategoryChartDescriptionMetadata.$t = markType(CategoryChartDescriptionMetadata, 'CategoryChartDescriptionMetadata');\n  CategoryChartDescriptionMetadata.a = null;\n  return CategoryChartDescriptionMetadata;\n}(Base);\n\nexport { CategoryChartDescriptionMetadata };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/CategoryChartDescriptionMetadata.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { XYChartDescriptionMetadata } from \"./XYChartDescriptionMetadata\";\nimport { CategoryChartDescription } from \"./CategoryChartDescription\";\n/**\n * @hidden\n */\nvar CategoryChartDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(CategoryChartDescriptionMetadata, _super);\n    function CategoryChartDescriptionMetadata() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    CategoryChartDescriptionMetadata.e = function (a) {\n        a.item(\"TooltipTemplateRef\", \"(w:ToolTip)DataRef:String\");\n        a.item(\"_qualifiedName\", \"String:Infragistics.Controls.Charts.XamCategoryChart\");\n        a.item(\"Width\", \"(w:Width/DimensionTransform,xam:Width/DimensionTransform)String\");\n        a.item(\"Height\", \"(w:Height/DimensionTransform,xam:Height/DimensionTransform)String\");\n        a.item(\"Background\", \"(wf:BackColor/ColorTransform)Brush\");\n    };\n    CategoryChartDescriptionMetadata.b = function (a) {\n        if (CategoryChartDescriptionMetadata.a == null) {\n            CategoryChartDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n            CategoryChartDescriptionMetadata.c(CategoryChartDescriptionMetadata.a);\n        }\n        if (a.g(CategoryChartDescriptionMetadata.a)) {\n            return;\n        }\n        a.s(CategoryChartDescriptionMetadata.a);\n    };\n    CategoryChartDescriptionMetadata.c = function (a) {\n        XYChartDescriptionMetadata.c(a);\n        a.item(\"TransitionInDuration\", \"Number:int\");\n        a.item(\"TransitionInEasingFunctionRef\", \"(w:TransitionInEasingFunction,wf:TransitionInEasingFunction)MethodRef\");\n        a.item(\"ChartType\", \"ExportedType:string:CategoryChartType\");\n        a.item(\"ChartType@names\", \"Line;Area;Column;Point;StepLine;StepArea;Spline;SplineArea;Waterfall;Auto\");\n        a.item(\"MarkerCollisionAvoidance\", \"ExportedType:string:CategorySeriesMarkerCollisionAvoidance\");\n        a.item(\"MarkerCollisionAvoidance@names\", \"None;Omit\");\n        a.item(\"IsTransitionInEnabled\", \"Boolean\");\n        a.item(\"TransitionInMode\", \"ExportedType:string:CategoryTransitionInMode\");\n        a.item(\"TransitionInMode@names\", \"Auto;FromZero;SweepFromLeft;SweepFromRight;SweepFromTop;SweepFromBottom;SweepFromCenter;AccordionFromLeft;AccordionFromRight;AccordionFromTop;AccordionFromBottom;Expand;SweepFromCategoryAxisMinimum;SweepFromCategoryAxisMaximum;SweepFromValueAxisMinimum;SweepFromValueAxisMaximum;AccordionFromCategoryAxisMinimum;AccordionFromCategoryAxisMaximum;AccordionFromValueAxisMinimum;AccordionFromValueAxisMaximum\");\n        a.item(\"TransitionInSpeedType\", \"ExportedType:string:TransitionInSpeedType\");\n        a.item(\"TransitionInSpeedType@names\", \"Auto;Normal;ValueScaled;IndexScaled;Random\");\n        a.item(\"XAxisInterval\", \"Number:double\");\n        a.item(\"XAxisMinorInterval\", \"Number:double\");\n        a.item(\"XAxisGap\", \"Number:double\");\n        a.item(\"XAxisOverlap\", \"Number:double\");\n        a.item(\"YAxisInterval\", \"Number:double\");\n        a.item(\"YAxisIsLogarithmic\", \"Boolean\");\n        a.item(\"YAxisLogarithmBase\", \"Number:int\");\n        a.item(\"YAxisMinimumValue\", \"Number:double\");\n        a.item(\"YAxisMaximumValue\", \"Number:double\");\n        a.item(\"YAxisMinorInterval\", \"Number:double\");\n        a.item(\"NegativeBrushes\", \"BrushCollection:string\");\n        a.item(\"NegativeOutlines\", \"BrushCollection:string\");\n        a.item(\"YAxisAbbreviateLargeNumbers\", \"Boolean\");\n        a.item(\"IsCategoryHighlightingEnabled\", \"Boolean\");\n        a.item(\"IsItemHighlightingEnabled\", \"Boolean\");\n        CategoryChartDescriptionMetadata.e(a);\n    };\n    CategoryChartDescriptionMetadata.d = function (a) {\n        CategoryChartDescriptionMetadata.b(a);\n        a.u(\"CategoryChart\", function () { return new CategoryChartDescription(); });\n        a.t(\"CategoryChart\", CategoryChartDescriptionMetadata.a);\n    };\n    CategoryChartDescriptionMetadata.$t = markType(CategoryChartDescriptionMetadata, 'CategoryChartDescriptionMetadata');\n    CategoryChartDescriptionMetadata.a = null;\n    return CategoryChartDescriptionMetadata;\n}(Base));\nexport { CategoryChartDescriptionMetadata };\n//# sourceMappingURL=CategoryChartDescriptionMetadata.js.map\n"]},"metadata":{},"sourceType":"module"}