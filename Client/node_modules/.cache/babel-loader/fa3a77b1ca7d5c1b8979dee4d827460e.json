{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, markType } from \"igniteui-react-core\";\nimport { DVContainer } from \"igniteui-react-core\";\nimport { IAnnotationInfoProvider_$type } from \"./IAnnotationInfoProvider\";\nimport { AnnotationInfoProvider } from \"./AnnotationInfoProvider\";\nimport { IAxisAnnotationManager_$type } from \"./IAxisAnnotationManager\";\nimport { AxisAnnotationManager } from \"./AxisAnnotationManager\";\n/**\n * @hidden\n */\n\nvar AnnotationFactoryManager =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(AnnotationFactoryManager, _super);\n\n  function AnnotationFactoryManager() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  AnnotationFactoryManager.register = function () {\n    if (!AnnotationFactoryManager.a) {\n      DVContainer.instance.registerFactory(IAnnotationInfoProvider_$type, function () {\n        return new AnnotationInfoProvider();\n      });\n      DVContainer.instance.registerFactory(IAxisAnnotationManager_$type, function () {\n        return new AxisAnnotationManager();\n      });\n      AnnotationFactoryManager.a = true;\n    }\n  };\n\n  AnnotationFactoryManager.$t = markType(AnnotationFactoryManager, 'AnnotationFactoryManager');\n  AnnotationFactoryManager.a = false;\n  return AnnotationFactoryManager;\n}(Base);\n\nexport { AnnotationFactoryManager };","map":{"version":3,"sources":["../../../../src/igniteui-charts/lib/AnnotationFactoryManager.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,IAAT,EAAqB,QAArB,QAAqC,qBAArC;AACA,SAAS,WAAT,QAA4B,qBAA5B;AACA,SAAkC,6BAAlC,QAAuE,2BAAvE;AACA,SAAS,sBAAT,QAAuC,0BAAvC;AACA,SAAiC,4BAAjC,QAAqE,0BAArE;AACA,SAAS,qBAAT,QAAsC,yBAAtC;AAEA;;AAEG;;AACH,IAAA,wBAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAA8C,EAAA,SAAA,CAAA,wBAAA,EAAA,MAAA,CAAA;;AAA9C,WAAA,wBAAA,GAAA;;AAUC;;AAPO,EAAA,wBAAA,CAAA,QAAA,GAAP,YAAA;AACC,QAAI,CAAC,wBAAwB,CAAC,CAA9B,EAAiC;AAChC,MAAA,WAAW,CAAC,QAAZ,CAAqB,eAArB,CAAqC,6BAArC,EAAoE,YAAA;AAAM,eAAA,IAAA,sBAAA,EAAA;AAA4B,OAAtG;AACA,MAAA,WAAW,CAAC,QAAZ,CAAqB,eAArB,CAAqC,4BAArC,EAAmE,YAAA;AAAM,eAAA,IAAA,qBAAA,EAAA;AAA2B,OAApG;AACA,MAAA,wBAAwB,CAAC,CAAzB,GAA6B,IAA7B;AACA;AACD,GANM;;AAFA,EAAA,wBAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,wBAAD,EAA2B,0BAA3B,CAAnB;AACQ,EAAA,wBAAA,CAAA,CAAA,GAAa,KAAb;AAQhB,SAAA,wBAAA;AAAC,CAVD,CAA8C,IAA9C,CAAA;;SAAa,wB","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, markType } from \"igniteui-react-core\";\nimport { DVContainer } from \"igniteui-react-core\";\nimport { IAnnotationInfoProvider_$type } from \"./IAnnotationInfoProvider\";\nimport { AnnotationInfoProvider } from \"./AnnotationInfoProvider\";\nimport { IAxisAnnotationManager_$type } from \"./IAxisAnnotationManager\";\nimport { AxisAnnotationManager } from \"./AxisAnnotationManager\";\n/**\n * @hidden\n */\nvar AnnotationFactoryManager = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(AnnotationFactoryManager, _super);\n    function AnnotationFactoryManager() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    AnnotationFactoryManager.register = function () {\n        if (!AnnotationFactoryManager.a) {\n            DVContainer.instance.registerFactory(IAnnotationInfoProvider_$type, function () { return new AnnotationInfoProvider(); });\n            DVContainer.instance.registerFactory(IAxisAnnotationManager_$type, function () { return new AxisAnnotationManager(); });\n            AnnotationFactoryManager.a = true;\n        }\n    };\n    AnnotationFactoryManager.$t = markType(AnnotationFactoryManager, 'AnnotationFactoryManager');\n    AnnotationFactoryManager.a = false;\n    return AnnotationFactoryManager;\n}(Base));\nexport { AnnotationFactoryManager };\n//# sourceMappingURL=AnnotationFactoryManager.js.map\n"]},"metadata":{},"sourceType":"module"}