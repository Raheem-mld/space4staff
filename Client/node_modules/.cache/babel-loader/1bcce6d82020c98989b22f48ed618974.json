{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { HorizontalStackedSeriesBaseDescription } from \"./HorizontalStackedSeriesBaseDescription\";\nimport { markType } from \"./type\";\n/**\n * @hidden\n */\n\nvar StackedSplineSeriesDescription =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(StackedSplineSeriesDescription, _super);\n\n  function StackedSplineSeriesDescription() {\n    var _this = _super.call(this) || this;\n\n    _this.d9 = false;\n    return _this;\n  }\n\n  StackedSplineSeriesDescription.prototype.get_type = function () {\n    return \"StackedSplineSeries\";\n  };\n\n  Object.defineProperty(StackedSplineSeriesDescription.prototype, \"isSplineShapePartOfRange\", {\n    get: function () {\n      return this.d9;\n    },\n    set: function (a) {\n      this.d9 = a;\n      this.e(\"IsSplineShapePartOfRange\");\n    },\n    enumerable: false,\n    configurable: true\n  });\n  StackedSplineSeriesDescription.$t = markType(StackedSplineSeriesDescription, 'StackedSplineSeriesDescription', HorizontalStackedSeriesBaseDescription.$);\n  return StackedSplineSeriesDescription;\n}(HorizontalStackedSeriesBaseDescription);\n\nexport { StackedSplineSeriesDescription };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/StackedSplineSeriesDescription.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,sCAAT,QAAuD,0CAAvD;AAEA,SAAqB,QAArB,QAAqC,QAArC;AAEA;;AAEG;;AACH,IAAA,8BAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAoD,EAAA,SAAA,CAAA,8BAAA,EAAA,MAAA,CAAA;;AAKnD,WAAA,8BAAA,GAAA;AAAA,QAAA,KAAA,GACC,MAAA,CAAA,IAAA,CAAA,IAAA,KAAO,IADR;;AAGQ,IAAA,KAAA,CAAA,EAAA,GAAc,KAAd;;AADP;;AALS,EAAA,8BAAA,CAAA,SAAA,CAAA,QAAA,GAAV,YAAA;AACC,WAAO,qBAAP;AACA,GAFS;;AAOV,EAAA,MAAA,CAAA,cAAA,CAAI,8BAAA,CAAA,SAAJ,EAAI,0BAAJ,EAA4B;SAA5B,YAAA;AACC,aAAO,KAAK,EAAZ;AACA,KAF2B;SAG5B,UAA6B,CAA7B,EAAuC;AACtC,WAAK,EAAL,GAAU,CAAV;AACA,WAAK,CAAL,CAAO,0BAAP;AACA,KAN2B;qBAAA;;AAAA,GAA5B;AARO,EAAA,8BAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,8BAAD,EAAiC,gCAAjC,EAAyE,sCAAuC,CAAC,CAAjH,CAAnB;AAeR,SAAA,8BAAA;AAAC,CAhBD,CAAoD,sCAApD,CAAA;;SAAa,8B","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { HorizontalStackedSeriesBaseDescription } from \"./HorizontalStackedSeriesBaseDescription\";\nimport { markType } from \"./type\";\n/**\n * @hidden\n */\nvar StackedSplineSeriesDescription = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(StackedSplineSeriesDescription, _super);\n    function StackedSplineSeriesDescription() {\n        var _this = _super.call(this) || this;\n        _this.d9 = false;\n        return _this;\n    }\n    StackedSplineSeriesDescription.prototype.get_type = function () {\n        return \"StackedSplineSeries\";\n    };\n    Object.defineProperty(StackedSplineSeriesDescription.prototype, \"isSplineShapePartOfRange\", {\n        get: function () {\n            return this.d9;\n        },\n        set: function (a) {\n            this.d9 = a;\n            this.e(\"IsSplineShapePartOfRange\");\n        },\n        enumerable: false,\n        configurable: true\n    });\n    StackedSplineSeriesDescription.$t = markType(StackedSplineSeriesDescription, 'StackedSplineSeriesDescription', HorizontalStackedSeriesBaseDescription.$);\n    return StackedSplineSeriesDescription;\n}(HorizontalStackedSeriesBaseDescription));\nexport { StackedSplineSeriesDescription };\n//# sourceMappingURL=StackedSplineSeriesDescription.js.map\n"]},"metadata":{},"sourceType":"module"}