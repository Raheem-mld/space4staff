{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { IgrSeries } from \"./igr-series\";\nimport { Visibility_$type } from \"igniteui-react-core\";\nimport { IgrAnnotationLayer } from \"./igr-annotation-layer\";\nimport { CrosshairLayer } from \"./CrosshairLayer\";\nimport { ensureBool, brushToString, stringToBrush, ensureEnum } from \"igniteui-react-core\";\n/**\n * Represents an annotation layer that displays crosshair lines that cross through the closest value of the target series under the cursor.\n*/\n\nvar IgrCrosshairLayer =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(IgrCrosshairLayer, _super);\n\n  function IgrCrosshairLayer(props) {\n    return _super.call(this, props) || this;\n  }\n\n  IgrCrosshairLayer.prototype.createImplementation = function () {\n    return new CrosshairLayer();\n  };\n\n  Object.defineProperty(IgrCrosshairLayer.prototype, \"i\", {\n    /**\n                                 * @hidden\n                                 */\n    get: function () {\n      return this._implementation;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrCrosshairLayer.prototype, \"isAnnotationHoverLayer\", {\n    /**\n     * Gets whether the series is an annotation layer displayed only when hovering over the chart.\n    */\n    get: function () {\n      return this.i.c5;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrCrosshairLayer.prototype, \"isAnnotationCrosshairLayer\", {\n    /**\n     * Gets whether the series is an crosshair annotation layer.\n    */\n    get: function () {\n      return this.i.c3;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrCrosshairLayer.prototype, \"horizontalLineStroke\", {\n    /**\n     * Gets or sets the color to use for the horizontal line. Leave null for an automatic value.\n    */\n    get: function () {\n      return brushToString(this.i.sv);\n    },\n    set: function (v) {\n      this.i.sv = stringToBrush(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrCrosshairLayer.prototype, \"verticalLineStroke\", {\n    /**\n     * Gets or sets the color to use for vertical line. Leave null for an automatic value.\n    */\n    get: function () {\n      return brushToString(this.i.sw);\n    },\n    set: function (v) {\n      this.i.sw = stringToBrush(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrCrosshairLayer.prototype, \"targetSeriesName\", {\n    /**\n     * Gets or sets the name of the series series to target this annotation to. If null, this annotation targets all series simultaneously.\n    */\n    get: function () {\n      return this.i.rd;\n    },\n    set: function (v) {\n      this.i.rd = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrCrosshairLayer.prototype, \"targetSeries\", {\n    /**\n     * Gets or sets the series to target this annotation to. If null, this annotation targets all series simultaneously.\n    */\n    get: function () {\n      if (this.i.qp == null) {\n        return null;\n      }\n\n      if (!this.i.qp.externalObject) {\n        var e = IgrSeries._createFromInternal(this.i.qp);\n\n        if (e) {\n          e._implementation = this.i.qp;\n        }\n\n        this.i.qp.externalObject = e;\n      }\n\n      return this.i.qp.externalObject;\n    },\n    set: function (v) {\n      if (v != null && this._stylingContainer && v._styling) v._styling(this._stylingContainer, this, this);\n      v == null ? this.i.qp = null : this.i.qp = v.i;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrCrosshairLayer.prototype, \"useInterpolation\", {\n    /**\n     * Gets or sets whether to use value interpolation when drawing a line through the best value for the cursor position.\n    */\n    get: function () {\n      return this.i.qu;\n    },\n    set: function (v) {\n      this.i.qu = ensureBool(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrCrosshairLayer.prototype, \"isAxisAnnotationEnabled\", {\n    /**\n     * Gets or sets whether to draw annotations over the axes where the crosshair meets with them.\n    */\n    get: function () {\n      return this.i.qs;\n    },\n    set: function (v) {\n      this.i.qs = ensureBool(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrCrosshairLayer.prototype, \"xAxisAnnotationTextColor\", {\n    /**\n     * Gets or sets the color to use for the x axis annotation text. Leave unset for an automatic value.\n    */\n    get: function () {\n      return brushToString(this.i.sz);\n    },\n    set: function (v) {\n      this.i.sz = stringToBrush(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrCrosshairLayer.prototype, \"xAxisAnnotationBackground\", {\n    /**\n     * Gets or sets the color to use for the x axis annotation backing. Leave unset for an automatic value.\n    */\n    get: function () {\n      return brushToString(this.i.sx);\n    },\n    set: function (v) {\n      this.i.sx = stringToBrush(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrCrosshairLayer.prototype, \"xAxisAnnotationInterpolatedValuePrecision\", {\n    /**\n     * Gets or sets the precision to use displaying values for interpolated crosshair positions.\n    */\n    get: function () {\n      return this.i.q7;\n    },\n    set: function (v) {\n      this.i.q7 = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrCrosshairLayer.prototype, \"xAxisAnnotationOutline\", {\n    /**\n     * Gets or sets the color to use for the x axis annotation outline. Leave unset for an automatic value.\n    */\n    get: function () {\n      return brushToString(this.i.sy);\n    },\n    set: function (v) {\n      this.i.sy = stringToBrush(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrCrosshairLayer.prototype, \"xAxisAnnotationPaddingLeft\", {\n    /**\n     * Gets or sets the padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.\n    */\n    get: function () {\n      return this.i.qy;\n    },\n    set: function (v) {\n      this.i.qy = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrCrosshairLayer.prototype, \"xAxisAnnotationPaddingTop\", {\n    /**\n     * Gets or sets the padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.\n    */\n    get: function () {\n      return this.i.q0;\n    },\n    set: function (v) {\n      this.i.q0 = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrCrosshairLayer.prototype, \"xAxisAnnotationPaddingRight\", {\n    /**\n     * Gets or sets the padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.\n    */\n    get: function () {\n      return this.i.qz;\n    },\n    set: function (v) {\n      this.i.qz = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrCrosshairLayer.prototype, \"xAxisAnnotationPaddingBottom\", {\n    /**\n     * Gets or sets the padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.\n    */\n    get: function () {\n      return this.i.qx;\n    },\n    set: function (v) {\n      this.i.qx = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrCrosshairLayer.prototype, \"yAxisAnnotationPaddingLeft\", {\n    /**\n     * Gets or sets the padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.\n    */\n    get: function () {\n      return this.i.q3;\n    },\n    set: function (v) {\n      this.i.q3 = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrCrosshairLayer.prototype, \"yAxisAnnotationPaddingTop\", {\n    /**\n     * Gets or sets the padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.\n    */\n    get: function () {\n      return this.i.q5;\n    },\n    set: function (v) {\n      this.i.q5 = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrCrosshairLayer.prototype, \"yAxisAnnotationPaddingRight\", {\n    /**\n     * Gets or sets the padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.\n    */\n    get: function () {\n      return this.i.q4;\n    },\n    set: function (v) {\n      this.i.q4 = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrCrosshairLayer.prototype, \"yAxisAnnotationPaddingBottom\", {\n    /**\n     * Gets or sets the padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.\n    */\n    get: function () {\n      return this.i.q2;\n    },\n    set: function (v) {\n      this.i.q2 = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrCrosshairLayer.prototype, \"xAxisAnnotationStrokeThickness\", {\n    /**\n     * Gets or sets the stroke thickness for the x axis annotation backing. Leave unset for an automatic value.\n    */\n    get: function () {\n      return this.i.q1;\n    },\n    set: function (v) {\n      this.i.q1 = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrCrosshairLayer.prototype, \"yAxisAnnotationTextColor\", {\n    /**\n     * Gets or sets the color to use for the y axis annotation text. Leave unset for an automatic value.\n    */\n    get: function () {\n      return brushToString(this.i.s2);\n    },\n    set: function (v) {\n      this.i.s2 = stringToBrush(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrCrosshairLayer.prototype, \"yAxisAnnotationBackground\", {\n    /**\n     * Gets or sets the color to use for the y axis annotation backing. Leave unset for an automatic value.\n    */\n    get: function () {\n      return brushToString(this.i.s0);\n    },\n    set: function (v) {\n      this.i.s0 = stringToBrush(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrCrosshairLayer.prototype, \"yAxisAnnotationInterpolatedValuePrecision\", {\n    /**\n     * Gets or sets the precision to use displaying values for interpolated crosshair positions.\n    */\n    get: function () {\n      return this.i.q8;\n    },\n    set: function (v) {\n      this.i.q8 = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrCrosshairLayer.prototype, \"yAxisAnnotationOutline\", {\n    /**\n     * Gets or sets the color to use for the y axis annotation outline. Leave unset for an automatic value.\n    */\n    get: function () {\n      return brushToString(this.i.s1);\n    },\n    set: function (v) {\n      this.i.s1 = stringToBrush(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrCrosshairLayer.prototype, \"yAxisAnnotationStrokeThickness\", {\n    /**\n     * Gets or sets the stroke thickness for the y axis annotation backing. Leave unset for an automatic value.\n    */\n    get: function () {\n      return this.i.q6;\n    },\n    set: function (v) {\n      this.i.q6 = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrCrosshairLayer.prototype, \"verticalLineVisibility\", {\n    /**\n     * Gets or sets whether to display the vertical line.\n    */\n    get: function () {\n      return this.i.s6;\n    },\n    set: function (v) {\n      this.i.s6 = ensureEnum(Visibility_$type, v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrCrosshairLayer.prototype, \"horizontalLineVisibility\", {\n    /**\n     * Gets or sets whether to display the horizontal line.\n    */\n    get: function () {\n      return this.i.s5;\n    },\n    set: function (v) {\n      this.i.s5 = ensureEnum(Visibility_$type, v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrCrosshairLayer.prototype, \"skipUnknownValues\", {\n    /**\n     * Gets or sets whether to skip unknown values when searching for series values.\n    */\n    get: function () {\n      return this.i.qt;\n    },\n    set: function (v) {\n      this.i.qt = ensureBool(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  IgrCrosshairLayer.prototype.findByName = function (name) {\n    var baseResult = _super.prototype.findByName.call(this, name);\n\n    if (baseResult) {\n      return baseResult;\n    }\n\n    if (this.targetSeries && this.targetSeries.name && this.targetSeries.name == name) {\n      return this.targetSeries;\n    }\n\n    return null;\n  };\n\n  IgrCrosshairLayer.prototype._styling = function (container, component, parent) {\n    _super.prototype._styling.call(this, container, component, parent);\n\n    this._inStyling = true;\n\n    if (this.targetSeries && this.targetSeries._styling) {\n      this.targetSeries._styling(container, component, this);\n    }\n\n    this._inStyling = false;\n  };\n\n  return IgrCrosshairLayer;\n}(IgrAnnotationLayer);\n\nexport { IgrCrosshairLayer };","map":{"version":3,"sources":["../../../../src/igniteui-charts/lib/igr-crosshair-layer.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __extends } from \"tslib\";\nimport { IgrSeries } from \"./igr-series\";\nimport { Visibility_$type } from \"igniteui-react-core\";\nimport { IgrAnnotationLayer } from \"./igr-annotation-layer\";\nimport { CrosshairLayer } from \"./CrosshairLayer\";\nimport { ensureBool, brushToString, stringToBrush, ensureEnum } from \"igniteui-react-core\";\n/**\n * Represents an annotation layer that displays crosshair lines that cross through the closest value of the target series under the cursor.\n*/\nvar IgrCrosshairLayer = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(IgrCrosshairLayer, _super);\n    function IgrCrosshairLayer(props) {\n        return _super.call(this, props) || this;\n    }\n    IgrCrosshairLayer.prototype.createImplementation = function () {\n        return new CrosshairLayer();\n    };\n    Object.defineProperty(IgrCrosshairLayer.prototype, \"i\", {\n        /**\n                                     * @hidden\n                                     */\n        get: function () {\n            return this._implementation;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrCrosshairLayer.prototype, \"isAnnotationHoverLayer\", {\n        /**\n         * Gets whether the series is an annotation layer displayed only when hovering over the chart.\n        */\n        get: function () {\n            return this.i.c5;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrCrosshairLayer.prototype, \"isAnnotationCrosshairLayer\", {\n        /**\n         * Gets whether the series is an crosshair annotation layer.\n        */\n        get: function () {\n            return this.i.c3;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrCrosshairLayer.prototype, \"horizontalLineStroke\", {\n        /**\n         * Gets or sets the color to use for the horizontal line. Leave null for an automatic value.\n        */\n        get: function () {\n            return brushToString(this.i.sv);\n        },\n        set: function (v) {\n            this.i.sv = stringToBrush(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrCrosshairLayer.prototype, \"verticalLineStroke\", {\n        /**\n         * Gets or sets the color to use for vertical line. Leave null for an automatic value.\n        */\n        get: function () {\n            return brushToString(this.i.sw);\n        },\n        set: function (v) {\n            this.i.sw = stringToBrush(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrCrosshairLayer.prototype, \"targetSeriesName\", {\n        /**\n         * Gets or sets the name of the series series to target this annotation to. If null, this annotation targets all series simultaneously.\n        */\n        get: function () {\n            return this.i.rd;\n        },\n        set: function (v) {\n            this.i.rd = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrCrosshairLayer.prototype, \"targetSeries\", {\n        /**\n         * Gets or sets the series to target this annotation to. If null, this annotation targets all series simultaneously.\n        */\n        get: function () {\n            if (this.i.qp == null) {\n                return null;\n            }\n            if (!this.i.qp.externalObject) {\n                var e = IgrSeries._createFromInternal(this.i.qp);\n                if (e) {\n                    e._implementation = this.i.qp;\n                }\n                this.i.qp.externalObject = e;\n            }\n            return this.i.qp.externalObject;\n        },\n        set: function (v) {\n            if (v != null && this._stylingContainer && v._styling)\n                v._styling(this._stylingContainer, this, this);\n            v == null ? this.i.qp = null : this.i.qp = v.i;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrCrosshairLayer.prototype, \"useInterpolation\", {\n        /**\n         * Gets or sets whether to use value interpolation when drawing a line through the best value for the cursor position.\n        */\n        get: function () {\n            return this.i.qu;\n        },\n        set: function (v) {\n            this.i.qu = ensureBool(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrCrosshairLayer.prototype, \"isAxisAnnotationEnabled\", {\n        /**\n         * Gets or sets whether to draw annotations over the axes where the crosshair meets with them.\n        */\n        get: function () {\n            return this.i.qs;\n        },\n        set: function (v) {\n            this.i.qs = ensureBool(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrCrosshairLayer.prototype, \"xAxisAnnotationTextColor\", {\n        /**\n         * Gets or sets the color to use for the x axis annotation text. Leave unset for an automatic value.\n        */\n        get: function () {\n            return brushToString(this.i.sz);\n        },\n        set: function (v) {\n            this.i.sz = stringToBrush(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrCrosshairLayer.prototype, \"xAxisAnnotationBackground\", {\n        /**\n         * Gets or sets the color to use for the x axis annotation backing. Leave unset for an automatic value.\n        */\n        get: function () {\n            return brushToString(this.i.sx);\n        },\n        set: function (v) {\n            this.i.sx = stringToBrush(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrCrosshairLayer.prototype, \"xAxisAnnotationInterpolatedValuePrecision\", {\n        /**\n         * Gets or sets the precision to use displaying values for interpolated crosshair positions.\n        */\n        get: function () {\n            return this.i.q7;\n        },\n        set: function (v) {\n            this.i.q7 = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrCrosshairLayer.prototype, \"xAxisAnnotationOutline\", {\n        /**\n         * Gets or sets the color to use for the x axis annotation outline. Leave unset for an automatic value.\n        */\n        get: function () {\n            return brushToString(this.i.sy);\n        },\n        set: function (v) {\n            this.i.sy = stringToBrush(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrCrosshairLayer.prototype, \"xAxisAnnotationPaddingLeft\", {\n        /**\n         * Gets or sets the padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.\n        */\n        get: function () {\n            return this.i.qy;\n        },\n        set: function (v) {\n            this.i.qy = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrCrosshairLayer.prototype, \"xAxisAnnotationPaddingTop\", {\n        /**\n         * Gets or sets the padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.\n        */\n        get: function () {\n            return this.i.q0;\n        },\n        set: function (v) {\n            this.i.q0 = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrCrosshairLayer.prototype, \"xAxisAnnotationPaddingRight\", {\n        /**\n         * Gets or sets the padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.\n        */\n        get: function () {\n            return this.i.qz;\n        },\n        set: function (v) {\n            this.i.qz = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrCrosshairLayer.prototype, \"xAxisAnnotationPaddingBottom\", {\n        /**\n         * Gets or sets the padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.\n        */\n        get: function () {\n            return this.i.qx;\n        },\n        set: function (v) {\n            this.i.qx = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrCrosshairLayer.prototype, \"yAxisAnnotationPaddingLeft\", {\n        /**\n         * Gets or sets the padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.\n        */\n        get: function () {\n            return this.i.q3;\n        },\n        set: function (v) {\n            this.i.q3 = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrCrosshairLayer.prototype, \"yAxisAnnotationPaddingTop\", {\n        /**\n         * Gets or sets the padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.\n        */\n        get: function () {\n            return this.i.q5;\n        },\n        set: function (v) {\n            this.i.q5 = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrCrosshairLayer.prototype, \"yAxisAnnotationPaddingRight\", {\n        /**\n         * Gets or sets the padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.\n        */\n        get: function () {\n            return this.i.q4;\n        },\n        set: function (v) {\n            this.i.q4 = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrCrosshairLayer.prototype, \"yAxisAnnotationPaddingBottom\", {\n        /**\n         * Gets or sets the padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.\n        */\n        get: function () {\n            return this.i.q2;\n        },\n        set: function (v) {\n            this.i.q2 = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrCrosshairLayer.prototype, \"xAxisAnnotationStrokeThickness\", {\n        /**\n         * Gets or sets the stroke thickness for the x axis annotation backing. Leave unset for an automatic value.\n        */\n        get: function () {\n            return this.i.q1;\n        },\n        set: function (v) {\n            this.i.q1 = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrCrosshairLayer.prototype, \"yAxisAnnotationTextColor\", {\n        /**\n         * Gets or sets the color to use for the y axis annotation text. Leave unset for an automatic value.\n        */\n        get: function () {\n            return brushToString(this.i.s2);\n        },\n        set: function (v) {\n            this.i.s2 = stringToBrush(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrCrosshairLayer.prototype, \"yAxisAnnotationBackground\", {\n        /**\n         * Gets or sets the color to use for the y axis annotation backing. Leave unset for an automatic value.\n        */\n        get: function () {\n            return brushToString(this.i.s0);\n        },\n        set: function (v) {\n            this.i.s0 = stringToBrush(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrCrosshairLayer.prototype, \"yAxisAnnotationInterpolatedValuePrecision\", {\n        /**\n         * Gets or sets the precision to use displaying values for interpolated crosshair positions.\n        */\n        get: function () {\n            return this.i.q8;\n        },\n        set: function (v) {\n            this.i.q8 = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrCrosshairLayer.prototype, \"yAxisAnnotationOutline\", {\n        /**\n         * Gets or sets the color to use for the y axis annotation outline. Leave unset for an automatic value.\n        */\n        get: function () {\n            return brushToString(this.i.s1);\n        },\n        set: function (v) {\n            this.i.s1 = stringToBrush(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrCrosshairLayer.prototype, \"yAxisAnnotationStrokeThickness\", {\n        /**\n         * Gets or sets the stroke thickness for the y axis annotation backing. Leave unset for an automatic value.\n        */\n        get: function () {\n            return this.i.q6;\n        },\n        set: function (v) {\n            this.i.q6 = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrCrosshairLayer.prototype, \"verticalLineVisibility\", {\n        /**\n         * Gets or sets whether to display the vertical line.\n        */\n        get: function () {\n            return this.i.s6;\n        },\n        set: function (v) {\n            this.i.s6 = ensureEnum(Visibility_$type, v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrCrosshairLayer.prototype, \"horizontalLineVisibility\", {\n        /**\n         * Gets or sets whether to display the horizontal line.\n        */\n        get: function () {\n            return this.i.s5;\n        },\n        set: function (v) {\n            this.i.s5 = ensureEnum(Visibility_$type, v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrCrosshairLayer.prototype, \"skipUnknownValues\", {\n        /**\n         * Gets or sets whether to skip unknown values when searching for series values.\n        */\n        get: function () {\n            return this.i.qt;\n        },\n        set: function (v) {\n            this.i.qt = ensureBool(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    IgrCrosshairLayer.prototype.findByName = function (name) {\n        var baseResult = _super.prototype.findByName.call(this, name);\n        if (baseResult) {\n            return baseResult;\n        }\n        if (this.targetSeries && this.targetSeries.name && this.targetSeries.name == name) {\n            return this.targetSeries;\n        }\n        return null;\n    };\n    IgrCrosshairLayer.prototype._styling = function (container, component, parent) {\n        _super.prototype._styling.call(this, container, component, parent);\n        this._inStyling = true;\n        if (this.targetSeries && this.targetSeries._styling) {\n            this.targetSeries._styling(container, component, this);\n        }\n        this._inStyling = false;\n    };\n    return IgrCrosshairLayer;\n}(IgrAnnotationLayer));\nexport { IgrCrosshairLayer };\n//# sourceMappingURL=igr-crosshair-layer.js.map\n"]},"metadata":{},"sourceType":"module"}