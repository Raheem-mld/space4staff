{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { FilterExpressionDescriptionMetadata } from \"./FilterExpressionDescriptionMetadata\";\n/**\n * @hidden\n */\n\nvar WrapperExpressionDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(WrapperExpressionDescriptionMetadata, _super);\n\n  function WrapperExpressionDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  WrapperExpressionDescriptionMetadata.b = function (a) {\n    if (WrapperExpressionDescriptionMetadata.a == null) {\n      WrapperExpressionDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      WrapperExpressionDescriptionMetadata.c(WrapperExpressionDescriptionMetadata.a);\n    }\n\n    if (a.g(WrapperExpressionDescriptionMetadata.a)) {\n      return;\n    }\n\n    a.s(WrapperExpressionDescriptionMetadata.a);\n    FilterExpressionDescriptionMetadata.d(a);\n  };\n\n  WrapperExpressionDescriptionMetadata.c = function (a) {\n    FilterExpressionDescriptionMetadata.c(a);\n    a.item(\"InnerExpression\", \"ExportedType:IFilterExpression\");\n    a.item(\"Expression\", \"ExportedType:FilterExpression\");\n    a.item(\"PropertyName\", \"String\");\n  };\n\n  WrapperExpressionDescriptionMetadata.d = function (a) {\n    WrapperExpressionDescriptionMetadata.b(a);\n    a.t(\"WrapperExpression\", WrapperExpressionDescriptionMetadata.a);\n  };\n\n  WrapperExpressionDescriptionMetadata.$t = markType(WrapperExpressionDescriptionMetadata, 'WrapperExpressionDescriptionMetadata');\n  WrapperExpressionDescriptionMetadata.a = null;\n  return WrapperExpressionDescriptionMetadata;\n}(Base);\n\nexport { WrapperExpressionDescriptionMetadata };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/WrapperExpressionDescriptionMetadata.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,IAAT,EAAe,YAAf,EAAmC,QAAnC,QAAmD,QAAnD;AAEA,SAAS,YAAT,QAA6B,gBAA7B;AACA,SAAS,mCAAT,QAAoD,uCAApD;AAEA;;AAEG;;AACH,IAAA,oCAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAA0D,EAAA,SAAA,CAAA,oCAAA,EAAA,MAAA,CAAA;;AAA1D,WAAA,oCAAA,GAAA;;AAwBC;;AArBe,EAAA,oCAAA,CAAA,CAAA,GAAf,UAAiB,CAAjB,EAA0C;AACzC,QAAI,oCAAoC,CAAC,CAArC,IAA0C,IAA9C,EAAoD;AACnD,MAAA,oCAAoC,CAAC,CAArC,GAAyC,IAAI,YAAJ,CAAiC,YAAjC,EAA+C,YAA/C,EAA6D,CAA7D,CAAzC;AACA,MAAA,oCAAoC,CAAC,CAArC,CAAuC,oCAAoC,CAAC,CAA5E;AACA;;AACD,QAAI,CAAC,CAAC,CAAF,CAAI,oCAAoC,CAAC,CAAzC,CAAJ,EAAiD;AAChD;AACA;;AACD,IAAA,CAAC,CAAC,CAAF,CAAI,oCAAoC,CAAC,CAAzC;AACA,IAAA,mCAAmC,CAAC,CAApC,CAAsC,CAAtC;AACA,GAVc;;AAWR,EAAA,oCAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAwC;AACvC,IAAA,mCAAmC,CAAC,CAApC,CAAsC,CAAtC;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,iBAAP,EAA0B,gCAA1B;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,YAAP,EAAqB,+BAArB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,cAAP,EAAuB,QAAvB;AACA,GALM;;AAMA,EAAA,oCAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAkC;AACjC,IAAA,oCAAoC,CAAC,CAArC,CAAuC,CAAvC;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,mBAAJ,EAAyB,oCAAoC,CAAC,CAA9D;AACA,GAHM;;AAnBA,EAAA,oCAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,oCAAD,EAAuC,sCAAvC,CAAnB;AACQ,EAAA,oCAAA,CAAA,CAAA,GAAkC,IAAlC;AAsBhB,SAAA,oCAAA;AAAC,CAxBD,CAA0D,IAA1D,CAAA;;SAAa,oC","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { FilterExpressionDescriptionMetadata } from \"./FilterExpressionDescriptionMetadata\";\n/**\n * @hidden\n */\nvar WrapperExpressionDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(WrapperExpressionDescriptionMetadata, _super);\n    function WrapperExpressionDescriptionMetadata() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    WrapperExpressionDescriptionMetadata.b = function (a) {\n        if (WrapperExpressionDescriptionMetadata.a == null) {\n            WrapperExpressionDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n            WrapperExpressionDescriptionMetadata.c(WrapperExpressionDescriptionMetadata.a);\n        }\n        if (a.g(WrapperExpressionDescriptionMetadata.a)) {\n            return;\n        }\n        a.s(WrapperExpressionDescriptionMetadata.a);\n        FilterExpressionDescriptionMetadata.d(a);\n    };\n    WrapperExpressionDescriptionMetadata.c = function (a) {\n        FilterExpressionDescriptionMetadata.c(a);\n        a.item(\"InnerExpression\", \"ExportedType:IFilterExpression\");\n        a.item(\"Expression\", \"ExportedType:FilterExpression\");\n        a.item(\"PropertyName\", \"String\");\n    };\n    WrapperExpressionDescriptionMetadata.d = function (a) {\n        WrapperExpressionDescriptionMetadata.b(a);\n        a.t(\"WrapperExpression\", WrapperExpressionDescriptionMetadata.a);\n    };\n    WrapperExpressionDescriptionMetadata.$t = markType(WrapperExpressionDescriptionMetadata, 'WrapperExpressionDescriptionMetadata');\n    WrapperExpressionDescriptionMetadata.a = null;\n    return WrapperExpressionDescriptionMetadata;\n}(Base));\nexport { WrapperExpressionDescriptionMetadata };\n//# sourceMappingURL=WrapperExpressionDescriptionMetadata.js.map\n"]},"metadata":{},"sourceType":"module"}