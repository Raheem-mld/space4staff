{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { SeriesVisualData } from \"./SeriesVisualData\";\nimport { SeriesVisualDataList } from \"./SeriesVisualDataList\";\nimport { markType } from \"igniteui-react-core\";\n/**\n * @hidden\n */\n\nvar StackedSeriesVisualData =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(StackedSeriesVisualData, _super);\n\n  function StackedSeriesVisualData() {\n    var _this = _super.call(this) || this;\n\n    _this._fragmentSeries = null;\n    _this.fragmentSeries = new SeriesVisualDataList();\n    return _this;\n  }\n\n  Object.defineProperty(StackedSeriesVisualData.prototype, \"fragmentSeries\", {\n    get: function () {\n      return this._fragmentSeries;\n    },\n    set: function (a) {\n      this._fragmentSeries = a;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  StackedSeriesVisualData.prototype.m = function () {\n    _super.prototype.m.call(this);\n\n    for (var a = 0; a < this.fragmentSeries.count; a++) {\n      this.fragmentSeries._inner[a].m();\n    }\n  };\n\n  StackedSeriesVisualData.prototype.n = function (a) {\n    _super.prototype.n.call(this, a);\n\n    if (this.fragmentSeries != null && this.fragmentSeries.count > 0) {\n      a.u(\",\");\n      a.u(\"fragmentSeries: [\");\n\n      for (var b = 0; b < this.fragmentSeries.count; b++) {\n        if (b > 0) {\n          a.u(\",\");\n        }\n\n        a.l(this.fragmentSeries._inner[b].serialize());\n      }\n\n      a.u(\"]\");\n    }\n  };\n\n  StackedSeriesVisualData.$t = markType(StackedSeriesVisualData, 'StackedSeriesVisualData', SeriesVisualData.$);\n  return StackedSeriesVisualData;\n}(SeriesVisualData);\n\nexport { StackedSeriesVisualData };","map":{"version":3,"sources":["../../../../src/igniteui-charts/lib/StackedSeriesVisualData.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,gBAAT,QAAiC,oBAAjC;AACA,SAAS,oBAAT,QAAqC,wBAArC;AAGA,SAAqB,QAArB,QAAqC,qBAArC;AAEA;;AAEG;;AACH,IAAA,uBAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAA6C,EAAA,SAAA,CAAA,uBAAA,EAAA,MAAA,CAAA;;AAE5C,WAAA,uBAAA,GAAA;AAAA,QAAA,KAAA,GACC,MAAA,CAAA,IAAA,CAAA,IAAA,KAAO,IADR;;AAIQ,IAAA,KAAA,CAAA,eAAA,GAAwC,IAAxC;AAFP,IAAA,KAAI,CAAC,cAAL,GAAsB,IAAI,oBAAJ,EAAtB;;AACA;;AAED,EAAA,MAAA,CAAA,cAAA,CAAI,uBAAA,CAAA,SAAJ,EAAI,gBAAJ,EAAkB;SAAlB,YAAA;AACC,aAAO,KAAK,eAAZ;AACA,KAFiB;SAGlB,UAAmB,CAAnB,EAA0C;AACzC,WAAK,eAAL,GAAuB,CAAvB;AACA,KALiB;qBAAA;;AAAA,GAAlB;;AAMA,EAAA,uBAAA,CAAA,SAAA,CAAA,CAAA,GAAA,YAAA;AACC,IAAA,MAAA,CAAA,SAAA,CAAM,CAAN,CAAO,IAAP,CAAO,IAAP;;AACA,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,KAAK,cAAL,CAAoB,KAAxC,EAA+C,CAAC,EAAhD,EAAoD;AACnD,WAAK,cAAL,CAAoB,MAApB,CAA2B,CAA3B,EAA8B,CAA9B;AACA;AACD,GALD;;AAMA,EAAA,uBAAA,CAAA,SAAA,CAAA,CAAA,GAAA,UAAE,CAAF,EAAkB;AACjB,IAAA,MAAA,CAAA,SAAA,CAAM,CAAN,CAAO,IAAP,CAAO,IAAP,EAAQ,CAAR;;AACA,QAAI,KAAK,cAAL,IAAuB,IAAvB,IAA+B,KAAK,cAAL,CAAoB,KAApB,GAA4B,CAA/D,EAAkE;AACjE,MAAA,CAAC,CAAC,CAAF,CAAI,GAAJ;AACA,MAAA,CAAC,CAAC,CAAF,CAAI,mBAAJ;;AACA,WAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,KAAK,cAAL,CAAoB,KAAxC,EAA+C,CAAC,EAAhD,EAAoD;AACnD,YAAI,CAAC,GAAG,CAAR,EAAW;AACV,UAAA,CAAC,CAAC,CAAF,CAAI,GAAJ;AACA;;AACD,QAAA,CAAC,CAAC,CAAF,CAAI,KAAK,cAAL,CAAoB,MAApB,CAA2B,CAA3B,EAA8B,SAA9B,EAAJ;AACA;;AACD,MAAA,CAAC,CAAC,CAAF,CAAI,GAAJ;AACA;AACD,GAbD;;AAlBO,EAAA,uBAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,uBAAD,EAA0B,yBAA1B,EAA2D,gBAAiB,CAAC,CAA7E,CAAnB;AAgCR,SAAA,uBAAA;AAAC,CAjCD,CAA6C,gBAA7C,CAAA;;SAAa,uB","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { SeriesVisualData } from \"./SeriesVisualData\";\nimport { SeriesVisualDataList } from \"./SeriesVisualDataList\";\nimport { markType } from \"igniteui-react-core\";\n/**\n * @hidden\n */\nvar StackedSeriesVisualData = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(StackedSeriesVisualData, _super);\n    function StackedSeriesVisualData() {\n        var _this = _super.call(this) || this;\n        _this._fragmentSeries = null;\n        _this.fragmentSeries = new SeriesVisualDataList();\n        return _this;\n    }\n    Object.defineProperty(StackedSeriesVisualData.prototype, \"fragmentSeries\", {\n        get: function () {\n            return this._fragmentSeries;\n        },\n        set: function (a) {\n            this._fragmentSeries = a;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    StackedSeriesVisualData.prototype.m = function () {\n        _super.prototype.m.call(this);\n        for (var a = 0; a < this.fragmentSeries.count; a++) {\n            this.fragmentSeries._inner[a].m();\n        }\n    };\n    StackedSeriesVisualData.prototype.n = function (a) {\n        _super.prototype.n.call(this, a);\n        if (this.fragmentSeries != null && this.fragmentSeries.count > 0) {\n            a.u(\",\");\n            a.u(\"fragmentSeries: [\");\n            for (var b = 0; b < this.fragmentSeries.count; b++) {\n                if (b > 0) {\n                    a.u(\",\");\n                }\n                a.l(this.fragmentSeries._inner[b].serialize());\n            }\n            a.u(\"]\");\n        }\n    };\n    StackedSeriesVisualData.$t = markType(StackedSeriesVisualData, 'StackedSeriesVisualData', SeriesVisualData.$);\n    return StackedSeriesVisualData;\n}(SeriesVisualData));\nexport { StackedSeriesVisualData };\n//# sourceMappingURL=StackedSeriesVisualData.js.map\n"]},"metadata":{},"sourceType":"module"}