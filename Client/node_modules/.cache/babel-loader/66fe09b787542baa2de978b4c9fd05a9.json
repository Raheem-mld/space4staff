{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { WrapperExpressionDescriptionMetadata } from \"./WrapperExpressionDescriptionMetadata\";\nimport { Q3ExpressionDescription } from \"./Q3ExpressionDescription\";\n/**\n * @hidden\n */\n\nvar Q3ExpressionDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(Q3ExpressionDescriptionMetadata, _super);\n\n  function Q3ExpressionDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Q3ExpressionDescriptionMetadata.b = function (a) {\n    if (Q3ExpressionDescriptionMetadata.a == null) {\n      Q3ExpressionDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      Q3ExpressionDescriptionMetadata.c(Q3ExpressionDescriptionMetadata.a);\n    }\n\n    if (a.g(Q3ExpressionDescriptionMetadata.a)) {\n      return;\n    }\n\n    a.s(Q3ExpressionDescriptionMetadata.a);\n  };\n\n  Q3ExpressionDescriptionMetadata.c = function (a) {\n    WrapperExpressionDescriptionMetadata.c(a);\n  };\n\n  Q3ExpressionDescriptionMetadata.d = function (a) {\n    Q3ExpressionDescriptionMetadata.b(a);\n    a.u(\"Q3Expression\", function () {\n      return new Q3ExpressionDescription();\n    });\n    a.t(\"Q3Expression\", Q3ExpressionDescriptionMetadata.a);\n  };\n\n  Q3ExpressionDescriptionMetadata.$t = markType(Q3ExpressionDescriptionMetadata, 'Q3ExpressionDescriptionMetadata');\n  Q3ExpressionDescriptionMetadata.a = null;\n  return Q3ExpressionDescriptionMetadata;\n}(Base);\n\nexport { Q3ExpressionDescriptionMetadata };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/Q3ExpressionDescriptionMetadata.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,IAAT,EAAe,YAAf,EAAmC,QAAnC,QAAmD,QAAnD;AAEA,SAAS,YAAT,QAA6B,gBAA7B;AACA,SAAS,oCAAT,QAAqD,wCAArD;AACA,SAAS,uBAAT,QAAwC,2BAAxC;AAEA;;AAEG;;AACH,IAAA,+BAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAqD,EAAA,SAAA,CAAA,+BAAA,EAAA,MAAA,CAAA;;AAArD,WAAA,+BAAA,GAAA;;AAqBC;;AAlBe,EAAA,+BAAA,CAAA,CAAA,GAAf,UAAiB,CAAjB,EAA0C;AACzC,QAAI,+BAA+B,CAAC,CAAhC,IAAqC,IAAzC,EAA+C;AAC9C,MAAA,+BAA+B,CAAC,CAAhC,GAAoC,IAAI,YAAJ,CAAiC,YAAjC,EAA+C,YAA/C,EAA6D,CAA7D,CAApC;AACA,MAAA,+BAA+B,CAAC,CAAhC,CAAkC,+BAA+B,CAAC,CAAlE;AACA;;AACD,QAAI,CAAC,CAAC,CAAF,CAAI,+BAA+B,CAAC,CAApC,CAAJ,EAA4C;AAC3C;AACA;;AACD,IAAA,CAAC,CAAC,CAAF,CAAI,+BAA+B,CAAC,CAApC;AACA,GATc;;AAUR,EAAA,+BAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAwC;AACvC,IAAA,oCAAoC,CAAC,CAArC,CAAuC,CAAvC;AACA,GAFM;;AAGA,EAAA,+BAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAkC;AACjC,IAAA,+BAA+B,CAAC,CAAhC,CAAkC,CAAlC;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,cAAJ,EAAoB,YAAA;AAAM,aAAA,IAAA,uBAAA,EAAA;AAA6B,KAAvD;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,cAAJ,EAAoB,+BAA+B,CAAC,CAApD;AACA,GAJM;;AAfA,EAAA,+BAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,+BAAD,EAAkC,iCAAlC,CAAnB;AACQ,EAAA,+BAAA,CAAA,CAAA,GAAkC,IAAlC;AAmBhB,SAAA,+BAAA;AAAC,CArBD,CAAqD,IAArD,CAAA;;SAAa,+B","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { WrapperExpressionDescriptionMetadata } from \"./WrapperExpressionDescriptionMetadata\";\nimport { Q3ExpressionDescription } from \"./Q3ExpressionDescription\";\n/**\n * @hidden\n */\nvar Q3ExpressionDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(Q3ExpressionDescriptionMetadata, _super);\n    function Q3ExpressionDescriptionMetadata() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Q3ExpressionDescriptionMetadata.b = function (a) {\n        if (Q3ExpressionDescriptionMetadata.a == null) {\n            Q3ExpressionDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n            Q3ExpressionDescriptionMetadata.c(Q3ExpressionDescriptionMetadata.a);\n        }\n        if (a.g(Q3ExpressionDescriptionMetadata.a)) {\n            return;\n        }\n        a.s(Q3ExpressionDescriptionMetadata.a);\n    };\n    Q3ExpressionDescriptionMetadata.c = function (a) {\n        WrapperExpressionDescriptionMetadata.c(a);\n    };\n    Q3ExpressionDescriptionMetadata.d = function (a) {\n        Q3ExpressionDescriptionMetadata.b(a);\n        a.u(\"Q3Expression\", function () { return new Q3ExpressionDescription(); });\n        a.t(\"Q3Expression\", Q3ExpressionDescriptionMetadata.a);\n    };\n    Q3ExpressionDescriptionMetadata.$t = markType(Q3ExpressionDescriptionMetadata, 'Q3ExpressionDescriptionMetadata');\n    Q3ExpressionDescriptionMetadata.a = null;\n    return Q3ExpressionDescriptionMetadata;\n}(Base));\nexport { Q3ExpressionDescriptionMetadata };\n//# sourceMappingURL=Q3ExpressionDescriptionMetadata.js.map\n"]},"metadata":{},"sourceType":"module"}