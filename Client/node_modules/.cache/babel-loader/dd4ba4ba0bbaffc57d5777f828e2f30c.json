{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, markType } from \"./type\";\nimport { StackedLineSeriesDescriptionModule } from \"./StackedLineSeriesDescriptionModule\";\nimport { Stacked100LineSeriesDescriptionMetadata } from \"./Stacked100LineSeriesDescriptionMetadata\";\n/**\n * @hidden\n */\n\nvar Stacked100LineSeriesDescriptionModule =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(Stacked100LineSeriesDescriptionModule, _super);\n\n  function Stacked100LineSeriesDescriptionModule() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Stacked100LineSeriesDescriptionModule.register = function (a) {\n    StackedLineSeriesDescriptionModule.register(a);\n    Stacked100LineSeriesDescriptionMetadata.d(a);\n  };\n\n  Stacked100LineSeriesDescriptionModule.$t = markType(Stacked100LineSeriesDescriptionModule, 'Stacked100LineSeriesDescriptionModule');\n  return Stacked100LineSeriesDescriptionModule;\n}(Base);\n\nexport { Stacked100LineSeriesDescriptionModule };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/Stacked100LineSeriesDescriptionModule.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,IAAT,EAAqB,QAArB,QAAqC,QAArC;AAEA,SAAS,kCAAT,QAAmD,sCAAnD;AACA,SAAS,uCAAT,QAAwD,2CAAxD;AAEA;;AAEG;;AACH,IAAA,qCAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAA2D,EAAA,SAAA,CAAA,qCAAA,EAAA,MAAA,CAAA;;AAA3D,WAAA,qCAAA,GAAA;;AAMC;;AAJO,EAAA,qCAAA,CAAA,QAAA,GAAP,UAAgB,CAAhB,EAAyC;AACxC,IAAA,kCAAkC,CAAC,QAAnC,CAA4C,CAA5C;AACA,IAAA,uCAAuC,CAAC,CAAxC,CAA0C,CAA1C;AACA,GAHM;;AADA,EAAA,qCAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,qCAAD,EAAwC,uCAAxC,CAAnB;AAKR,SAAA,qCAAA;AAAC,CAND,CAA2D,IAA3D,CAAA;;SAAa,qC","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, markType } from \"./type\";\nimport { StackedLineSeriesDescriptionModule } from \"./StackedLineSeriesDescriptionModule\";\nimport { Stacked100LineSeriesDescriptionMetadata } from \"./Stacked100LineSeriesDescriptionMetadata\";\n/**\n * @hidden\n */\nvar Stacked100LineSeriesDescriptionModule = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(Stacked100LineSeriesDescriptionModule, _super);\n    function Stacked100LineSeriesDescriptionModule() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Stacked100LineSeriesDescriptionModule.register = function (a) {\n        StackedLineSeriesDescriptionModule.register(a);\n        Stacked100LineSeriesDescriptionMetadata.d(a);\n    };\n    Stacked100LineSeriesDescriptionModule.$t = markType(Stacked100LineSeriesDescriptionModule, 'Stacked100LineSeriesDescriptionModule');\n    return Stacked100LineSeriesDescriptionModule;\n}(Base));\nexport { Stacked100LineSeriesDescriptionModule };\n//# sourceMappingURL=Stacked100LineSeriesDescriptionModule.js.map\n"]},"metadata":{},"sourceType":"module"}