{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { ImageTilesReadyEventArgsDescriptionMetadata } from \"./ImageTilesReadyEventArgsDescriptionMetadata\";\nimport { SeriesViewerDescriptionMetadata } from \"./SeriesViewerDescriptionMetadata\";\nimport { GeographicMapDescription } from \"./GeographicMapDescription\";\nimport { ImagesChangedEventArgsDescriptionMetadata } from \"./ImagesChangedEventArgsDescriptionMetadata\";\nimport { CancellingMultiScaleImageEventArgsDescriptionMetadata } from \"./CancellingMultiScaleImageEventArgsDescriptionMetadata\";\nimport { DownloadingMultiScaleImageEventArgsDescriptionMetadata } from \"./DownloadingMultiScaleImageEventArgsDescriptionMetadata\";\n/**\n * @hidden\n */\n\nvar GeographicMapDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(GeographicMapDescriptionMetadata, _super);\n\n  function GeographicMapDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  GeographicMapDescriptionMetadata.b = function (a) {\n    if (GeographicMapDescriptionMetadata.a == null) {\n      GeographicMapDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      GeographicMapDescriptionMetadata.c(GeographicMapDescriptionMetadata.a);\n    }\n\n    if (a.g(GeographicMapDescriptionMetadata.a)) {\n      return;\n    }\n\n    a.s(GeographicMapDescriptionMetadata.a);\n    GeographicMapImageryDescriptionMetadata.d(a);\n    ImageTilesReadyEventArgsDescriptionMetadata.d(a);\n  };\n\n  GeographicMapDescriptionMetadata.c = function (a) {\n    SeriesViewerDescriptionMetadata.c(a);\n    a.item(\"Zoomable\", \"Boolean\");\n    a.item(\"ResizeBehavior\", \"ExportedType:string:MapResizeBehavior\");\n    a.item(\"ResizeBehavior@names\", \"Auto;MaintainTopLeftPosition;MaintainCenterPosition\");\n    a.item(\"IsHorizontalWrappingEnabled\", \"Boolean\");\n    a.item(\"BackgroundTilingMode\", \"ExportedType:string:MapBackgroundTilingMode\");\n    a.item(\"BackgroundTilingMode@names\", \"Auto;NonWrapped;Wrapped\");\n    a.item(\"UseWorldRectForZoomBounds\", \"Boolean\");\n    a.item(\"SuppressZoomResetOnWorldRectChange\", \"Boolean\");\n    a.item(\"WorldRect\", \"Rect\");\n    a.item(\"ActualWorldRect\", \"Rect\");\n    a.item(\"BackgroundContent\", \"ExportedType:GeographicMapImagery\");\n    a.item(\"WindowScale\", \"Number:double\");\n    a.item(\"ActualWindowScale\", \"Number:double\");\n    a.item(\"ImageTilesReadyRef\", \"EventRef::imageTilesReady\");\n    GeographicMapDescriptionMetadata.e(a);\n  };\n\n  GeographicMapDescriptionMetadata.d = function (a) {\n    GeographicMapDescriptionMetadata.b(a);\n    a.u(\"GeographicMap\", function () {\n      return new GeographicMapDescription();\n    });\n    a.t(\"GeographicMap\", GeographicMapDescriptionMetadata.a);\n  };\n\n  GeographicMapDescriptionMetadata.e = function (a) {\n    a.item(\"_qualifiedName\", \"String:Infragistics.Controls.Charts.XamGeogrpahicMap\");\n    a.item(\"Width\", \"(w:Width/DimensionTransform,xam:Width/DimensionTransform)String\");\n    a.item(\"Height\", \"(w:Height/DimensionTransform,xam:Height/DimensionTransform)String\");\n  };\n\n  GeographicMapDescriptionMetadata.$t = markType(GeographicMapDescriptionMetadata, 'GeographicMapDescriptionMetadata');\n  GeographicMapDescriptionMetadata.a = null;\n  return GeographicMapDescriptionMetadata;\n}(Base);\n\nexport { GeographicMapDescriptionMetadata };\n/**\n * @hidden\n */\n\nvar GeographicMapImageryDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(GeographicMapImageryDescriptionMetadata, _super);\n\n  function GeographicMapImageryDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  GeographicMapImageryDescriptionMetadata.b = function (a) {\n    if (GeographicMapImageryDescriptionMetadata.a == null) {\n      GeographicMapImageryDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      GeographicMapImageryDescriptionMetadata.c(GeographicMapImageryDescriptionMetadata.a);\n    }\n\n    if (a.g(GeographicMapImageryDescriptionMetadata.a)) {\n      return;\n    }\n\n    a.s(GeographicMapImageryDescriptionMetadata.a);\n    GeographicMapDescriptionMetadata.d(a);\n    ImageTilesReadyEventArgsDescriptionMetadata.d(a);\n    ImagesChangedEventArgsDescriptionMetadata.d(a);\n    CancellingMultiScaleImageEventArgsDescriptionMetadata.d(a);\n    DownloadingMultiScaleImageEventArgsDescriptionMetadata.d(a);\n  };\n\n  GeographicMapImageryDescriptionMetadata.c = function (a) {\n    a.item(\"WindowRect\", \"Rect\");\n    a.item(\"GeographicMap\", \"ExportedType:XamGeographicMap\");\n    a.item(\"Referer\", \"String\");\n    a.item(\"IsHorizontalWrappingEnabled\", \"Boolean\");\n    a.item(\"UserAgent\", \"String\");\n    a.item(\"Opacity\", \"Number:double\");\n    a.item(\"ImageTilesReadyRef\", \"EventRef::imageTilesReady\");\n    a.item(\"ImagesChangedRef\", \"EventRef::imagesChanged\");\n    a.item(\"CancellingImageRef\", \"EventRef::cancellingImage\");\n    a.item(\"DownloadingImageRef\", \"EventRef::downloadingImage\");\n  };\n\n  GeographicMapImageryDescriptionMetadata.d = function (a) {\n    GeographicMapImageryDescriptionMetadata.b(a);\n    a.t(\"GeographicMapImagery\", GeographicMapImageryDescriptionMetadata.a);\n  };\n\n  GeographicMapImageryDescriptionMetadata.$t = markType(GeographicMapImageryDescriptionMetadata, 'GeographicMapImageryDescriptionMetadata');\n  GeographicMapImageryDescriptionMetadata.a = null;\n  return GeographicMapImageryDescriptionMetadata;\n}(Base);\n\nexport { GeographicMapImageryDescriptionMetadata };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/GeographicMapDescriptionMetadata_combined.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { ImageTilesReadyEventArgsDescriptionMetadata } from \"./ImageTilesReadyEventArgsDescriptionMetadata\";\nimport { SeriesViewerDescriptionMetadata } from \"./SeriesViewerDescriptionMetadata\";\nimport { GeographicMapDescription } from \"./GeographicMapDescription\";\nimport { ImagesChangedEventArgsDescriptionMetadata } from \"./ImagesChangedEventArgsDescriptionMetadata\";\nimport { CancellingMultiScaleImageEventArgsDescriptionMetadata } from \"./CancellingMultiScaleImageEventArgsDescriptionMetadata\";\nimport { DownloadingMultiScaleImageEventArgsDescriptionMetadata } from \"./DownloadingMultiScaleImageEventArgsDescriptionMetadata\";\n/**\n * @hidden\n */\nvar GeographicMapDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(GeographicMapDescriptionMetadata, _super);\n    function GeographicMapDescriptionMetadata() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    GeographicMapDescriptionMetadata.b = function (a) {\n        if (GeographicMapDescriptionMetadata.a == null) {\n            GeographicMapDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n            GeographicMapDescriptionMetadata.c(GeographicMapDescriptionMetadata.a);\n        }\n        if (a.g(GeographicMapDescriptionMetadata.a)) {\n            return;\n        }\n        a.s(GeographicMapDescriptionMetadata.a);\n        GeographicMapImageryDescriptionMetadata.d(a);\n        ImageTilesReadyEventArgsDescriptionMetadata.d(a);\n    };\n    GeographicMapDescriptionMetadata.c = function (a) {\n        SeriesViewerDescriptionMetadata.c(a);\n        a.item(\"Zoomable\", \"Boolean\");\n        a.item(\"ResizeBehavior\", \"ExportedType:string:MapResizeBehavior\");\n        a.item(\"ResizeBehavior@names\", \"Auto;MaintainTopLeftPosition;MaintainCenterPosition\");\n        a.item(\"IsHorizontalWrappingEnabled\", \"Boolean\");\n        a.item(\"BackgroundTilingMode\", \"ExportedType:string:MapBackgroundTilingMode\");\n        a.item(\"BackgroundTilingMode@names\", \"Auto;NonWrapped;Wrapped\");\n        a.item(\"UseWorldRectForZoomBounds\", \"Boolean\");\n        a.item(\"SuppressZoomResetOnWorldRectChange\", \"Boolean\");\n        a.item(\"WorldRect\", \"Rect\");\n        a.item(\"ActualWorldRect\", \"Rect\");\n        a.item(\"BackgroundContent\", \"ExportedType:GeographicMapImagery\");\n        a.item(\"WindowScale\", \"Number:double\");\n        a.item(\"ActualWindowScale\", \"Number:double\");\n        a.item(\"ImageTilesReadyRef\", \"EventRef::imageTilesReady\");\n        GeographicMapDescriptionMetadata.e(a);\n    };\n    GeographicMapDescriptionMetadata.d = function (a) {\n        GeographicMapDescriptionMetadata.b(a);\n        a.u(\"GeographicMap\", function () { return new GeographicMapDescription(); });\n        a.t(\"GeographicMap\", GeographicMapDescriptionMetadata.a);\n    };\n    GeographicMapDescriptionMetadata.e = function (a) {\n        a.item(\"_qualifiedName\", \"String:Infragistics.Controls.Charts.XamGeogrpahicMap\");\n        a.item(\"Width\", \"(w:Width/DimensionTransform,xam:Width/DimensionTransform)String\");\n        a.item(\"Height\", \"(w:Height/DimensionTransform,xam:Height/DimensionTransform)String\");\n    };\n    GeographicMapDescriptionMetadata.$t = markType(GeographicMapDescriptionMetadata, 'GeographicMapDescriptionMetadata');\n    GeographicMapDescriptionMetadata.a = null;\n    return GeographicMapDescriptionMetadata;\n}(Base));\nexport { GeographicMapDescriptionMetadata };\n/**\n * @hidden\n */\nvar GeographicMapImageryDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(GeographicMapImageryDescriptionMetadata, _super);\n    function GeographicMapImageryDescriptionMetadata() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    GeographicMapImageryDescriptionMetadata.b = function (a) {\n        if (GeographicMapImageryDescriptionMetadata.a == null) {\n            GeographicMapImageryDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n            GeographicMapImageryDescriptionMetadata.c(GeographicMapImageryDescriptionMetadata.a);\n        }\n        if (a.g(GeographicMapImageryDescriptionMetadata.a)) {\n            return;\n        }\n        a.s(GeographicMapImageryDescriptionMetadata.a);\n        GeographicMapDescriptionMetadata.d(a);\n        ImageTilesReadyEventArgsDescriptionMetadata.d(a);\n        ImagesChangedEventArgsDescriptionMetadata.d(a);\n        CancellingMultiScaleImageEventArgsDescriptionMetadata.d(a);\n        DownloadingMultiScaleImageEventArgsDescriptionMetadata.d(a);\n    };\n    GeographicMapImageryDescriptionMetadata.c = function (a) {\n        a.item(\"WindowRect\", \"Rect\");\n        a.item(\"GeographicMap\", \"ExportedType:XamGeographicMap\");\n        a.item(\"Referer\", \"String\");\n        a.item(\"IsHorizontalWrappingEnabled\", \"Boolean\");\n        a.item(\"UserAgent\", \"String\");\n        a.item(\"Opacity\", \"Number:double\");\n        a.item(\"ImageTilesReadyRef\", \"EventRef::imageTilesReady\");\n        a.item(\"ImagesChangedRef\", \"EventRef::imagesChanged\");\n        a.item(\"CancellingImageRef\", \"EventRef::cancellingImage\");\n        a.item(\"DownloadingImageRef\", \"EventRef::downloadingImage\");\n    };\n    GeographicMapImageryDescriptionMetadata.d = function (a) {\n        GeographicMapImageryDescriptionMetadata.b(a);\n        a.t(\"GeographicMapImagery\", GeographicMapImageryDescriptionMetadata.a);\n    };\n    GeographicMapImageryDescriptionMetadata.$t = markType(GeographicMapImageryDescriptionMetadata, 'GeographicMapImageryDescriptionMetadata');\n    GeographicMapImageryDescriptionMetadata.a = null;\n    return GeographicMapImageryDescriptionMetadata;\n}(Base));\nexport { GeographicMapImageryDescriptionMetadata };\n//# sourceMappingURL=GeographicMapDescriptionMetadata_combined.js.map\n"]},"metadata":{},"sourceType":"module"}