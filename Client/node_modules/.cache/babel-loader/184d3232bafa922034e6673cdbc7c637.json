{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { FilterExpressionDescriptionMetadata } from \"./FilterExpressionDescriptionMetadata\";\nimport { OperationFilterExpressionDescription } from \"./OperationFilterExpressionDescription\";\n/**\n * @hidden\n */\n\nvar OperationFilterExpressionDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(OperationFilterExpressionDescriptionMetadata, _super);\n\n  function OperationFilterExpressionDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  OperationFilterExpressionDescriptionMetadata.b = function (a) {\n    if (OperationFilterExpressionDescriptionMetadata.a == null) {\n      OperationFilterExpressionDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      OperationFilterExpressionDescriptionMetadata.c(OperationFilterExpressionDescriptionMetadata.a);\n    }\n\n    if (a.g(OperationFilterExpressionDescriptionMetadata.a)) {\n      return;\n    }\n\n    a.s(OperationFilterExpressionDescriptionMetadata.a);\n    FilterExpressionDescriptionMetadata.d(a);\n  };\n\n  OperationFilterExpressionDescriptionMetadata.c = function (a) {\n    FilterExpressionDescriptionMetadata.c(a);\n    a.item(\"PropertyName\", \"String\");\n    a.item(\"ValueRef\", \"(w:Value,wf:Value)DataRef\");\n    a.item(\"Left\", \"ExportedType:IFilterExpression\");\n    a.item(\"Right\", \"ExportedType:IFilterExpression\");\n    a.item(\"Operator\", \"ExportedType:string:FilterExpressionOperatorType\");\n    a.item(\"Operator@names\", \"None;Equal;NotEqual;GreaterThan;GreaterThanOrEqual;LessThan;LessThanOrEqual;And;Or;Not;Add;Subtract;Multiply;Divide;Modulo;Grouping\");\n  };\n\n  OperationFilterExpressionDescriptionMetadata.d = function (a) {\n    OperationFilterExpressionDescriptionMetadata.b(a);\n    a.u(\"OperationFilterExpression\", function () {\n      return new OperationFilterExpressionDescription();\n    });\n    a.t(\"OperationFilterExpression\", OperationFilterExpressionDescriptionMetadata.a);\n  };\n\n  OperationFilterExpressionDescriptionMetadata.$t = markType(OperationFilterExpressionDescriptionMetadata, 'OperationFilterExpressionDescriptionMetadata');\n  OperationFilterExpressionDescriptionMetadata.a = null;\n  return OperationFilterExpressionDescriptionMetadata;\n}(Base);\n\nexport { OperationFilterExpressionDescriptionMetadata };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/OperationFilterExpressionDescriptionMetadata.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,IAAT,EAAe,YAAf,EAAmC,QAAnC,QAAmD,QAAnD;AAEA,SAAS,YAAT,QAA6B,gBAA7B;AACA,SAAS,mCAAT,QAAoD,uCAApD;AACA,SAAS,oCAAT,QAAqD,wCAArD;AAEA;;AAEG;;AACH,IAAA,4CAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAkE,EAAA,SAAA,CAAA,4CAAA,EAAA,MAAA,CAAA;;AAAlE,WAAA,4CAAA,GAAA;;AA4BC;;AAzBe,EAAA,4CAAA,CAAA,CAAA,GAAf,UAAiB,CAAjB,EAA0C;AACzC,QAAI,4CAA4C,CAAC,CAA7C,IAAkD,IAAtD,EAA4D;AAC3D,MAAA,4CAA4C,CAAC,CAA7C,GAAiD,IAAI,YAAJ,CAAiC,YAAjC,EAA+C,YAA/C,EAA6D,CAA7D,CAAjD;AACA,MAAA,4CAA4C,CAAC,CAA7C,CAA+C,4CAA4C,CAAC,CAA5F;AACA;;AACD,QAAI,CAAC,CAAC,CAAF,CAAI,4CAA4C,CAAC,CAAjD,CAAJ,EAAyD;AACxD;AACA;;AACD,IAAA,CAAC,CAAC,CAAF,CAAI,4CAA4C,CAAC,CAAjD;AACA,IAAA,mCAAmC,CAAC,CAApC,CAAsC,CAAtC;AACA,GAVc;;AAWR,EAAA,4CAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAwC;AACvC,IAAA,mCAAmC,CAAC,CAApC,CAAsC,CAAtC;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,cAAP,EAAuB,QAAvB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,UAAP,EAAmB,2BAAnB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,MAAP,EAAe,gCAAf;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,OAAP,EAAgB,gCAAhB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,UAAP,EAAmB,kDAAnB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,gBAAP,EAAyB,qIAAzB;AACA,GARM;;AASA,EAAA,4CAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAkC;AACjC,IAAA,4CAA4C,CAAC,CAA7C,CAA+C,CAA/C;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,2BAAJ,EAAiC,YAAA;AAAM,aAAA,IAAA,oCAAA,EAAA;AAA0C,KAAjF;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,2BAAJ,EAAiC,4CAA4C,CAAC,CAA9E;AACA,GAJM;;AAtBA,EAAA,4CAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,4CAAD,EAA+C,8CAA/C,CAAnB;AACQ,EAAA,4CAAA,CAAA,CAAA,GAAkC,IAAlC;AA0BhB,SAAA,4CAAA;AAAC,CA5BD,CAAkE,IAAlE,CAAA;;SAAa,4C","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { FilterExpressionDescriptionMetadata } from \"./FilterExpressionDescriptionMetadata\";\nimport { OperationFilterExpressionDescription } from \"./OperationFilterExpressionDescription\";\n/**\n * @hidden\n */\nvar OperationFilterExpressionDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(OperationFilterExpressionDescriptionMetadata, _super);\n    function OperationFilterExpressionDescriptionMetadata() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    OperationFilterExpressionDescriptionMetadata.b = function (a) {\n        if (OperationFilterExpressionDescriptionMetadata.a == null) {\n            OperationFilterExpressionDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n            OperationFilterExpressionDescriptionMetadata.c(OperationFilterExpressionDescriptionMetadata.a);\n        }\n        if (a.g(OperationFilterExpressionDescriptionMetadata.a)) {\n            return;\n        }\n        a.s(OperationFilterExpressionDescriptionMetadata.a);\n        FilterExpressionDescriptionMetadata.d(a);\n    };\n    OperationFilterExpressionDescriptionMetadata.c = function (a) {\n        FilterExpressionDescriptionMetadata.c(a);\n        a.item(\"PropertyName\", \"String\");\n        a.item(\"ValueRef\", \"(w:Value,wf:Value)DataRef\");\n        a.item(\"Left\", \"ExportedType:IFilterExpression\");\n        a.item(\"Right\", \"ExportedType:IFilterExpression\");\n        a.item(\"Operator\", \"ExportedType:string:FilterExpressionOperatorType\");\n        a.item(\"Operator@names\", \"None;Equal;NotEqual;GreaterThan;GreaterThanOrEqual;LessThan;LessThanOrEqual;And;Or;Not;Add;Subtract;Multiply;Divide;Modulo;Grouping\");\n    };\n    OperationFilterExpressionDescriptionMetadata.d = function (a) {\n        OperationFilterExpressionDescriptionMetadata.b(a);\n        a.u(\"OperationFilterExpression\", function () { return new OperationFilterExpressionDescription(); });\n        a.t(\"OperationFilterExpression\", OperationFilterExpressionDescriptionMetadata.a);\n    };\n    OperationFilterExpressionDescriptionMetadata.$t = markType(OperationFilterExpressionDescriptionMetadata, 'OperationFilterExpressionDescriptionMetadata');\n    OperationFilterExpressionDescriptionMetadata.a = null;\n    return OperationFilterExpressionDescriptionMetadata;\n}(Base));\nexport { OperationFilterExpressionDescriptionMetadata };\n//# sourceMappingURL=OperationFilterExpressionDescriptionMetadata.js.map\n"]},"metadata":{},"sourceType":"module"}