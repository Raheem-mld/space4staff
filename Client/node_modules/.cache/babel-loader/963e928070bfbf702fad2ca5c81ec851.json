{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { SplineType_$type } from \"./SplineType\";\nimport { IgrHorizontalAnchoredCategorySeries } from \"./igr-horizontal-anchored-category-series\";\nimport { ensureBool, ensureEnum } from \"igniteui-react-core\";\n/**\n * Represents the base class for all IgxDataChartComponent spline series.\n*/\n\nvar IgrSplineSeriesBase =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(IgrSplineSeriesBase, _super);\n\n  function IgrSplineSeriesBase(props) {\n    return _super.call(this, props) || this;\n  }\n\n  Object.defineProperty(IgrSplineSeriesBase.prototype, \"i\", {\n    /**\n                                 * @hidden\n                                 */\n    get: function () {\n      return this._implementation;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrSplineSeriesBase.prototype, \"isSplineShapePartOfRange\", {\n    /**\n     * Gets or sets whether to include the spline shape in the axis range requested of the axis.\n    */\n    get: function () {\n      return this.i.uk;\n    },\n    set: function (v) {\n      this.i.uk = ensureBool(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrSplineSeriesBase.prototype, \"isAreaOrLine\", {\n    /**\n     * Gets whether the current series shows an area or line shape.\n    */\n    get: function () {\n      return this.i.c8;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrSplineSeriesBase.prototype, \"splineType\", {\n    /**\n     * Gets or sets the type of spline to be rendered.\n    *\n    * ```ts\n    * this.series.splineType = SplineType.Clamped;\n    * ```\n    *\n    * ```ts\n    *  <IgrDataChart\n    *     dataSource={this.state.dataSource} >\n    *\n    *     <IgrCategoryXAxis name=\"xAxis\" />\n    *     <IgrNumericYAxis name=\"yAxis\" />\n    *\n    *     <IgrSplineAreaSeries\n    *      name=\"series1\"\n    *      valueMemberPath=\"value\"/>\n    *  </IgrDataChart>\n    * ```\n    */\n    get: function () {\n      return this.i.uj;\n    },\n    set: function (v) {\n      this.i.uj = ensureEnum(SplineType_$type, v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return IgrSplineSeriesBase;\n}(IgrHorizontalAnchoredCategorySeries);\n\nexport { IgrSplineSeriesBase };","map":{"version":3,"sources":["../../../../src/igniteui-charts/lib/igr-spline-series-base.ts"],"names":[],"mappings":";AAKA,SAAqB,gBAArB,QAA6C,cAA7C;AACA,SAAS,mCAAT,QAA+F,2CAA/F;AAMA,SAAS,UAAT,EAAqB,UAArB,QAAuC,qBAAvC;AAEA;;AAEE;;AACF,IAAA,mBAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAmH,EAAA,SAAA,CAAA,mBAAA,EAAA,MAAA,CAAA;;AAUlH,WAAA,mBAAA,CAAY,KAAZ,EAAoB;WACgB,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,KAAN,KAAY,I;AAG/C;;AAP2B,EAAA,MAAA,CAAA,cAAA,CAAW,mBAAA,CAAA,SAAX,EAAW,GAAX,EAAY;AAHxC;;AAE+B;SACH,YAAA;AAC3B,aAAO,KAAK,eAAZ;AACA,KAFuC;qBAAA;;AAAA,GAAZ;AAW5B,EAAA,MAAA,CAAA,cAAA,CAAI,mBAAA,CAAA,SAAJ,EAAI,0BAAJ,EAA4B;AAH5B;;AAEE;SACF,YAAA;AACC,aAAQ,KAAK,CAAL,CAAO,EAAf;AACA,KAF2B;SAG5B,UAA6B,CAA7B,EAAuC;AACtC,WAAK,CAAL,CAAO,EAAP,GAAY,UAAU,CAAC,CAAD,CAAtB;AACA,KAL2B;qBAAA;;AAAA,GAA5B;AASA,EAAA,MAAA,CAAA,cAAA,CAAI,mBAAA,CAAA,SAAJ,EAAI,cAAJ,EAAgB;AAHhB;;AAEE;SACF,YAAA;AACC,aAAQ,KAAK,CAAL,CAAO,EAAf;AACA,KAFe;qBAAA;;AAAA,GAAhB;AAuBA,EAAA,MAAA,CAAA,cAAA,CAAI,mBAAA,CAAA,SAAJ,EAAI,YAAJ,EAAc;AApBd;;;;;;;;;;;;;;;;;;;AAmBE;SACF,YAAA;AACC,aAAO,KAAK,CAAL,CAAO,EAAd;AACA,KAFa;SAGd,UAAe,CAAf,EAA4B;AAC3B,WAAK,CAAL,CAAO,EAAP,GAAY,UAAU,CAAa,gBAAb,EAA+B,CAA/B,CAAtB;AACA,KALa;qBAAA;;AAAA,GAAd;AAMD,SAAA,mBAAA;AAAC,CAxDD,CAAmH,mCAAnH,CAAA","sourceRoot":"","sourcesContent":["import { __extends } from \"tslib\";\nimport { SplineType_$type } from \"./SplineType\";\nimport { IgrHorizontalAnchoredCategorySeries } from \"./igr-horizontal-anchored-category-series\";\nimport { ensureBool, ensureEnum } from \"igniteui-react-core\";\n/**\n * Represents the base class for all IgxDataChartComponent spline series.\n*/\nvar IgrSplineSeriesBase = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(IgrSplineSeriesBase, _super);\n    function IgrSplineSeriesBase(props) {\n        return _super.call(this, props) || this;\n    }\n    Object.defineProperty(IgrSplineSeriesBase.prototype, \"i\", {\n        /**\n                                     * @hidden\n                                     */\n        get: function () {\n            return this._implementation;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrSplineSeriesBase.prototype, \"isSplineShapePartOfRange\", {\n        /**\n         * Gets or sets whether to include the spline shape in the axis range requested of the axis.\n        */\n        get: function () {\n            return this.i.uk;\n        },\n        set: function (v) {\n            this.i.uk = ensureBool(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrSplineSeriesBase.prototype, \"isAreaOrLine\", {\n        /**\n         * Gets whether the current series shows an area or line shape.\n        */\n        get: function () {\n            return this.i.c8;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrSplineSeriesBase.prototype, \"splineType\", {\n        /**\n         * Gets or sets the type of spline to be rendered.\n        *\n        * ```ts\n        * this.series.splineType = SplineType.Clamped;\n        * ```\n        *\n        * ```ts\n        *  <IgrDataChart\n        *     dataSource={this.state.dataSource} >\n        *\n        *     <IgrCategoryXAxis name=\"xAxis\" />\n        *     <IgrNumericYAxis name=\"yAxis\" />\n        *\n        *     <IgrSplineAreaSeries\n        *      name=\"series1\"\n        *      valueMemberPath=\"value\"/>\n        *  </IgrDataChart>\n        * ```\n        */\n        get: function () {\n            return this.i.uj;\n        },\n        set: function (v) {\n            this.i.uj = ensureEnum(SplineType_$type, v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return IgrSplineSeriesBase;\n}(IgrHorizontalAnchoredCategorySeries));\nexport { IgrSplineSeriesBase };\n//# sourceMappingURL=igr-spline-series-base.js.map\n"]},"metadata":{},"sourceType":"module"}