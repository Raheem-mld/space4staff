{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { TreemapNodePointerEventArgsDescription } from \"./TreemapNodePointerEventArgsDescription\";\n/**\n * @hidden\n */\n\nvar TreemapNodePointerEventArgsDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(TreemapNodePointerEventArgsDescriptionMetadata, _super);\n\n  function TreemapNodePointerEventArgsDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  TreemapNodePointerEventArgsDescriptionMetadata.b = function (a) {\n    if (TreemapNodePointerEventArgsDescriptionMetadata.a == null) {\n      TreemapNodePointerEventArgsDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      TreemapNodePointerEventArgsDescriptionMetadata.c(TreemapNodePointerEventArgsDescriptionMetadata.a);\n    }\n\n    if (a.g(TreemapNodePointerEventArgsDescriptionMetadata.a)) {\n      return;\n    }\n\n    a.s(TreemapNodePointerEventArgsDescriptionMetadata.a);\n  };\n\n  TreemapNodePointerEventArgsDescriptionMetadata.c = function (a) {\n    a.item(\"Value\", \"Number:double\");\n    a.item(\"Sum\", \"Number:double\");\n    a.item(\"CustomValueRef\", \"(w:CustomValue,wf:CustomValue)DataRef\");\n    a.item(\"ItemRef\", \"(w:Item,wf:Item)DataRef\");\n    a.item(\"ParentItemRef\", \"(w:ParentItem,wf:ParentItem)DataRef\");\n    a.item(\"Position\", \"Point\");\n    a.item(\"IsRightButton\", \"Boolean\");\n    a.item(\"IsHandled\", \"Boolean\");\n    a.item(\"IsOverHeader\", \"Boolean\");\n    a.item(\"Label\", \"String\");\n    a.item(\"ParentValue\", \"Number:double\");\n    a.item(\"ParentLabel\", \"String\");\n    a.item(\"ParentSum\", \"Number:double\");\n  };\n\n  TreemapNodePointerEventArgsDescriptionMetadata.d = function (a) {\n    TreemapNodePointerEventArgsDescriptionMetadata.b(a);\n    a.u(\"TreemapNodePointerEventArgs\", function () {\n      return new TreemapNodePointerEventArgsDescription();\n    });\n    a.t(\"TreemapNodePointerEventArgs\", TreemapNodePointerEventArgsDescriptionMetadata.a);\n  };\n\n  TreemapNodePointerEventArgsDescriptionMetadata.$t = markType(TreemapNodePointerEventArgsDescriptionMetadata, 'TreemapNodePointerEventArgsDescriptionMetadata');\n  TreemapNodePointerEventArgsDescriptionMetadata.a = null;\n  return TreemapNodePointerEventArgsDescriptionMetadata;\n}(Base);\n\nexport { TreemapNodePointerEventArgsDescriptionMetadata };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/TreemapNodePointerEventArgsDescriptionMetadata.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,IAAT,EAAe,YAAf,EAAmC,QAAnC,QAAmD,QAAnD;AAEA,SAAS,YAAT,QAA6B,gBAA7B;AACA,SAAS,sCAAT,QAAuD,0CAAvD;AAEA;;AAEG;;AACH,IAAA,8CAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAoE,EAAA,SAAA,CAAA,8CAAA,EAAA,MAAA,CAAA;;AAApE,WAAA,8CAAA,GAAA;;AAiCC;;AA9Be,EAAA,8CAAA,CAAA,CAAA,GAAf,UAAiB,CAAjB,EAA0C;AACzC,QAAI,8CAA8C,CAAC,CAA/C,IAAoD,IAAxD,EAA8D;AAC7D,MAAA,8CAA8C,CAAC,CAA/C,GAAmD,IAAI,YAAJ,CAAiC,YAAjC,EAA+C,YAA/C,EAA6D,CAA7D,CAAnD;AACA,MAAA,8CAA8C,CAAC,CAA/C,CAAiD,8CAA8C,CAAC,CAAhG;AACA;;AACD,QAAI,CAAC,CAAC,CAAF,CAAI,8CAA8C,CAAC,CAAnD,CAAJ,EAA2D;AAC1D;AACA;;AACD,IAAA,CAAC,CAAC,CAAF,CAAI,8CAA8C,CAAC,CAAnD;AACA,GATc;;AAUR,EAAA,8CAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAwC;AACvC,IAAA,CAAC,CAAC,IAAF,CAAO,OAAP,EAAgB,eAAhB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,KAAP,EAAc,eAAd;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,gBAAP,EAAyB,uCAAzB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,SAAP,EAAkB,yBAAlB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,eAAP,EAAwB,qCAAxB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,UAAP,EAAmB,OAAnB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,eAAP,EAAwB,SAAxB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,WAAP,EAAoB,SAApB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,cAAP,EAAuB,SAAvB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,OAAP,EAAgB,QAAhB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,aAAP,EAAsB,eAAtB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,aAAP,EAAsB,QAAtB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,WAAP,EAAoB,eAApB;AACA,GAdM;;AAeA,EAAA,8CAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAkC;AACjC,IAAA,8CAA8C,CAAC,CAA/C,CAAiD,CAAjD;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,6BAAJ,EAAmC,YAAA;AAAM,aAAA,IAAA,sCAAA,EAAA;AAA4C,KAArF;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,6BAAJ,EAAmC,8CAA8C,CAAC,CAAlF;AACA,GAJM;;AA3BA,EAAA,8CAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,8CAAD,EAAiD,gDAAjD,CAAnB;AACQ,EAAA,8CAAA,CAAA,CAAA,GAAkC,IAAlC;AA+BhB,SAAA,8CAAA;AAAC,CAjCD,CAAoE,IAApE,CAAA;;SAAa,8C","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { TreemapNodePointerEventArgsDescription } from \"./TreemapNodePointerEventArgsDescription\";\n/**\n * @hidden\n */\nvar TreemapNodePointerEventArgsDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(TreemapNodePointerEventArgsDescriptionMetadata, _super);\n    function TreemapNodePointerEventArgsDescriptionMetadata() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    TreemapNodePointerEventArgsDescriptionMetadata.b = function (a) {\n        if (TreemapNodePointerEventArgsDescriptionMetadata.a == null) {\n            TreemapNodePointerEventArgsDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n            TreemapNodePointerEventArgsDescriptionMetadata.c(TreemapNodePointerEventArgsDescriptionMetadata.a);\n        }\n        if (a.g(TreemapNodePointerEventArgsDescriptionMetadata.a)) {\n            return;\n        }\n        a.s(TreemapNodePointerEventArgsDescriptionMetadata.a);\n    };\n    TreemapNodePointerEventArgsDescriptionMetadata.c = function (a) {\n        a.item(\"Value\", \"Number:double\");\n        a.item(\"Sum\", \"Number:double\");\n        a.item(\"CustomValueRef\", \"(w:CustomValue,wf:CustomValue)DataRef\");\n        a.item(\"ItemRef\", \"(w:Item,wf:Item)DataRef\");\n        a.item(\"ParentItemRef\", \"(w:ParentItem,wf:ParentItem)DataRef\");\n        a.item(\"Position\", \"Point\");\n        a.item(\"IsRightButton\", \"Boolean\");\n        a.item(\"IsHandled\", \"Boolean\");\n        a.item(\"IsOverHeader\", \"Boolean\");\n        a.item(\"Label\", \"String\");\n        a.item(\"ParentValue\", \"Number:double\");\n        a.item(\"ParentLabel\", \"String\");\n        a.item(\"ParentSum\", \"Number:double\");\n    };\n    TreemapNodePointerEventArgsDescriptionMetadata.d = function (a) {\n        TreemapNodePointerEventArgsDescriptionMetadata.b(a);\n        a.u(\"TreemapNodePointerEventArgs\", function () { return new TreemapNodePointerEventArgsDescription(); });\n        a.t(\"TreemapNodePointerEventArgs\", TreemapNodePointerEventArgsDescriptionMetadata.a);\n    };\n    TreemapNodePointerEventArgsDescriptionMetadata.$t = markType(TreemapNodePointerEventArgsDescriptionMetadata, 'TreemapNodePointerEventArgsDescriptionMetadata');\n    TreemapNodePointerEventArgsDescriptionMetadata.a = null;\n    return TreemapNodePointerEventArgsDescriptionMetadata;\n}(Base));\nexport { TreemapNodePointerEventArgsDescriptionMetadata };\n//# sourceMappingURL=TreemapNodePointerEventArgsDescriptionMetadata.js.map\n"]},"metadata":{},"sourceType":"module"}