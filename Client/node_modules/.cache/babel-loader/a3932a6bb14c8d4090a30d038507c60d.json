{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { FunnelDataContextDescription } from \"./FunnelDataContextDescription\";\n/**\n * @hidden\n */\n\nvar FunnelDataContextDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(FunnelDataContextDescriptionMetadata, _super);\n\n  function FunnelDataContextDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  FunnelDataContextDescriptionMetadata.b = function (a) {\n    if (FunnelDataContextDescriptionMetadata.a == null) {\n      FunnelDataContextDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      FunnelDataContextDescriptionMetadata.c(FunnelDataContextDescriptionMetadata.a);\n    }\n\n    if (a.g(FunnelDataContextDescriptionMetadata.a)) {\n      return;\n    }\n\n    a.s(FunnelDataContextDescriptionMetadata.a);\n  };\n\n  FunnelDataContextDescriptionMetadata.c = function (a) {\n    a.item(\"ItemRef\", \"(w:Item,wf:Item)DataRef\");\n    a.item(\"Index\", \"Number:int\");\n  };\n\n  FunnelDataContextDescriptionMetadata.d = function (a) {\n    FunnelDataContextDescriptionMetadata.b(a);\n    a.u(\"FunnelDataContext\", function () {\n      return new FunnelDataContextDescription();\n    });\n    a.t(\"FunnelDataContext\", FunnelDataContextDescriptionMetadata.a);\n  };\n\n  FunnelDataContextDescriptionMetadata.$t = markType(FunnelDataContextDescriptionMetadata, 'FunnelDataContextDescriptionMetadata');\n  FunnelDataContextDescriptionMetadata.a = null;\n  return FunnelDataContextDescriptionMetadata;\n}(Base);\n\nexport { FunnelDataContextDescriptionMetadata };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/FunnelDataContextDescriptionMetadata.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,IAAT,EAAe,YAAf,EAAmC,QAAnC,QAAmD,QAAnD;AAEA,SAAS,YAAT,QAA6B,gBAA7B;AACA,SAAS,4BAAT,QAA6C,gCAA7C;AAEA;;AAEG;;AACH,IAAA,oCAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAA0D,EAAA,SAAA,CAAA,oCAAA,EAAA,MAAA,CAAA;;AAA1D,WAAA,oCAAA,GAAA;;AAsBC;;AAnBe,EAAA,oCAAA,CAAA,CAAA,GAAf,UAAiB,CAAjB,EAA0C;AACzC,QAAI,oCAAoC,CAAC,CAArC,IAA0C,IAA9C,EAAoD;AACnD,MAAA,oCAAoC,CAAC,CAArC,GAAyC,IAAI,YAAJ,CAAiC,YAAjC,EAA+C,YAA/C,EAA6D,CAA7D,CAAzC;AACA,MAAA,oCAAoC,CAAC,CAArC,CAAuC,oCAAoC,CAAC,CAA5E;AACA;;AACD,QAAI,CAAC,CAAC,CAAF,CAAI,oCAAoC,CAAC,CAAzC,CAAJ,EAAiD;AAChD;AACA;;AACD,IAAA,CAAC,CAAC,CAAF,CAAI,oCAAoC,CAAC,CAAzC;AACA,GATc;;AAUR,EAAA,oCAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAwC;AACvC,IAAA,CAAC,CAAC,IAAF,CAAO,SAAP,EAAkB,yBAAlB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,OAAP,EAAgB,YAAhB;AACA,GAHM;;AAIA,EAAA,oCAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAkC;AACjC,IAAA,oCAAoC,CAAC,CAArC,CAAuC,CAAvC;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,mBAAJ,EAAyB,YAAA;AAAM,aAAA,IAAA,4BAAA,EAAA;AAAkC,KAAjE;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,mBAAJ,EAAyB,oCAAoC,CAAC,CAA9D;AACA,GAJM;;AAhBA,EAAA,oCAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,oCAAD,EAAuC,sCAAvC,CAAnB;AACQ,EAAA,oCAAA,CAAA,CAAA,GAAkC,IAAlC;AAoBhB,SAAA,oCAAA;AAAC,CAtBD,CAA0D,IAA1D,CAAA;;SAAa,oC","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { FunnelDataContextDescription } from \"./FunnelDataContextDescription\";\n/**\n * @hidden\n */\nvar FunnelDataContextDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(FunnelDataContextDescriptionMetadata, _super);\n    function FunnelDataContextDescriptionMetadata() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    FunnelDataContextDescriptionMetadata.b = function (a) {\n        if (FunnelDataContextDescriptionMetadata.a == null) {\n            FunnelDataContextDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n            FunnelDataContextDescriptionMetadata.c(FunnelDataContextDescriptionMetadata.a);\n        }\n        if (a.g(FunnelDataContextDescriptionMetadata.a)) {\n            return;\n        }\n        a.s(FunnelDataContextDescriptionMetadata.a);\n    };\n    FunnelDataContextDescriptionMetadata.c = function (a) {\n        a.item(\"ItemRef\", \"(w:Item,wf:Item)DataRef\");\n        a.item(\"Index\", \"Number:int\");\n    };\n    FunnelDataContextDescriptionMetadata.d = function (a) {\n        FunnelDataContextDescriptionMetadata.b(a);\n        a.u(\"FunnelDataContext\", function () { return new FunnelDataContextDescription(); });\n        a.t(\"FunnelDataContext\", FunnelDataContextDescriptionMetadata.a);\n    };\n    FunnelDataContextDescriptionMetadata.$t = markType(FunnelDataContextDescriptionMetadata, 'FunnelDataContextDescriptionMetadata');\n    FunnelDataContextDescriptionMetadata.a = null;\n    return FunnelDataContextDescriptionMetadata;\n}(Base));\nexport { FunnelDataContextDescriptionMetadata };\n//# sourceMappingURL=FunnelDataContextDescriptionMetadata.js.map\n"]},"metadata":{},"sourceType":"module"}