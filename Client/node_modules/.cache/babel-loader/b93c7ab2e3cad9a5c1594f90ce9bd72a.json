{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { HorizontalAnchoredCategorySeriesDescriptionMetadata } from \"./HorizontalAnchoredCategorySeriesDescriptionMetadata\";\nimport { PointSeriesDescription } from \"./PointSeriesDescription\";\n/**\n * @hidden\n */\n\nvar PointSeriesDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(PointSeriesDescriptionMetadata, _super);\n\n  function PointSeriesDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  PointSeriesDescriptionMetadata.b = function (a) {\n    if (PointSeriesDescriptionMetadata.a == null) {\n      PointSeriesDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      PointSeriesDescriptionMetadata.c(PointSeriesDescriptionMetadata.a);\n    }\n\n    if (a.g(PointSeriesDescriptionMetadata.a)) {\n      return;\n    }\n\n    a.s(PointSeriesDescriptionMetadata.a);\n  };\n\n  PointSeriesDescriptionMetadata.c = function (a) {\n    HorizontalAnchoredCategorySeriesDescriptionMetadata.c(a);\n  };\n\n  PointSeriesDescriptionMetadata.d = function (a) {\n    PointSeriesDescriptionMetadata.b(a);\n    a.u(\"PointSeries\", function () {\n      return new PointSeriesDescription();\n    });\n    a.t(\"PointSeries\", PointSeriesDescriptionMetadata.a);\n  };\n\n  PointSeriesDescriptionMetadata.$t = markType(PointSeriesDescriptionMetadata, 'PointSeriesDescriptionMetadata');\n  PointSeriesDescriptionMetadata.a = null;\n  return PointSeriesDescriptionMetadata;\n}(Base);\n\nexport { PointSeriesDescriptionMetadata };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/PointSeriesDescriptionMetadata.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,IAAT,EAAe,YAAf,EAAmC,QAAnC,QAAmD,QAAnD;AAEA,SAAS,YAAT,QAA6B,gBAA7B;AACA,SAAS,mDAAT,QAAoE,uDAApE;AACA,SAAS,sBAAT,QAAuC,0BAAvC;AAEA;;AAEG;;AACH,IAAA,8BAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAoD,EAAA,SAAA,CAAA,8BAAA,EAAA,MAAA,CAAA;;AAApD,WAAA,8BAAA,GAAA;;AAqBC;;AAlBe,EAAA,8BAAA,CAAA,CAAA,GAAf,UAAiB,CAAjB,EAA0C;AACzC,QAAI,8BAA8B,CAAC,CAA/B,IAAoC,IAAxC,EAA8C;AAC7C,MAAA,8BAA8B,CAAC,CAA/B,GAAmC,IAAI,YAAJ,CAAiC,YAAjC,EAA+C,YAA/C,EAA6D,CAA7D,CAAnC;AACA,MAAA,8BAA8B,CAAC,CAA/B,CAAiC,8BAA8B,CAAC,CAAhE;AACA;;AACD,QAAI,CAAC,CAAC,CAAF,CAAI,8BAA8B,CAAC,CAAnC,CAAJ,EAA2C;AAC1C;AACA;;AACD,IAAA,CAAC,CAAC,CAAF,CAAI,8BAA8B,CAAC,CAAnC;AACA,GATc;;AAUR,EAAA,8BAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAwC;AACvC,IAAA,mDAAmD,CAAC,CAApD,CAAsD,CAAtD;AACA,GAFM;;AAGA,EAAA,8BAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAkC;AACjC,IAAA,8BAA8B,CAAC,CAA/B,CAAiC,CAAjC;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,aAAJ,EAAmB,YAAA;AAAM,aAAA,IAAA,sBAAA,EAAA;AAA4B,KAArD;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,aAAJ,EAAmB,8BAA8B,CAAC,CAAlD;AACA,GAJM;;AAfA,EAAA,8BAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,8BAAD,EAAiC,gCAAjC,CAAnB;AACQ,EAAA,8BAAA,CAAA,CAAA,GAAkC,IAAlC;AAmBhB,SAAA,8BAAA;AAAC,CArBD,CAAoD,IAApD,CAAA;;SAAa,8B","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { HorizontalAnchoredCategorySeriesDescriptionMetadata } from \"./HorizontalAnchoredCategorySeriesDescriptionMetadata\";\nimport { PointSeriesDescription } from \"./PointSeriesDescription\";\n/**\n * @hidden\n */\nvar PointSeriesDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(PointSeriesDescriptionMetadata, _super);\n    function PointSeriesDescriptionMetadata() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    PointSeriesDescriptionMetadata.b = function (a) {\n        if (PointSeriesDescriptionMetadata.a == null) {\n            PointSeriesDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n            PointSeriesDescriptionMetadata.c(PointSeriesDescriptionMetadata.a);\n        }\n        if (a.g(PointSeriesDescriptionMetadata.a)) {\n            return;\n        }\n        a.s(PointSeriesDescriptionMetadata.a);\n    };\n    PointSeriesDescriptionMetadata.c = function (a) {\n        HorizontalAnchoredCategorySeriesDescriptionMetadata.c(a);\n    };\n    PointSeriesDescriptionMetadata.d = function (a) {\n        PointSeriesDescriptionMetadata.b(a);\n        a.u(\"PointSeries\", function () { return new PointSeriesDescription(); });\n        a.t(\"PointSeries\", PointSeriesDescriptionMetadata.a);\n    };\n    PointSeriesDescriptionMetadata.$t = markType(PointSeriesDescriptionMetadata, 'PointSeriesDescriptionMetadata');\n    PointSeriesDescriptionMetadata.a = null;\n    return PointSeriesDescriptionMetadata;\n}(Base));\nexport { PointSeriesDescriptionMetadata };\n//# sourceMappingURL=PointSeriesDescriptionMetadata.js.map\n"]},"metadata":{},"sourceType":"module"}