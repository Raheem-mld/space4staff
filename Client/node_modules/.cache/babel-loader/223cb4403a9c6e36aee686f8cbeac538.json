{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, delegateCombine, delegateRemove, runOn, markType } from \"igniteui-react-core\";\nimport { Message } from \"./Message\";\nimport { Queue$1 } from \"igniteui-react-core\";\n/**\n * @hidden\n */\n\nvar MessageChannel =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(MessageChannel, _super);\n\n  function MessageChannel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.c = new Queue$1(Message.$);\n    _this.messageSent = null;\n    _this.a = null;\n    return _this;\n  }\n\n  MessageChannel.prototype.i = function (a) {\n    if (this.messageSent != null) {\n      this.messageSent(a);\n    } else {\n      this.c.g(a);\n    }\n  };\n\n  MessageChannel.prototype.e = function (a) {\n    this.messageSent = delegateCombine(this.messageSent, a);\n\n    while (this.c.count > 0) {\n      var b = this.c.b();\n      this.messageSent(b);\n    }\n  };\n\n  MessageChannel.prototype.h = function (a) {\n    this.messageSent = delegateRemove(this.messageSent, a);\n  };\n\n  MessageChannel.prototype.f = function (a) {\n    this.a = a;\n    this.e(runOn(this, this.j));\n  };\n\n  MessageChannel.prototype.g = function () {\n    if (this.a == null) {\n      return;\n    }\n\n    this.h(runOn(this, this.j));\n    this.a = null;\n  };\n\n  MessageChannel.prototype.j = function (a) {\n    if (this.a != null) {\n      this.a.i(a);\n    }\n  };\n\n  MessageChannel.prototype.toString = function () {\n    return \"MessageQueue\";\n  };\n\n  MessageChannel.$t = markType(MessageChannel, 'MessageChannel');\n  return MessageChannel;\n}(Base);\n\nexport { MessageChannel };","map":{"version":3,"sources":["../../../../src/igniteui-charts/lib/MessageChannel.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,IAAT,EAAe,eAAf,EAAgC,cAAhC,EAAgD,KAAhD,EAA6D,QAA7D,QAA6E,qBAA7E;AACA,SAAS,OAAT,QAAwB,WAAxB;AACA,SAAS,OAAT,QAAwB,qBAAxB;AAEA;;AAEG;;AACH,IAAA,cAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAoC,EAAA,SAAA,CAAA,cAAA,EAAA,MAAA,CAAA;;AAApC,WAAA,cAAA,GAAA;AAAA,QAAA,KAAA,GAAA,MAAA,KAAA,IAAA,IAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA;;AAES,IAAA,KAAA,CAAA,CAAA,GAAsB,IAAI,OAAJ,CAA2B,OAAQ,CAAC,CAApC,CAAtB;AAeR,IAAA,KAAA,CAAA,WAAA,GAA0C,IAA1C;AAIQ,IAAA,KAAA,CAAA,CAAA,GAAoB,IAApB;;AAoBR;;AAtCA,EAAA,cAAA,CAAA,SAAA,CAAA,CAAA,GAAA,UAAE,CAAF,EAAY;AACX,QAAI,KAAK,WAAL,IAAoB,IAAxB,EAA8B;AAC7B,WAAK,WAAL,CAAiB,CAAjB;AACA,KAFD,MAEO;AACN,WAAK,CAAL,CAAO,CAAP,CAAS,CAAT;AACA;AACD,GAND;;AAOA,EAAA,cAAA,CAAA,SAAA,CAAA,CAAA,GAAA,UAAE,CAAF,EAA+B;AAC9B,SAAK,WAAL,GAAmB,eAAe,CAAC,KAAK,WAAN,EAAmB,CAAnB,CAAlC;;AACA,WAAO,KAAK,CAAL,CAAO,KAAP,GAAe,CAAtB,EAAyB;AACxB,UAAI,CAAC,GAAqB,KAAK,CAAL,CAAO,CAAP,EAA1B;AACA,WAAK,WAAL,CAAiB,CAAjB;AACA;AACD,GAND;;AAQA,EAAA,cAAA,CAAA,SAAA,CAAA,CAAA,GAAA,UAAE,CAAF,EAA+B;AAC9B,SAAK,WAAL,GAAmB,cAAc,CAAC,KAAK,WAAN,EAAmB,CAAnB,CAAjC;AACA,GAFD;;AAIA,EAAA,cAAA,CAAA,SAAA,CAAA,CAAA,GAAA,UAAE,CAAF,EAAmB;AAClB,SAAK,CAAL,GAAS,CAAT;AACA,SAAK,CAAL,CAAO,KAAK,CAAC,IAAD,EAAO,KAAK,CAAZ,CAAZ;AACA,GAHD;;AAIA,EAAA,cAAA,CAAA,SAAA,CAAA,CAAA,GAAA,YAAA;AACC,QAAI,KAAK,CAAL,IAAU,IAAd,EAAoB;AACnB;AACA;;AACD,SAAK,CAAL,CAAO,KAAK,CAAC,IAAD,EAAO,KAAK,CAAZ,CAAZ;AACA,SAAK,CAAL,GAAS,IAAT;AACA,GAND;;AAOA,EAAA,cAAA,CAAA,SAAA,CAAA,CAAA,GAAA,UAAE,CAAF,EAAY;AACX,QAAI,KAAK,CAAL,IAAU,IAAd,EAAoB;AACnB,WAAK,CAAL,CAAO,CAAP,CAAS,CAAT;AACA;AACD,GAJD;;AAKA,EAAA,cAAA,CAAA,SAAA,CAAA,QAAA,GAAA,YAAA;AACC,WAAO,cAAP;AACA,GAFD;;AArCO,EAAA,cAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,cAAD,EAAiB,gBAAjB,CAAnB;AAwCR,SAAA,cAAA;AAAC,CAzCD,CAAoC,IAApC,CAAA;;SAAa,c","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, delegateCombine, delegateRemove, runOn, markType } from \"igniteui-react-core\";\nimport { Message } from \"./Message\";\nimport { Queue$1 } from \"igniteui-react-core\";\n/**\n * @hidden\n */\nvar MessageChannel = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(MessageChannel, _super);\n    function MessageChannel() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.c = new Queue$1(Message.$);\n        _this.messageSent = null;\n        _this.a = null;\n        return _this;\n    }\n    MessageChannel.prototype.i = function (a) {\n        if (this.messageSent != null) {\n            this.messageSent(a);\n        }\n        else {\n            this.c.g(a);\n        }\n    };\n    MessageChannel.prototype.e = function (a) {\n        this.messageSent = delegateCombine(this.messageSent, a);\n        while (this.c.count > 0) {\n            var b = this.c.b();\n            this.messageSent(b);\n        }\n    };\n    MessageChannel.prototype.h = function (a) {\n        this.messageSent = delegateRemove(this.messageSent, a);\n    };\n    MessageChannel.prototype.f = function (a) {\n        this.a = a;\n        this.e(runOn(this, this.j));\n    };\n    MessageChannel.prototype.g = function () {\n        if (this.a == null) {\n            return;\n        }\n        this.h(runOn(this, this.j));\n        this.a = null;\n    };\n    MessageChannel.prototype.j = function (a) {\n        if (this.a != null) {\n            this.a.i(a);\n        }\n    };\n    MessageChannel.prototype.toString = function () {\n        return \"MessageQueue\";\n    };\n    MessageChannel.$t = markType(MessageChannel, 'MessageChannel');\n    return MessageChannel;\n}(Base));\nexport { MessageChannel };\n//# sourceMappingURL=MessageChannel.js.map\n"]},"metadata":{},"sourceType":"module"}