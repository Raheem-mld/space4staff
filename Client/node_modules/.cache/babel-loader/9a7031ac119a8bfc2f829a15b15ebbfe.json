{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, Type, Delegate_$type, markType, getInstanceType } from \"igniteui-react-core\";\nimport { Dictionary$2 } from \"igniteui-react-core\";\n/**\n * @hidden\n */\n\nvar MessageHandler =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(MessageHandler, _super);\n\n  function MessageHandler() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.a = new Dictionary$2(Type.$, Delegate_$type, 0);\n    return _this;\n  }\n\n  MessageHandler.prototype.b = function (a, b) {\n    this.a.addItem(a, b);\n  };\n\n  MessageHandler.prototype.c = function (a) {\n    var _this = this;\n\n    var b;\n\n    if (function () {\n      var c = _this.a.tryGetValue(getInstanceType(a), b);\n\n      b = c.p1;\n      return c.ret;\n    }()) {\n      b(a);\n    }\n  };\n\n  MessageHandler.$t = markType(MessageHandler, 'MessageHandler');\n  return MessageHandler;\n}(Base);\n\nexport { MessageHandler };","map":{"version":3,"sources":["../../../../src/igniteui-charts/lib/MessageHandler.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,IAAT,EAAe,IAAf,EAAqB,cAArB,EAAqC,QAArC,EAA+C,eAA/C,QAAsE,qBAAtE;AAEA,SAAS,YAAT,QAA6B,qBAA7B;AAEA;;AAEG;;AACH,IAAA,cAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAoC,EAAA,SAAA,CAAA,cAAA,EAAA,MAAA,CAAA;;AAApC,WAAA,cAAA,GAAA;AAAA,QAAA,KAAA,GAAA,MAAA,KAAA,IAAA,IAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA;;AAES,IAAA,KAAA,CAAA,CAAA,GAA8C,IAAI,YAAJ,CAAmD,IAAK,CAAC,CAAzD,EAA4D,cAA5D,EAA4E,CAA5E,CAA9C;;AAUR;;AATA,EAAA,cAAA,CAAA,SAAA,CAAA,CAAA,GAAA,UAAE,CAAF,EAAW,CAAX,EAAkC;AACjC,SAAK,CAAL,CAAO,OAAP,CAAe,CAAf,EAAkB,CAAlB;AACA,GAFD;;AAGA,EAAA,cAAA,CAAA,SAAA,CAAA,CAAA,GAAA,UAAE,CAAF,EAAY;AAAZ,QAAA,KAAA,GAAA,IAAA;;AACC,QAAI,CAAJ;;AACA,QAAM,YAAA;AAAQ,UAAI,CAAC,GAAG,KAAI,CAAC,CAAL,CAAO,WAAP,CAAmB,eAAe,CAAC,CAAD,CAAlC,EAAuC,CAAvC,CAAR;;AAAmD,MAAA,CAAC,GAAG,CAAC,CAAC,EAAN;AAAU,aAAO,CAAC,CAAC,GAAT;AAAe,KAArF,EAAL,EAAgG;AAC/F,MAAA,CAAC,CAAC,CAAD,CAAD;AACA;AACD,GALD;;AALO,EAAA,cAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,cAAD,EAAiB,gBAAjB,CAAnB;AAWR,SAAA,cAAA;AAAC,CAZD,CAAoC,IAApC,CAAA;;SAAa,c","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, Type, Delegate_$type, markType, getInstanceType } from \"igniteui-react-core\";\nimport { Dictionary$2 } from \"igniteui-react-core\";\n/**\n * @hidden\n */\nvar MessageHandler = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(MessageHandler, _super);\n    function MessageHandler() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.a = new Dictionary$2(Type.$, Delegate_$type, 0);\n        return _this;\n    }\n    MessageHandler.prototype.b = function (a, b) {\n        this.a.addItem(a, b);\n    };\n    MessageHandler.prototype.c = function (a) {\n        var _this = this;\n        var b;\n        if (((function () { var c = _this.a.tryGetValue(getInstanceType(a), b); b = c.p1; return c.ret; })())) {\n            b(a);\n        }\n    };\n    MessageHandler.$t = markType(MessageHandler, 'MessageHandler');\n    return MessageHandler;\n}(Base));\nexport { MessageHandler };\n//# sourceMappingURL=MessageHandler.js.map\n"]},"metadata":{},"sourceType":"module"}