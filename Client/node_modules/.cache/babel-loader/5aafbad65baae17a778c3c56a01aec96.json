{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { GeographicMapSeriesHostDescriptionMetadata } from \"./GeographicMapSeriesHostDescriptionMetadata\";\n/**\n * @hidden\n */\n\nvar GeographicMarkerSeriesDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(GeographicMarkerSeriesDescriptionMetadata, _super);\n\n  function GeographicMarkerSeriesDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  GeographicMarkerSeriesDescriptionMetadata.b = function (a) {\n    if (GeographicMarkerSeriesDescriptionMetadata.a == null) {\n      GeographicMarkerSeriesDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      GeographicMarkerSeriesDescriptionMetadata.c(GeographicMarkerSeriesDescriptionMetadata.a);\n    }\n\n    if (a.g(GeographicMarkerSeriesDescriptionMetadata.a)) {\n      return;\n    }\n\n    a.s(GeographicMarkerSeriesDescriptionMetadata.a);\n  };\n\n  GeographicMarkerSeriesDescriptionMetadata.c = function (a) {\n    GeographicMapSeriesHostDescriptionMetadata.c(a);\n    a.item(\"MarkerType\", \"ExportedType:string:MarkerType\");\n    a.item(\"MarkerType@names\", \"Unset;None;Automatic;Circle;Triangle;Pyramid;Square;Diamond;Pentagon;Hexagon;Tetragram;Pentagram;Hexagram;Hidden\");\n    a.item(\"MarkerThickness\", \"Number:double\");\n    a.item(\"MarkerOutlineMode\", \"ExportedType:string:MarkerOutlineMode\");\n    a.item(\"MarkerOutlineMode@names\", \"Auto;Normal;MatchMarkerBrush\");\n    a.item(\"MarkerFillMode\", \"ExportedType:string:MarkerFillMode\");\n    a.item(\"MarkerFillMode@names\", \"Auto;Normal;MatchMarkerOutline\");\n    a.item(\"MarkerTemplateRef\", \"(w:MarkerTemplate,wf:MarkerTemplate)DataRef::object\");\n    a.item(\"MarkerBrush\", \"Brush\");\n    a.item(\"MarkerOutline\", \"Brush\");\n    a.item(\"MaximumMarkers\", \"Number:int\");\n    a.item(\"ActualMarkerTemplateRef\", \"(w:ActualMarkerTemplate,wf:ActualMarkerTemplate)DataRef::object\");\n    a.item(\"ActualMarkerBrush\", \"Brush\");\n    a.item(\"ActualMarkerOutline\", \"Brush\");\n  };\n\n  GeographicMarkerSeriesDescriptionMetadata.d = function (a) {\n    GeographicMarkerSeriesDescriptionMetadata.b(a);\n    a.t(\"GeographicMarkerSeries\", GeographicMarkerSeriesDescriptionMetadata.a);\n  };\n\n  GeographicMarkerSeriesDescriptionMetadata.$t = markType(GeographicMarkerSeriesDescriptionMetadata, 'GeographicMarkerSeriesDescriptionMetadata');\n  GeographicMarkerSeriesDescriptionMetadata.a = null;\n  return GeographicMarkerSeriesDescriptionMetadata;\n}(Base);\n\nexport { GeographicMarkerSeriesDescriptionMetadata };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/GeographicMarkerSeriesDescriptionMetadata.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,IAAT,EAAe,YAAf,EAAmC,QAAnC,QAAmD,QAAnD;AAEA,SAAS,YAAT,QAA6B,gBAA7B;AACA,SAAS,0CAAT,QAA2D,8CAA3D;AAEA;;AAEG;;AACH,IAAA,yCAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAA+D,EAAA,SAAA,CAAA,yCAAA,EAAA,MAAA,CAAA;;AAA/D,WAAA,yCAAA,GAAA;;AAkCC;;AA/Be,EAAA,yCAAA,CAAA,CAAA,GAAf,UAAiB,CAAjB,EAA0C;AACzC,QAAI,yCAAyC,CAAC,CAA1C,IAA+C,IAAnD,EAAyD;AACxD,MAAA,yCAAyC,CAAC,CAA1C,GAA8C,IAAI,YAAJ,CAAiC,YAAjC,EAA+C,YAA/C,EAA6D,CAA7D,CAA9C;AACA,MAAA,yCAAyC,CAAC,CAA1C,CAA4C,yCAAyC,CAAC,CAAtF;AACA;;AACD,QAAI,CAAC,CAAC,CAAF,CAAI,yCAAyC,CAAC,CAA9C,CAAJ,EAAsD;AACrD;AACA;;AACD,IAAA,CAAC,CAAC,CAAF,CAAI,yCAAyC,CAAC,CAA9C;AACA,GATc;;AAUR,EAAA,yCAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAwC;AACvC,IAAA,0CAA0C,CAAC,CAA3C,CAA6C,CAA7C;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,YAAP,EAAqB,gCAArB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,kBAAP,EAA2B,kHAA3B;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,iBAAP,EAA0B,eAA1B;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,mBAAP,EAA4B,uCAA5B;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,yBAAP,EAAkC,8BAAlC;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,gBAAP,EAAyB,oCAAzB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,sBAAP,EAA+B,gCAA/B;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,mBAAP,EAA4B,qDAA5B;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,aAAP,EAAsB,OAAtB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,eAAP,EAAwB,OAAxB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,gBAAP,EAAyB,YAAzB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,yBAAP,EAAkC,iEAAlC;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,mBAAP,EAA4B,OAA5B;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,qBAAP,EAA8B,OAA9B;AACA,GAhBM;;AAiBA,EAAA,yCAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAkC;AACjC,IAAA,yCAAyC,CAAC,CAA1C,CAA4C,CAA5C;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,wBAAJ,EAA8B,yCAAyC,CAAC,CAAxE;AACA,GAHM;;AA7BA,EAAA,yCAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,yCAAD,EAA4C,2CAA5C,CAAnB;AACQ,EAAA,yCAAA,CAAA,CAAA,GAAkC,IAAlC;AAgChB,SAAA,yCAAA;AAAC,CAlCD,CAA+D,IAA/D,CAAA;;SAAa,yC","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { GeographicMapSeriesHostDescriptionMetadata } from \"./GeographicMapSeriesHostDescriptionMetadata\";\n/**\n * @hidden\n */\nvar GeographicMarkerSeriesDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(GeographicMarkerSeriesDescriptionMetadata, _super);\n    function GeographicMarkerSeriesDescriptionMetadata() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    GeographicMarkerSeriesDescriptionMetadata.b = function (a) {\n        if (GeographicMarkerSeriesDescriptionMetadata.a == null) {\n            GeographicMarkerSeriesDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n            GeographicMarkerSeriesDescriptionMetadata.c(GeographicMarkerSeriesDescriptionMetadata.a);\n        }\n        if (a.g(GeographicMarkerSeriesDescriptionMetadata.a)) {\n            return;\n        }\n        a.s(GeographicMarkerSeriesDescriptionMetadata.a);\n    };\n    GeographicMarkerSeriesDescriptionMetadata.c = function (a) {\n        GeographicMapSeriesHostDescriptionMetadata.c(a);\n        a.item(\"MarkerType\", \"ExportedType:string:MarkerType\");\n        a.item(\"MarkerType@names\", \"Unset;None;Automatic;Circle;Triangle;Pyramid;Square;Diamond;Pentagon;Hexagon;Tetragram;Pentagram;Hexagram;Hidden\");\n        a.item(\"MarkerThickness\", \"Number:double\");\n        a.item(\"MarkerOutlineMode\", \"ExportedType:string:MarkerOutlineMode\");\n        a.item(\"MarkerOutlineMode@names\", \"Auto;Normal;MatchMarkerBrush\");\n        a.item(\"MarkerFillMode\", \"ExportedType:string:MarkerFillMode\");\n        a.item(\"MarkerFillMode@names\", \"Auto;Normal;MatchMarkerOutline\");\n        a.item(\"MarkerTemplateRef\", \"(w:MarkerTemplate,wf:MarkerTemplate)DataRef::object\");\n        a.item(\"MarkerBrush\", \"Brush\");\n        a.item(\"MarkerOutline\", \"Brush\");\n        a.item(\"MaximumMarkers\", \"Number:int\");\n        a.item(\"ActualMarkerTemplateRef\", \"(w:ActualMarkerTemplate,wf:ActualMarkerTemplate)DataRef::object\");\n        a.item(\"ActualMarkerBrush\", \"Brush\");\n        a.item(\"ActualMarkerOutline\", \"Brush\");\n    };\n    GeographicMarkerSeriesDescriptionMetadata.d = function (a) {\n        GeographicMarkerSeriesDescriptionMetadata.b(a);\n        a.t(\"GeographicMarkerSeries\", GeographicMarkerSeriesDescriptionMetadata.a);\n    };\n    GeographicMarkerSeriesDescriptionMetadata.$t = markType(GeographicMarkerSeriesDescriptionMetadata, 'GeographicMarkerSeriesDescriptionMetadata');\n    GeographicMarkerSeriesDescriptionMetadata.a = null;\n    return GeographicMarkerSeriesDescriptionMetadata;\n}(Base));\nexport { GeographicMarkerSeriesDescriptionMetadata };\n//# sourceMappingURL=GeographicMarkerSeriesDescriptionMetadata.js.map\n"]},"metadata":{},"sourceType":"module"}