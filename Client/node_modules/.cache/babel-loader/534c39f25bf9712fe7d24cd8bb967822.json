{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { markEnum } from \"igniteui-react-core\";\n/**\n * Describes available modes for searching for items in the scatter series.\n */\n\nexport var ScatterItemSearchMode = /*@__PURE__*/function (ScatterItemSearchMode) {\n  /**\n   * Search mode is automatically determined by the component.\n   */\n  ScatterItemSearchMode[ScatterItemSearchMode[\"Auto\"] = 0] = \"Auto\";\n  /**\n   * When searching for a point, the closest visible point is selected.\n   */\n\n  ScatterItemSearchMode[ScatterItemSearchMode[\"ClosestVisiblePoint\"] = 1] = \"ClosestVisiblePoint\";\n  /**\n   * When searching for a point, the closest point is selected, whether visible or not.\n   * The search is skipped in performance critical scenarios if the number of points is over ClosestPointMaxSearchCount\n   */\n\n  ScatterItemSearchMode[ScatterItemSearchMode[\"ClosestPoint\"] = 2] = \"ClosestPoint\";\n  /**\n   * When searching for a point, the closest visible point along the closest visible line is used.\n   * The search is skipped if the visible line points are over ClosestPointMaxSearch.\n   */\n\n  ScatterItemSearchMode[ScatterItemSearchMode[\"ClosestVisiblePointOnClosestLine\"] = 3] = \"ClosestVisiblePointOnClosestLine\";\n  /**\n   * When searching for a point, the closest point along the closest line is used.\n   * The search is skipped if the line points are over ClosestPointMaxSearch.\n   */\n\n  ScatterItemSearchMode[ScatterItemSearchMode[\"ClosestPointOnClosestLine\"] = 4] = \"ClosestPointOnClosestLine\";\n  /**\n   * No points will be searched for the in the scatter series.\n   */\n\n  ScatterItemSearchMode[ScatterItemSearchMode[\"None\"] = 5] = \"None\";\n  return ScatterItemSearchMode;\n}({});\n/**\n * @hidden\n */\n\nexport var ScatterItemSearchMode_$type = /*@__PURE__*/markEnum('ScatterItemSearchMode', 'Auto,0|ClosestVisiblePoint,1|ClosestPoint,2|ClosestVisiblePointOnClosestLine,3|ClosestPointOnClosestLine,4|None,5');","map":{"version":3,"sources":["../../../../src/igniteui-charts/lib/ScatterItemSearchMode.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;AAEF,SAA0B,QAA1B,QAAgD,qBAAhD;AAEA;;AAEG;;AACH,OAAA,IAAY,qBA4BX,GAAA,aAAA,UAAA,qBAAA,EAAA;AA5BD;AACC;;AAEG,EAAA,qBAAA,CAAA,qBAAA,CAAA,MAAA,CAAA,GAAA,CAAA,CAAA,GAAA,MAAA;AACH;AACA;;;AAEG,EAAA,qBAAA,CAAA,qBAAA,CAAA,qBAAA,CAAA,GAAA,CAAA,CAAA,GAAA,qBAAA;AACH;AACA;;;;AAGG,EAAA,qBAAA,CAAA,qBAAA,CAAA,cAAA,CAAA,GAAA,CAAA,CAAA,GAAA,cAAA;AACH;AACA;;;;AAGG,EAAA,qBAAA,CAAA,qBAAA,CAAA,kCAAA,CAAA,GAAA,CAAA,CAAA,GAAA,kCAAA;AACH;AACA;;;;AAGG,EAAA,qBAAA,CAAA,qBAAA,CAAA,2BAAA,CAAA,GAAA,CAAA,CAAA,GAAA,2BAAA;AACH;AACA;;;AAEG,EAAA,qBAAA,CAAA,qBAAA,CAAA,MAAA,CAAA,GAAA,CAAA,CAAA,GAAA,MAAA;AACH,SAAA,qBAAA;AACA,CAAA,CA5BW,EA4BX,CA5BD;AA8BA;;AAEG;;AACH,OAAO,IAAI,2BAA2B,GAAG,aAAS,QAAA,CAAA,uBAAA,EAAyB,mHAAzB,CAA3C","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { markEnum } from \"igniteui-react-core\";\n/**\n * Describes available modes for searching for items in the scatter series.\n */\nexport var ScatterItemSearchMode = /*@__PURE__*/ (function (ScatterItemSearchMode) {\n    /**\n     * Search mode is automatically determined by the component.\n     */\n    ScatterItemSearchMode[ScatterItemSearchMode[\"Auto\"] = 0] = \"Auto\";\n    /**\n     * When searching for a point, the closest visible point is selected.\n     */\n    ScatterItemSearchMode[ScatterItemSearchMode[\"ClosestVisiblePoint\"] = 1] = \"ClosestVisiblePoint\";\n    /**\n     * When searching for a point, the closest point is selected, whether visible or not.\n     * The search is skipped in performance critical scenarios if the number of points is over ClosestPointMaxSearchCount\n     */\n    ScatterItemSearchMode[ScatterItemSearchMode[\"ClosestPoint\"] = 2] = \"ClosestPoint\";\n    /**\n     * When searching for a point, the closest visible point along the closest visible line is used.\n     * The search is skipped if the visible line points are over ClosestPointMaxSearch.\n     */\n    ScatterItemSearchMode[ScatterItemSearchMode[\"ClosestVisiblePointOnClosestLine\"] = 3] = \"ClosestVisiblePointOnClosestLine\";\n    /**\n     * When searching for a point, the closest point along the closest line is used.\n     * The search is skipped if the line points are over ClosestPointMaxSearch.\n     */\n    ScatterItemSearchMode[ScatterItemSearchMode[\"ClosestPointOnClosestLine\"] = 4] = \"ClosestPointOnClosestLine\";\n    /**\n     * No points will be searched for the in the scatter series.\n     */\n    ScatterItemSearchMode[ScatterItemSearchMode[\"None\"] = 5] = \"None\";\n    return ScatterItemSearchMode;\n})({});\n/**\n * @hidden\n */\nexport var ScatterItemSearchMode_$type = /*@__PURE__*/ markEnum('ScatterItemSearchMode', 'Auto,0|ClosestVisiblePoint,1|ClosestPoint,2|ClosestVisiblePointOnClosestLine,3|ClosestPointOnClosestLine,4|None,5');\n//# sourceMappingURL=ScatterItemSearchMode.js.map\n"]},"metadata":{},"sourceType":"module"}