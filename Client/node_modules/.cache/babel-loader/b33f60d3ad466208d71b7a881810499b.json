{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { NumericAxisBaseDescriptionMetadata } from \"./NumericAxisBaseDescriptionMetadata\";\n/**\n * @hidden\n */\n\nvar StraightNumericAxisBaseDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(StraightNumericAxisBaseDescriptionMetadata, _super);\n\n  function StraightNumericAxisBaseDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  StraightNumericAxisBaseDescriptionMetadata.b = function (a) {\n    if (StraightNumericAxisBaseDescriptionMetadata.a == null) {\n      StraightNumericAxisBaseDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      StraightNumericAxisBaseDescriptionMetadata.c(StraightNumericAxisBaseDescriptionMetadata.a);\n    }\n\n    if (a.g(StraightNumericAxisBaseDescriptionMetadata.a)) {\n      return;\n    }\n\n    a.s(StraightNumericAxisBaseDescriptionMetadata.a);\n  };\n\n  StraightNumericAxisBaseDescriptionMetadata.c = function (a) {\n    NumericAxisBaseDescriptionMetadata.c(a);\n    a.item(\"ScaleMode\", \"ExportedType:string:NumericScaleMode\");\n    a.item(\"ScaleMode@names\", \"Linear;Logarithmic\");\n  };\n\n  StraightNumericAxisBaseDescriptionMetadata.d = function (a) {\n    StraightNumericAxisBaseDescriptionMetadata.b(a);\n    a.t(\"StraightNumericAxisBase\", StraightNumericAxisBaseDescriptionMetadata.a);\n  };\n\n  StraightNumericAxisBaseDescriptionMetadata.$t = markType(StraightNumericAxisBaseDescriptionMetadata, 'StraightNumericAxisBaseDescriptionMetadata');\n  StraightNumericAxisBaseDescriptionMetadata.a = null;\n  return StraightNumericAxisBaseDescriptionMetadata;\n}(Base);\n\nexport { StraightNumericAxisBaseDescriptionMetadata };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/StraightNumericAxisBaseDescriptionMetadata.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,IAAT,EAAe,YAAf,EAAmC,QAAnC,QAAmD,QAAnD;AAEA,SAAS,YAAT,QAA6B,gBAA7B;AACA,SAAS,kCAAT,QAAmD,sCAAnD;AAEA;;AAEG;;AACH,IAAA,0CAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAgE,EAAA,SAAA,CAAA,0CAAA,EAAA,MAAA,CAAA;;AAAhE,WAAA,0CAAA,GAAA;;AAsBC;;AAnBe,EAAA,0CAAA,CAAA,CAAA,GAAf,UAAiB,CAAjB,EAA0C;AACzC,QAAI,0CAA0C,CAAC,CAA3C,IAAgD,IAApD,EAA0D;AACzD,MAAA,0CAA0C,CAAC,CAA3C,GAA+C,IAAI,YAAJ,CAAiC,YAAjC,EAA+C,YAA/C,EAA6D,CAA7D,CAA/C;AACA,MAAA,0CAA0C,CAAC,CAA3C,CAA6C,0CAA0C,CAAC,CAAxF;AACA;;AACD,QAAI,CAAC,CAAC,CAAF,CAAI,0CAA0C,CAAC,CAA/C,CAAJ,EAAuD;AACtD;AACA;;AACD,IAAA,CAAC,CAAC,CAAF,CAAI,0CAA0C,CAAC,CAA/C;AACA,GATc;;AAUR,EAAA,0CAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAwC;AACvC,IAAA,kCAAkC,CAAC,CAAnC,CAAqC,CAArC;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,WAAP,EAAoB,sCAApB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,iBAAP,EAA0B,oBAA1B;AACA,GAJM;;AAKA,EAAA,0CAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAkC;AACjC,IAAA,0CAA0C,CAAC,CAA3C,CAA6C,CAA7C;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,yBAAJ,EAA+B,0CAA0C,CAAC,CAA1E;AACA,GAHM;;AAjBA,EAAA,0CAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,0CAAD,EAA6C,4CAA7C,CAAnB;AACQ,EAAA,0CAAA,CAAA,CAAA,GAAkC,IAAlC;AAoBhB,SAAA,0CAAA;AAAC,CAtBD,CAAgE,IAAhE,CAAA;;SAAa,0C","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { NumericAxisBaseDescriptionMetadata } from \"./NumericAxisBaseDescriptionMetadata\";\n/**\n * @hidden\n */\nvar StraightNumericAxisBaseDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(StraightNumericAxisBaseDescriptionMetadata, _super);\n    function StraightNumericAxisBaseDescriptionMetadata() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    StraightNumericAxisBaseDescriptionMetadata.b = function (a) {\n        if (StraightNumericAxisBaseDescriptionMetadata.a == null) {\n            StraightNumericAxisBaseDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n            StraightNumericAxisBaseDescriptionMetadata.c(StraightNumericAxisBaseDescriptionMetadata.a);\n        }\n        if (a.g(StraightNumericAxisBaseDescriptionMetadata.a)) {\n            return;\n        }\n        a.s(StraightNumericAxisBaseDescriptionMetadata.a);\n    };\n    StraightNumericAxisBaseDescriptionMetadata.c = function (a) {\n        NumericAxisBaseDescriptionMetadata.c(a);\n        a.item(\"ScaleMode\", \"ExportedType:string:NumericScaleMode\");\n        a.item(\"ScaleMode@names\", \"Linear;Logarithmic\");\n    };\n    StraightNumericAxisBaseDescriptionMetadata.d = function (a) {\n        StraightNumericAxisBaseDescriptionMetadata.b(a);\n        a.t(\"StraightNumericAxisBase\", StraightNumericAxisBaseDescriptionMetadata.a);\n    };\n    StraightNumericAxisBaseDescriptionMetadata.$t = markType(StraightNumericAxisBaseDescriptionMetadata, 'StraightNumericAxisBaseDescriptionMetadata');\n    StraightNumericAxisBaseDescriptionMetadata.a = null;\n    return StraightNumericAxisBaseDescriptionMetadata;\n}(Base));\nexport { StraightNumericAxisBaseDescriptionMetadata };\n//# sourceMappingURL=StraightNumericAxisBaseDescriptionMetadata.js.map\n"]},"metadata":{},"sourceType":"module"}