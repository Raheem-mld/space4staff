{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { WebBadgeDescription } from \"./WebBadgeDescription\";\n/**\n * @hidden\n */\n\nvar WebBadgeDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(WebBadgeDescriptionMetadata, _super);\n\n  function WebBadgeDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  WebBadgeDescriptionMetadata.b = function (a) {\n    if (WebBadgeDescriptionMetadata.a == null) {\n      WebBadgeDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      WebBadgeDescriptionMetadata.c(WebBadgeDescriptionMetadata.a);\n    }\n\n    if (a.g(WebBadgeDescriptionMetadata.a)) {\n      return;\n    }\n\n    a.s(WebBadgeDescriptionMetadata.a);\n  };\n\n  WebBadgeDescriptionMetadata.c = function (a) {\n    a.item(\"__qualifiedNameTS\", \"String:Badge\");\n    a.item(\"Variant\", \"ExportedType:string:BadgeVariant\");\n    a.item(\"Variant@names\", \"Primary;Info;Success;Warning;Danger\");\n    a.item(\"Outlined\", \"Boolean\");\n    a.item(\"Shape\", \"ExportedType:string:BadgeShape\");\n    a.item(\"Shape@names\", \"Rounded;Square\");\n    a.item(\"Content\", \"Collection:object:ContentChildCollection:Object\");\n  };\n\n  WebBadgeDescriptionMetadata.d = function (a) {\n    WebBadgeDescriptionMetadata.b(a);\n    a.u(\"WebBadge\", function () {\n      return new WebBadgeDescription();\n    });\n    a.t(\"WebBadge\", WebBadgeDescriptionMetadata.a);\n  };\n\n  WebBadgeDescriptionMetadata.$t = markType(WebBadgeDescriptionMetadata, 'WebBadgeDescriptionMetadata');\n  WebBadgeDescriptionMetadata.a = null;\n  return WebBadgeDescriptionMetadata;\n}(Base);\n\nexport { WebBadgeDescriptionMetadata };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/WebBadgeDescriptionMetadata.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,IAAT,EAAe,YAAf,EAAmC,QAAnC,QAAmD,QAAnD;AAEA,SAAS,YAAT,QAA6B,gBAA7B;AACA,SAAS,mBAAT,QAAoC,uBAApC;AAEA;;AAEG;;AACH,IAAA,2BAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAiD,EAAA,SAAA,CAAA,2BAAA,EAAA,MAAA,CAAA;;AAAjD,WAAA,2BAAA,GAAA;;AA2BC;;AAxBe,EAAA,2BAAA,CAAA,CAAA,GAAf,UAAiB,CAAjB,EAA0C;AACzC,QAAI,2BAA2B,CAAC,CAA5B,IAAiC,IAArC,EAA2C;AAC1C,MAAA,2BAA2B,CAAC,CAA5B,GAAgC,IAAI,YAAJ,CAAiC,YAAjC,EAA+C,YAA/C,EAA6D,CAA7D,CAAhC;AACA,MAAA,2BAA2B,CAAC,CAA5B,CAA8B,2BAA2B,CAAC,CAA1D;AACA;;AACD,QAAI,CAAC,CAAC,CAAF,CAAI,2BAA2B,CAAC,CAAhC,CAAJ,EAAwC;AACvC;AACA;;AACD,IAAA,CAAC,CAAC,CAAF,CAAI,2BAA2B,CAAC,CAAhC;AACA,GATc;;AAUR,EAAA,2BAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAwC;AACvC,IAAA,CAAC,CAAC,IAAF,CAAO,mBAAP,EAA4B,cAA5B;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,SAAP,EAAkB,kCAAlB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,eAAP,EAAwB,qCAAxB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,UAAP,EAAmB,SAAnB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,OAAP,EAAgB,gCAAhB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,aAAP,EAAsB,gBAAtB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,SAAP,EAAkB,iDAAlB;AACA,GARM;;AASA,EAAA,2BAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAkC;AACjC,IAAA,2BAA2B,CAAC,CAA5B,CAA8B,CAA9B;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,UAAJ,EAAgB,YAAA;AAAM,aAAA,IAAA,mBAAA,EAAA;AAAyB,KAA/C;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,UAAJ,EAAgB,2BAA2B,CAAC,CAA5C;AACA,GAJM;;AArBA,EAAA,2BAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,2BAAD,EAA8B,6BAA9B,CAAnB;AACQ,EAAA,2BAAA,CAAA,CAAA,GAAkC,IAAlC;AAyBhB,SAAA,2BAAA;AAAC,CA3BD,CAAiD,IAAjD,CAAA;;SAAa,2B","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { WebBadgeDescription } from \"./WebBadgeDescription\";\n/**\n * @hidden\n */\nvar WebBadgeDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(WebBadgeDescriptionMetadata, _super);\n    function WebBadgeDescriptionMetadata() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    WebBadgeDescriptionMetadata.b = function (a) {\n        if (WebBadgeDescriptionMetadata.a == null) {\n            WebBadgeDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n            WebBadgeDescriptionMetadata.c(WebBadgeDescriptionMetadata.a);\n        }\n        if (a.g(WebBadgeDescriptionMetadata.a)) {\n            return;\n        }\n        a.s(WebBadgeDescriptionMetadata.a);\n    };\n    WebBadgeDescriptionMetadata.c = function (a) {\n        a.item(\"__qualifiedNameTS\", \"String:Badge\");\n        a.item(\"Variant\", \"ExportedType:string:BadgeVariant\");\n        a.item(\"Variant@names\", \"Primary;Info;Success;Warning;Danger\");\n        a.item(\"Outlined\", \"Boolean\");\n        a.item(\"Shape\", \"ExportedType:string:BadgeShape\");\n        a.item(\"Shape@names\", \"Rounded;Square\");\n        a.item(\"Content\", \"Collection:object:ContentChildCollection:Object\");\n    };\n    WebBadgeDescriptionMetadata.d = function (a) {\n        WebBadgeDescriptionMetadata.b(a);\n        a.u(\"WebBadge\", function () { return new WebBadgeDescription(); });\n        a.t(\"WebBadge\", WebBadgeDescriptionMetadata.a);\n    };\n    WebBadgeDescriptionMetadata.$t = markType(WebBadgeDescriptionMetadata, 'WebBadgeDescriptionMetadata');\n    WebBadgeDescriptionMetadata.a = null;\n    return WebBadgeDescriptionMetadata;\n}(Base));\nexport { WebBadgeDescriptionMetadata };\n//# sourceMappingURL=WebBadgeDescriptionMetadata.js.map\n"]},"metadata":{},"sourceType":"module"}