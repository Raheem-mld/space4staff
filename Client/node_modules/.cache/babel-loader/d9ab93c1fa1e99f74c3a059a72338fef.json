{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { StrategyBasedIndicatorDescriptionMetadata } from \"./StrategyBasedIndicatorDescriptionMetadata\";\nimport { PositiveVolumeIndexIndicatorDescription } from \"./PositiveVolumeIndexIndicatorDescription\";\n/**\n * @hidden\n */\n\nvar PositiveVolumeIndexIndicatorDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(PositiveVolumeIndexIndicatorDescriptionMetadata, _super);\n\n  function PositiveVolumeIndexIndicatorDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  PositiveVolumeIndexIndicatorDescriptionMetadata.b = function (a) {\n    if (PositiveVolumeIndexIndicatorDescriptionMetadata.a == null) {\n      PositiveVolumeIndexIndicatorDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      PositiveVolumeIndexIndicatorDescriptionMetadata.c(PositiveVolumeIndexIndicatorDescriptionMetadata.a);\n    }\n\n    if (a.g(PositiveVolumeIndexIndicatorDescriptionMetadata.a)) {\n      return;\n    }\n\n    a.s(PositiveVolumeIndexIndicatorDescriptionMetadata.a);\n  };\n\n  PositiveVolumeIndexIndicatorDescriptionMetadata.c = function (a) {\n    StrategyBasedIndicatorDescriptionMetadata.c(a);\n  };\n\n  PositiveVolumeIndexIndicatorDescriptionMetadata.d = function (a) {\n    PositiveVolumeIndexIndicatorDescriptionMetadata.b(a);\n    a.u(\"PositiveVolumeIndexIndicator\", function () {\n      return new PositiveVolumeIndexIndicatorDescription();\n    });\n    a.t(\"PositiveVolumeIndexIndicator\", PositiveVolumeIndexIndicatorDescriptionMetadata.a);\n  };\n\n  PositiveVolumeIndexIndicatorDescriptionMetadata.$t = markType(PositiveVolumeIndexIndicatorDescriptionMetadata, 'PositiveVolumeIndexIndicatorDescriptionMetadata');\n  PositiveVolumeIndexIndicatorDescriptionMetadata.a = null;\n  return PositiveVolumeIndexIndicatorDescriptionMetadata;\n}(Base);\n\nexport { PositiveVolumeIndexIndicatorDescriptionMetadata };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/PositiveVolumeIndexIndicatorDescriptionMetadata.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,IAAT,EAAe,YAAf,EAAmC,QAAnC,QAAmD,QAAnD;AAEA,SAAS,YAAT,QAA6B,gBAA7B;AACA,SAAS,yCAAT,QAA0D,6CAA1D;AACA,SAAS,uCAAT,QAAwD,2CAAxD;AAEA;;AAEG;;AACH,IAAA,+CAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAqE,EAAA,SAAA,CAAA,+CAAA,EAAA,MAAA,CAAA;;AAArE,WAAA,+CAAA,GAAA;;AAqBC;;AAlBe,EAAA,+CAAA,CAAA,CAAA,GAAf,UAAiB,CAAjB,EAA0C;AACzC,QAAI,+CAA+C,CAAC,CAAhD,IAAqD,IAAzD,EAA+D;AAC9D,MAAA,+CAA+C,CAAC,CAAhD,GAAoD,IAAI,YAAJ,CAAiC,YAAjC,EAA+C,YAA/C,EAA6D,CAA7D,CAApD;AACA,MAAA,+CAA+C,CAAC,CAAhD,CAAkD,+CAA+C,CAAC,CAAlG;AACA;;AACD,QAAI,CAAC,CAAC,CAAF,CAAI,+CAA+C,CAAC,CAApD,CAAJ,EAA4D;AAC3D;AACA;;AACD,IAAA,CAAC,CAAC,CAAF,CAAI,+CAA+C,CAAC,CAApD;AACA,GATc;;AAUR,EAAA,+CAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAwC;AACvC,IAAA,yCAAyC,CAAC,CAA1C,CAA4C,CAA5C;AACA,GAFM;;AAGA,EAAA,+CAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAkC;AACjC,IAAA,+CAA+C,CAAC,CAAhD,CAAkD,CAAlD;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,8BAAJ,EAAoC,YAAA;AAAM,aAAA,IAAA,uCAAA,EAAA;AAA6C,KAAvF;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,8BAAJ,EAAoC,+CAA+C,CAAC,CAApF;AACA,GAJM;;AAfA,EAAA,+CAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,+CAAD,EAAkD,iDAAlD,CAAnB;AACQ,EAAA,+CAAA,CAAA,CAAA,GAAkC,IAAlC;AAmBhB,SAAA,+CAAA;AAAC,CArBD,CAAqE,IAArE,CAAA;;SAAa,+C","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { StrategyBasedIndicatorDescriptionMetadata } from \"./StrategyBasedIndicatorDescriptionMetadata\";\nimport { PositiveVolumeIndexIndicatorDescription } from \"./PositiveVolumeIndexIndicatorDescription\";\n/**\n * @hidden\n */\nvar PositiveVolumeIndexIndicatorDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(PositiveVolumeIndexIndicatorDescriptionMetadata, _super);\n    function PositiveVolumeIndexIndicatorDescriptionMetadata() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    PositiveVolumeIndexIndicatorDescriptionMetadata.b = function (a) {\n        if (PositiveVolumeIndexIndicatorDescriptionMetadata.a == null) {\n            PositiveVolumeIndexIndicatorDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n            PositiveVolumeIndexIndicatorDescriptionMetadata.c(PositiveVolumeIndexIndicatorDescriptionMetadata.a);\n        }\n        if (a.g(PositiveVolumeIndexIndicatorDescriptionMetadata.a)) {\n            return;\n        }\n        a.s(PositiveVolumeIndexIndicatorDescriptionMetadata.a);\n    };\n    PositiveVolumeIndexIndicatorDescriptionMetadata.c = function (a) {\n        StrategyBasedIndicatorDescriptionMetadata.c(a);\n    };\n    PositiveVolumeIndexIndicatorDescriptionMetadata.d = function (a) {\n        PositiveVolumeIndexIndicatorDescriptionMetadata.b(a);\n        a.u(\"PositiveVolumeIndexIndicator\", function () { return new PositiveVolumeIndexIndicatorDescription(); });\n        a.t(\"PositiveVolumeIndexIndicator\", PositiveVolumeIndexIndicatorDescriptionMetadata.a);\n    };\n    PositiveVolumeIndexIndicatorDescriptionMetadata.$t = markType(PositiveVolumeIndexIndicatorDescriptionMetadata, 'PositiveVolumeIndexIndicatorDescriptionMetadata');\n    PositiveVolumeIndexIndicatorDescriptionMetadata.a = null;\n    return PositiveVolumeIndexIndicatorDescriptionMetadata;\n}(Base));\nexport { PositiveVolumeIndexIndicatorDescriptionMetadata };\n//# sourceMappingURL=PositiveVolumeIndexIndicatorDescriptionMetadata.js.map\n"]},"metadata":{},"sourceType":"module"}