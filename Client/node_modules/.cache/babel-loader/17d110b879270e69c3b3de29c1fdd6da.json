{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\n/**\n * @hidden\n */\n\nvar TileGeneratorDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(TileGeneratorDescriptionMetadata, _super);\n\n  function TileGeneratorDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  TileGeneratorDescriptionMetadata.b = function (a) {\n    if (TileGeneratorDescriptionMetadata.a == null) {\n      TileGeneratorDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      TileGeneratorDescriptionMetadata.c(TileGeneratorDescriptionMetadata.a);\n    }\n\n    if (a.g(TileGeneratorDescriptionMetadata.a)) {\n      return;\n    }\n\n    a.s(TileGeneratorDescriptionMetadata.a);\n  };\n\n  TileGeneratorDescriptionMetadata.c = function (a) {};\n\n  TileGeneratorDescriptionMetadata.d = function (a) {\n    TileGeneratorDescriptionMetadata.b(a);\n    a.t(\"TileGenerator\", TileGeneratorDescriptionMetadata.a);\n  };\n\n  TileGeneratorDescriptionMetadata.$t = markType(TileGeneratorDescriptionMetadata, 'TileGeneratorDescriptionMetadata');\n  TileGeneratorDescriptionMetadata.a = null;\n  return TileGeneratorDescriptionMetadata;\n}(Base);\n\nexport { TileGeneratorDescriptionMetadata };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/TileGeneratorDescriptionMetadata.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,IAAT,EAAe,YAAf,EAAmC,QAAnC,QAAmD,QAAnD;AAEA,SAAS,YAAT,QAA6B,gBAA7B;AAEA;;AAEG;;AACH,IAAA,gCAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAsD,EAAA,SAAA,CAAA,gCAAA,EAAA,MAAA,CAAA;;AAAtD,WAAA,gCAAA,GAAA;;AAmBC;;AAhBe,EAAA,gCAAA,CAAA,CAAA,GAAf,UAAiB,CAAjB,EAA0C;AACzC,QAAI,gCAAgC,CAAC,CAAjC,IAAsC,IAA1C,EAAgD;AAC/C,MAAA,gCAAgC,CAAC,CAAjC,GAAqC,IAAI,YAAJ,CAAiC,YAAjC,EAA+C,YAA/C,EAA6D,CAA7D,CAArC;AACA,MAAA,gCAAgC,CAAC,CAAjC,CAAmC,gCAAgC,CAAC,CAApE;AACA;;AACD,QAAI,CAAC,CAAC,CAAF,CAAI,gCAAgC,CAAC,CAArC,CAAJ,EAA6C;AAC5C;AACA;;AACD,IAAA,CAAC,CAAC,CAAF,CAAI,gCAAgC,CAAC,CAArC;AACA,GATc;;AAUR,EAAA,gCAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAwC,CACvC,CADM;;AAEA,EAAA,gCAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAkC;AACjC,IAAA,gCAAgC,CAAC,CAAjC,CAAmC,CAAnC;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,eAAJ,EAAqB,gCAAgC,CAAC,CAAtD;AACA,GAHM;;AAdA,EAAA,gCAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,gCAAD,EAAmC,kCAAnC,CAAnB;AACQ,EAAA,gCAAA,CAAA,CAAA,GAAkC,IAAlC;AAiBhB,SAAA,gCAAA;AAAC,CAnBD,CAAsD,IAAtD,CAAA;;SAAa,gC","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\n/**\n * @hidden\n */\nvar TileGeneratorDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(TileGeneratorDescriptionMetadata, _super);\n    function TileGeneratorDescriptionMetadata() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    TileGeneratorDescriptionMetadata.b = function (a) {\n        if (TileGeneratorDescriptionMetadata.a == null) {\n            TileGeneratorDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n            TileGeneratorDescriptionMetadata.c(TileGeneratorDescriptionMetadata.a);\n        }\n        if (a.g(TileGeneratorDescriptionMetadata.a)) {\n            return;\n        }\n        a.s(TileGeneratorDescriptionMetadata.a);\n    };\n    TileGeneratorDescriptionMetadata.c = function (a) {\n    };\n    TileGeneratorDescriptionMetadata.d = function (a) {\n        TileGeneratorDescriptionMetadata.b(a);\n        a.t(\"TileGenerator\", TileGeneratorDescriptionMetadata.a);\n    };\n    TileGeneratorDescriptionMetadata.$t = markType(TileGeneratorDescriptionMetadata, 'TileGeneratorDescriptionMetadata');\n    TileGeneratorDescriptionMetadata.a = null;\n    return TileGeneratorDescriptionMetadata;\n}(Base));\nexport { TileGeneratorDescriptionMetadata };\n//# sourceMappingURL=TileGeneratorDescriptionMetadata.js.map\n"]},"metadata":{},"sourceType":"module"}