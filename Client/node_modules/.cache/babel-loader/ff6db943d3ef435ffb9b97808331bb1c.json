{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { SeriesRenderManager } from \"./SeriesRenderManager\";\nimport { AssigningRadialMarkerStyleEventArgs } from \"./AssigningRadialMarkerStyleEventArgs\";\nimport { AssigningRadialStyleEventArgs } from \"./AssigningRadialStyleEventArgs\";\nimport { markType } from \"igniteui-react-core\";\n/**\n * @hidden\n */\n\nvar RadialSeriesRenderManager =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(RadialSeriesRenderManager, _super);\n\n  function RadialSeriesRenderManager() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.ax = 0;\n    _this.ay = 0;\n    _this.av = null;\n    _this.aw = null;\n    return _this;\n  }\n\n  RadialSeriesRenderManager.prototype.c = function () {\n    this.av = new AssigningRadialMarkerStyleEventArgs();\n    return this.av;\n  };\n\n  RadialSeriesRenderManager.prototype.a = function () {\n    this.aw = new AssigningRadialStyleEventArgs();\n    return this.aw;\n  };\n\n  RadialSeriesRenderManager.prototype.az = function (a, b, c, d, e) {\n    this.ax = d;\n    this.ay = e;\n    this.w(a, b, c);\n  };\n\n  RadialSeriesRenderManager.prototype.a0 = function (a, b, c, d, e) {\n    this.ax = d;\n    this.ay = e;\n    this.x(a, b, c);\n  };\n\n  RadialSeriesRenderManager.prototype.au = function (a, b) {\n    var c = this.ax;\n    var d = Math.min(b * c, a - 1);\n    var e = Math.min(d + c - 1, a - 1);\n    var f = new Array(2);\n    f[0] = Math.min(d + this.ay * c, a - 1);\n    f[1] = Math.min(e + this.ay * c, a - 1);\n    return f;\n  };\n\n  RadialSeriesRenderManager.prototype.a1 = function (a, b, c, d, e, f, g, h, i) {\n    if (d == -1) {\n      {\n        a.c = false;\n        a.o = 0;\n        a.n = e - 1;\n      }\n    } else {\n      {\n        if (i) {\n          a.o = d;\n          a.n = d;\n        } else {\n          var j = this.au(e, d);\n          a.c = false;\n          a.o = j[0];\n          a.n = j[1];\n        }\n      }\n    }\n  };\n\n  RadialSeriesRenderManager.$t = markType(RadialSeriesRenderManager, 'RadialSeriesRenderManager', SeriesRenderManager.$);\n  return RadialSeriesRenderManager;\n}(SeriesRenderManager);\n\nexport { RadialSeriesRenderManager };","map":{"version":3,"sources":["../../../../src/igniteui-charts/lib/RadialSeriesRenderManager.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { SeriesRenderManager } from \"./SeriesRenderManager\";\nimport { AssigningRadialMarkerStyleEventArgs } from \"./AssigningRadialMarkerStyleEventArgs\";\nimport { AssigningRadialStyleEventArgs } from \"./AssigningRadialStyleEventArgs\";\nimport { markType } from \"igniteui-react-core\";\n/**\n * @hidden\n */\nvar RadialSeriesRenderManager = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(RadialSeriesRenderManager, _super);\n    function RadialSeriesRenderManager() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.ax = 0;\n        _this.ay = 0;\n        _this.av = null;\n        _this.aw = null;\n        return _this;\n    }\n    RadialSeriesRenderManager.prototype.c = function () {\n        this.av = new AssigningRadialMarkerStyleEventArgs();\n        return this.av;\n    };\n    RadialSeriesRenderManager.prototype.a = function () {\n        this.aw = new AssigningRadialStyleEventArgs();\n        return this.aw;\n    };\n    RadialSeriesRenderManager.prototype.az = function (a, b, c, d, e) {\n        this.ax = d;\n        this.ay = e;\n        this.w(a, b, c);\n    };\n    RadialSeriesRenderManager.prototype.a0 = function (a, b, c, d, e) {\n        this.ax = d;\n        this.ay = e;\n        this.x(a, b, c);\n    };\n    RadialSeriesRenderManager.prototype.au = function (a, b) {\n        var c = this.ax;\n        var d = Math.min(b * c, a - 1);\n        var e = Math.min(d + c - 1, a - 1);\n        var f = new Array(2);\n        f[0] = Math.min(d + this.ay * c, a - 1);\n        f[1] = Math.min(e + this.ay * c, a - 1);\n        return f;\n    };\n    RadialSeriesRenderManager.prototype.a1 = function (a, b, c, d, e, f, g, h, i) {\n        if (d == -1) {\n            {\n                a.c = false;\n                a.o = 0;\n                a.n = e - 1;\n            }\n        }\n        else {\n            {\n                if (i) {\n                    a.o = d;\n                    a.n = d;\n                }\n                else {\n                    var j = this.au(e, d);\n                    a.c = false;\n                    a.o = j[0];\n                    a.n = j[1];\n                }\n            }\n        }\n    };\n    RadialSeriesRenderManager.$t = markType(RadialSeriesRenderManager, 'RadialSeriesRenderManager', SeriesRenderManager.$);\n    return RadialSeriesRenderManager;\n}(SeriesRenderManager));\nexport { RadialSeriesRenderManager };\n//# sourceMappingURL=RadialSeriesRenderManager.js.map\n"]},"metadata":{},"sourceType":"module"}