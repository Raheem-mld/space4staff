{"ast":null,"code":"import * as React from \"react\";\n\nvar ContentChildrenManager =\n/** @class */\n\n/*@__PURE__*/\nfunction () {\n  function ContentChildrenManager(getPropsKey, getKey, updateContentChildren) {\n    this._contentChildren = null;\n    this._contentChildrenActual = null;\n    this._contentChildrenMap = null;\n    this._contentChildrenUnresolvedSet = null;\n    this._contentChildrenUnresolved = 0;\n    this.getChildRef = this.getChildRef.bind(this);\n    this._getPropsKey = getPropsKey;\n    this._getKey = getKey;\n    this._updateContentChildren = updateContentChildren;\n    this._contentChildrenUnresolvedSet = new Set();\n  }\n\n  ContentChildrenManager.prototype.getChildren = function (propChildren) {\n    var _this = this;\n\n    var children = [];\n    React.Children.forEach(propChildren, function (ch) {\n      var key = _this._getPropsKey(ch);\n\n      if (key === undefined) {\n        throw new Error(\"each child must have a unique key or name property\");\n      }\n\n      children.push(React.cloneElement(ch, {\n        key: key,\n        ref: _this.getChildRef\n      }));\n    });\n    this._contentChildren = children;\n    var prevActual = this._contentChildrenActual;\n    this._contentChildrenActual = [];\n    var prevMap = this._contentChildrenMap;\n    var prevUnresolved = this._contentChildrenUnresolvedSet;\n    this._contentChildrenUnresolvedSet = new Set();\n    this._contentChildrenMap = new Map();\n    this._contentChildrenUnresolved = 0;\n\n    if (this._contentChildren) {\n      this._contentChildren.map(function (ch, i) {\n        var key = _this._getPropsKey(ch);\n\n        var unresolved = prevUnresolved.has(key);\n\n        if (prevMap && prevMap.has(key) && !unresolved) {\n          _this._contentChildrenActual[i] = prevActual[prevMap.get(key)];\n        } else {\n          _this._contentChildrenActual[i] = null;\n\n          _this._contentChildrenUnresolvedSet.add(key);\n\n          _this._contentChildrenUnresolved++;\n        }\n\n        _this._contentChildrenMap.set(key, i);\n      });\n    }\n\n    return children;\n  };\n\n  ContentChildrenManager.prototype.getChildRef = function (child) {\n    //console.log(child);\n    this.trackChild(child);\n  };\n\n  Object.defineProperty(ContentChildrenManager.prototype, \"contentChildrenActual\", {\n    get: function () {\n      return this._contentChildrenActual;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  ContentChildrenManager.prototype.trackChild = function (child) {\n    if (child === null) {\n      return;\n    }\n\n    var name = this._getKey(child);\n\n    var index = this._contentChildrenMap.get(name);\n\n    if (this._contentChildrenActual[index] === null) {\n      this._contentChildrenActual[index] = child;\n\n      this._contentChildrenUnresolvedSet.delete(name);\n\n      this._contentChildrenUnresolved--;\n\n      if (this._contentChildrenUnresolved <= 0) {\n        this._updateContentChildren();\n      }\n    }\n  };\n\n  return ContentChildrenManager;\n}();\n\nexport { ContentChildrenManager };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/ContentChildrenManager.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import * as React from \"react\";\nvar ContentChildrenManager = /** @class */ /*@__PURE__*/ (function () {\n    function ContentChildrenManager(getPropsKey, getKey, updateContentChildren) {\n        this._contentChildren = null;\n        this._contentChildrenActual = null;\n        this._contentChildrenMap = null;\n        this._contentChildrenUnresolvedSet = null;\n        this._contentChildrenUnresolved = 0;\n        this.getChildRef = this.getChildRef.bind(this);\n        this._getPropsKey = getPropsKey;\n        this._getKey = getKey;\n        this._updateContentChildren = updateContentChildren;\n        this._contentChildrenUnresolvedSet = new Set();\n    }\n    ContentChildrenManager.prototype.getChildren = function (propChildren) {\n        var _this = this;\n        var children = [];\n        React.Children.forEach(propChildren, function (ch) {\n            var key = _this._getPropsKey(ch);\n            if (key === undefined) {\n                throw new Error(\"each child must have a unique key or name property\");\n            }\n            children.push(React.cloneElement(ch, {\n                key: key,\n                ref: _this.getChildRef\n            }));\n        });\n        this._contentChildren = children;\n        var prevActual = this._contentChildrenActual;\n        this._contentChildrenActual = [];\n        var prevMap = this._contentChildrenMap;\n        var prevUnresolved = this._contentChildrenUnresolvedSet;\n        this._contentChildrenUnresolvedSet = new Set();\n        this._contentChildrenMap = new Map();\n        this._contentChildrenUnresolved = 0;\n        if (this._contentChildren) {\n            this._contentChildren.map(function (ch, i) {\n                var key = _this._getPropsKey(ch);\n                var unresolved = prevUnresolved.has(key);\n                if (prevMap && prevMap.has(key) && !unresolved) {\n                    _this._contentChildrenActual[i] = prevActual[prevMap.get(key)];\n                }\n                else {\n                    _this._contentChildrenActual[i] = null;\n                    _this._contentChildrenUnresolvedSet.add(key);\n                    _this._contentChildrenUnresolved++;\n                }\n                _this._contentChildrenMap.set(key, i);\n            });\n        }\n        return children;\n    };\n    ContentChildrenManager.prototype.getChildRef = function (child) {\n        //console.log(child);\n        this.trackChild(child);\n    };\n    Object.defineProperty(ContentChildrenManager.prototype, \"contentChildrenActual\", {\n        get: function () {\n            return this._contentChildrenActual;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    ContentChildrenManager.prototype.trackChild = function (child) {\n        if (child === null) {\n            return;\n        }\n        var name = this._getKey(child);\n        var index = this._contentChildrenMap.get(name);\n        if (this._contentChildrenActual[index] === null) {\n            this._contentChildrenActual[index] = child;\n            this._contentChildrenUnresolvedSet.delete(name);\n            this._contentChildrenUnresolved--;\n            if (this._contentChildrenUnresolved <= 0) {\n                this._updateContentChildren();\n            }\n        }\n    };\n    return ContentChildrenManager;\n}());\nexport { ContentChildrenManager };\n//# sourceMappingURL=ContentChildrenManager.js.map\n"]},"metadata":{},"sourceType":"module"}