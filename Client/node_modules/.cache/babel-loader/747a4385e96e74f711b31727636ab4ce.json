{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends, __values } from \"tslib\";\nimport { fromEnum, markType } from \"igniteui-react-core\";\nimport { NumericYAxis } from \"./NumericYAxis\";\nimport { NumericScaler } from \"./NumericScaler\";\nimport { AxisRange } from \"./AxisRange\";\nimport { PercentChangeAxisRenderer } from \"./PercentChangeAxisRenderer\";\nimport { isNaN_ } from \"igniteui-react-core\";\nimport { AutoRangeCalculator } from \"./AutoRangeCalculator\";\n/**\n * @hidden\n */\n\nvar PercentChangeYAxis =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(PercentChangeYAxis, _super);\n\n  function PercentChangeYAxis() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  PercentChangeYAxis.prototype.j9 = function () {\n    return new VerticalPercentChangeScaler(this);\n  };\n\n  PercentChangeYAxis.prototype.j2 = function () {\n    var e_1, _a;\n\n    var a = 1.7976931348623157E+308;\n    var b = -1.7976931348623157E+308;\n\n    try {\n      for (var _b = __values(fromEnum(this.c4())), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var c = _c.value;\n        var d = c.ap(this);\n\n        if (d == null) {\n          continue;\n        }\n\n        var e = c.f2();\n\n        if (isNaN_(e) || e == 0) {\n          continue;\n        }\n\n        var f = d.b - e;\n        var g = e - d.c;\n        var h = Math.abs(f / e * 100);\n        var i = Math.abs(g / e * 100);\n        a = Math.min(a, -i);\n        b = Math.max(b, h);\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n\n    return new AxisRange(a, b);\n  };\n\n  PercentChangeYAxis.prototype.j5 = function (a) {\n    return new PercentChangeAxisRenderer(a);\n  };\n\n  PercentChangeYAxis.prototype.dt = function (a, b) {\n    var c = (a - b.b) / b.b * 100;\n\n    if (c < this.kv) {\n      var d = this.kv / 100 * b.b + b.b;\n      return d;\n    }\n\n    if (c > this.ku) {\n      var e = this.ku / 100 * b.b + b.b;\n      return e;\n    }\n\n    return a;\n  };\n\n  PercentChangeYAxis.prototype.j$c = function (a, b) {\n    return this.eb.apply(this, arguments);\n  };\n\n  PercentChangeYAxis.prototype.j$b = function (a, b) {\n    return this.d8.apply(this, arguments);\n  };\n\n  PercentChangeYAxis.prototype.j$d = function (a, b, c, d, e) {\n    this.g4.apply(this, arguments);\n  };\n\n  PercentChangeYAxis.prototype.j$e = function (a, b, c, d) {\n    this.g5.apply(this, arguments);\n  };\n\n  PercentChangeYAxis.prototype.j$f = function (a, b, c, d) {\n    this.g6.apply(this, arguments);\n  };\n\n  Object.defineProperty(PercentChangeYAxis.prototype, \"j$a\", {\n    get: function () {\n      return this.cc;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  PercentChangeYAxis.$t = markType(PercentChangeYAxis, 'PercentChangeYAxis', NumericYAxis.$);\n  return PercentChangeYAxis;\n}(NumericYAxis);\n\nexport { PercentChangeYAxis };\n/**\n * @hidden\n */\n\nvar VerticalPercentChangeScaler =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(VerticalPercentChangeScaler, _super);\n\n  function VerticalPercentChangeScaler(a) {\n    var _this = _super.call(this) || this;\n\n    _this.ad = null;\n    _this.ad = a;\n    return _this;\n  }\n\n  VerticalPercentChangeScaler.prototype.t = function (a, b, c, d, e) {\n    var f = AutoRangeCalculator.a(this.ad, b, c, false, -1, d, e);\n    d = f.p5;\n    e = f.p6;\n    return {\n      p3: d,\n      p4: e\n    };\n  };\n\n  VerticalPercentChangeScaler.prototype.p = function (a, b) {\n    if (!b.c.isEmpty) {\n      var c = this.ae(a, NumericScaler.ac, b.c, b.b, b.a);\n      c = (c - b.d.top) / b.d.height;\n      c = b.d.top + b.d.height * (c - b.e.top) / b.e.height;\n      return c;\n    }\n\n    return this.ae(a, b.e, b.d, b.b, b.a);\n  };\n\n  VerticalPercentChangeScaler.prototype.ae = function (a, b, c, d, e) {\n    var f;\n\n    if (isNaN_(d)) {\n      f = a;\n    } else {\n      var g = (a - d) / Math.abs(d) * 100;\n      f = g;\n    }\n\n    var h = (f - this.o) / this.m;\n\n    if (!e) {\n      h = 1 - h;\n    }\n\n    return c.top + c.height * (h - b.top) / b.height;\n  };\n\n  VerticalPercentChangeScaler.prototype.q = function (a, b) {\n    var c = b.b;\n    var d = b.e.top + b.e.height * (a - b.d.top) / b.d.height;\n\n    if (!b.a) {\n      d = 1 - d;\n    }\n\n    var e = this.o + d * this.m;\n    var f;\n\n    if (isNaN_(c)) {\n      f = e;\n    } else {\n      var g = e * Math.abs(c) / 100 + c;\n      f = g;\n    }\n\n    return f;\n  };\n\n  VerticalPercentChangeScaler.$t = markType(VerticalPercentChangeScaler, 'VerticalPercentChangeScaler', NumericScaler.$);\n  return VerticalPercentChangeScaler;\n}(NumericScaler);\n\nexport { VerticalPercentChangeScaler };","map":{"version":3,"sources":["../../../../src/igniteui-charts/lib/PercentChangeYAxis_combined.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends, __values } from \"tslib\";\nimport { fromEnum, markType } from \"igniteui-react-core\";\nimport { NumericYAxis } from \"./NumericYAxis\";\nimport { NumericScaler } from \"./NumericScaler\";\nimport { AxisRange } from \"./AxisRange\";\nimport { PercentChangeAxisRenderer } from \"./PercentChangeAxisRenderer\";\nimport { isNaN_ } from \"igniteui-react-core\";\nimport { AutoRangeCalculator } from \"./AutoRangeCalculator\";\n/**\n * @hidden\n */\nvar PercentChangeYAxis = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(PercentChangeYAxis, _super);\n    function PercentChangeYAxis() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    PercentChangeYAxis.prototype.j9 = function () {\n        return new VerticalPercentChangeScaler(this);\n    };\n    PercentChangeYAxis.prototype.j2 = function () {\n        var e_1, _a;\n        var a = 1.7976931348623157E+308;\n        var b = -1.7976931348623157E+308;\n        try {\n            for (var _b = __values(fromEnum(this.c4())), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var c = _c.value;\n                var d = c.ap(this);\n                if (d == null) {\n                    continue;\n                }\n                var e = c.f2();\n                if (isNaN_(e) || e == 0) {\n                    continue;\n                }\n                var f = d.b - e;\n                var g = e - d.c;\n                var h = Math.abs(f / e * 100);\n                var i = Math.abs(g / e * 100);\n                a = Math.min(a, -i);\n                b = Math.max(b, h);\n            }\n        }\n        catch (e_1_1) {\n            e_1 = { error: e_1_1 };\n        }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return))\n                    _a.call(_b);\n            }\n            finally {\n                if (e_1)\n                    throw e_1.error;\n            }\n        }\n        return new AxisRange(a, b);\n    };\n    PercentChangeYAxis.prototype.j5 = function (a) {\n        return new PercentChangeAxisRenderer(a);\n    };\n    PercentChangeYAxis.prototype.dt = function (a, b) {\n        var c = ((a - b.b) / b.b) * 100;\n        if (c < this.kv) {\n            var d = ((this.kv / 100) * b.b) + b.b;\n            return d;\n        }\n        if (c > this.ku) {\n            var e = ((this.ku / 100) * b.b) + b.b;\n            return e;\n        }\n        return a;\n    };\n    PercentChangeYAxis.prototype.j$c = function (a, b) {\n        return this.eb.apply(this, arguments);\n    };\n    PercentChangeYAxis.prototype.j$b = function (a, b) {\n        return this.d8.apply(this, arguments);\n    };\n    PercentChangeYAxis.prototype.j$d = function (a, b, c, d, e) {\n        this.g4.apply(this, arguments);\n    };\n    PercentChangeYAxis.prototype.j$e = function (a, b, c, d) {\n        this.g5.apply(this, arguments);\n    };\n    PercentChangeYAxis.prototype.j$f = function (a, b, c, d) {\n        this.g6.apply(this, arguments);\n    };\n    Object.defineProperty(PercentChangeYAxis.prototype, \"j$a\", {\n        get: function () {\n            return this.cc;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    PercentChangeYAxis.$t = markType(PercentChangeYAxis, 'PercentChangeYAxis', NumericYAxis.$);\n    return PercentChangeYAxis;\n}(NumericYAxis));\nexport { PercentChangeYAxis };\n/**\n * @hidden\n */\nvar VerticalPercentChangeScaler = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(VerticalPercentChangeScaler, _super);\n    function VerticalPercentChangeScaler(a) {\n        var _this = _super.call(this) || this;\n        _this.ad = null;\n        _this.ad = a;\n        return _this;\n    }\n    VerticalPercentChangeScaler.prototype.t = function (a, b, c, d, e) {\n        var f = AutoRangeCalculator.a(this.ad, b, c, false, -1, d, e);\n        d = f.p5;\n        e = f.p6;\n        return {\n            p3: d,\n            p4: e\n        };\n    };\n    VerticalPercentChangeScaler.prototype.p = function (a, b) {\n        if (!b.c.isEmpty) {\n            var c = this.ae(a, NumericScaler.ac, b.c, b.b, b.a);\n            c = (c - b.d.top) / b.d.height;\n            c = b.d.top + b.d.height * (c - b.e.top) / b.e.height;\n            return c;\n        }\n        return this.ae(a, b.e, b.d, b.b, b.a);\n    };\n    VerticalPercentChangeScaler.prototype.ae = function (a, b, c, d, e) {\n        var f;\n        if (isNaN_(d)) {\n            f = a;\n        }\n        else {\n            var g = (a - d) / Math.abs(d) * 100;\n            f = g;\n        }\n        var h = (f - this.o) / this.m;\n        if (!e) {\n            h = 1 - h;\n        }\n        return c.top + c.height * (h - b.top) / b.height;\n    };\n    VerticalPercentChangeScaler.prototype.q = function (a, b) {\n        var c = b.b;\n        var d = b.e.top + b.e.height * (a - b.d.top) / b.d.height;\n        if (!b.a) {\n            d = 1 - d;\n        }\n        var e = this.o + d * (this.m);\n        var f;\n        if (isNaN_(c)) {\n            f = e;\n        }\n        else {\n            var g = ((e) * Math.abs(c) / 100) + c;\n            f = g;\n        }\n        return f;\n    };\n    VerticalPercentChangeScaler.$t = markType(VerticalPercentChangeScaler, 'VerticalPercentChangeScaler', NumericScaler.$);\n    return VerticalPercentChangeScaler;\n}(NumericScaler));\nexport { VerticalPercentChangeScaler };\n//# sourceMappingURL=PercentChangeYAxis_combined.js.map\n"]},"metadata":{},"sourceType":"module"}