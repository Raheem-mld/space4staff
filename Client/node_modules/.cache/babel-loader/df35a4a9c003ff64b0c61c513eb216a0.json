{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { HorizontalAnchoredCategorySeries } from \"./HorizontalAnchoredCategorySeries\";\nimport { DependencyProperty } from \"igniteui-react-core\";\nimport { SplineType_$type } from \"./SplineType\";\nimport { AxisRange } from \"./AxisRange\";\nimport { Array_$type, typeCast, Point_$type, enumGetBox, markType, markDep } from \"igniteui-react-core\";\nimport { List$1 } from \"igniteui-react-core\";\nimport { Rect } from \"igniteui-react-core\";\nimport { CategoryAxisBase } from \"./CategoryAxisBase\";\nimport { ISortingAxis_$type } from \"./ISortingAxis\";\nimport { CollisionAvoider } from \"./CollisionAvoider\";\nimport { AnchoredCategorySeriesView } from \"./AnchoredCategorySeriesView\";\nimport { ScalerParams } from \"./ScalerParams\";\nimport { SafeSortedReadOnlyDoubleCollection } from \"./SafeSortedReadOnlyDoubleCollection\";\nimport { Numeric } from \"igniteui-react-core\";\nimport { PropertyMetadata } from \"igniteui-react-core\";\nimport { truncate, isNaN_ } from \"igniteui-react-core\";\nimport { Color } from \"igniteui-react-core\";\n/**\n * @hidden\n */\n\nvar SplineSeriesBase =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(SplineSeriesBase, _super);\n\n  function SplineSeriesBase() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.uh = null;\n    _this.un = NaN;\n    _this.um = NaN;\n    return _this;\n  }\n\n  SplineSeriesBase.prototype.bu = function () {\n    return new SplineSeriesBaseView(this);\n  };\n\n  SplineSeriesBase.prototype.lh = function (a) {\n    _super.prototype.lh.call(this, a);\n\n    this.ui = a;\n  };\n\n  SplineSeriesBase.prototype.ap = function (a) {\n    if (!this.uk || this.uh == null || this.uh.length == 0) {\n      return _super.prototype.ap.call(this, a);\n    }\n\n    if (this.valueColumn == null || this.valueColumn.count == 0) {\n      return null;\n    }\n\n    if (a == this.fetchXAxis()) {\n      return new AxisRange(0, this.valueColumn.count - 1);\n    }\n\n    this.uu(this.ui);\n\n    if (this.uh == null || this.uh.length == 0) {\n      return null;\n    }\n\n    if (a == this.fetchYAxis()) {\n      if (isNaN_(this.uq) || isNaN_(this.ur)) {\n        return null;\n      }\n\n      return new AxisRange(this.ur, this.uq);\n    }\n\n    return null;\n  };\n\n  SplineSeriesBase.prototype.get_c8 = function () {\n    return true;\n  };\n\n  SplineSeriesBase.prototype.uf = function (a) {\n    var _this = this;\n\n    if (a.cr.d == 0) {\n      return null;\n    }\n\n    var b = new List$1(Array_$type, 0);\n    var c = a.bv;\n    var d = a.bu;\n    var e = this.getEffectiveViewport1(a);\n    var f = 0;\n    var g = 0;\n    var h = 0;\n    var i = this;\n    var j = typeCast(CategoryAxisBase.$, i.fetchXAxis());\n    var k = i.o7(this.bx);\n    var l = i.ch;\n\n    if (c.isEmpty || d.isEmpty || j == null || l == null || l.count == 0) {\n      f = 0;\n      return null;\n    }\n\n    var m = this.gh;\n    var n = typeCast(ISortingAxis_$type, j);\n\n    if (n == null || n.i$b == null) {\n      var o = new ScalerParams(0, c, d, j.cc, e);\n      var p = 0;\n      var q = j.kr - 1;\n      var r = Math.floor((q - p + 1) * m / k.width);\n      f = truncate(Math.max(1, r));\n      g = truncate(Math.max(0, Math.floor(p / f) - 1));\n      h = truncate(Math.ceil(q / f));\n    } else {\n      g = 0;\n      h = j.kr - 1;\n      f = 1;\n    }\n\n    if (n != null && n.i$b.count != this.ch.count) {\n      return null;\n    }\n\n    this.uu(a);\n    var s = truncate(Math.ceil(d.width / (h - g)));\n    var t = new CollisionAvoider();\n\n    if (n != null) {\n      return this.ug(a);\n    }\n\n    var u = function (v) {\n      return v;\n    };\n\n    var v = function (w) {\n      return _this.valueColumn.item(w);\n    };\n\n    var w = a;\n    w.c6();\n\n    for (var x = g; x <= h; ++x) {\n      var y = null;\n\n      if (f == 1) {\n        if (x >= this.valueColumn.count - 1) {\n          break;\n        }\n\n        var z = u(x);\n        var aa = v(x);\n        var ab = u(x + 1);\n        var ac = v(x + 1);\n        var ad = ab - z;\n        var ae = this.uh[x];\n        var af = this.uh[x + 1];\n        b.add([aa, ac]);\n\n        for (var ag = 1; ag < s; ++ag) {\n          var ah = z + ad * ag / s;\n          var ai = (ab - ah) / ad;\n          var aj = (ah - z) / ad;\n          var ak = ai * aa + aj * ac + ((ai * ai * ai - ai) * ae + (aj * aj * aj - aj) * af) * (ad * ad) / 6;\n          b.add([ak, ak]);\n        }\n      } else {\n        y = a.cr.getBucket(x);\n\n        if (!isNaN_(y[0])) {\n          b.add([y[1], y[2]]);\n        }\n      }\n    }\n\n    w.c8();\n    return b.toArray();\n  };\n\n  SplineSeriesBase.prototype.ug = function (a) {\n    var _this = this;\n\n    var b = typeCast(ISortingAxis_$type, this.tw);\n    var c = this.getEffectiveViewport1(a);\n    var d = a.bv;\n    var e = a.bu;\n    var f = new List$1(Array_$type, 0);\n\n    if (b == null) {\n      return null;\n    }\n\n    var g = this.tw;\n    var h = 0;\n    var i = 0;\n    var j = 0;\n    var k = this.gh;\n    var l = this.o7(this.bx);\n\n    if (b == null || b.i$b == null) {\n      var m = new ScalerParams(0, d, e, g.cc, c);\n      var n = 0;\n      var o = g.kr - 1;\n      var p = Math.floor((o - n + 1) * k / l.width);\n      h = truncate(Math.max(1, p));\n      i = truncate(Math.max(0, Math.floor(n / h) - 1));\n      j = truncate(Math.ceil(o / h));\n    } else {\n      i = 0;\n      j = g.kr - 1;\n      h = 1;\n    }\n\n    var q = function (r) {\n      return r;\n    };\n\n    var r = function (s) {\n      return _this.valueColumn.item(b.i$b._inner[s]);\n    };\n\n    var s = truncate(Math.ceil(e.width / (j - i)));\n    var t = new CollisionAvoider();\n\n    if (h <= 0 || i <= 0 && j <= 0) {\n      return null;\n    }\n\n    for (var u = i; u < j + 1; ++u) {\n      var v = null;\n      var w = u * h;\n\n      if (b != null && b.i$b != null && w >= 0 && w < b.i$b.count) {\n        w = b.i$b._inner[w];\n      }\n\n      if (u >= this.valueColumn.count - 1) {\n        break;\n      }\n\n      var x = q(u);\n      var y = r(u);\n      var z = q(u + 1);\n      var aa = r(u + 1);\n      var ab = z - x;\n      var ac = this.uh[u];\n      var ad = this.uh[u + 1];\n      f.add([y, y]);\n\n      for (var ae = 1; ae < s; ++ae) {\n        var af = ae / s;\n        var ag = x + ab * af;\n        var ah = (z - ag) / ab;\n        var ai = (ag - x) / ab;\n        var aj = ah * y + ai * aa + ((ah * ah * ah - ah) * ac + (ai * ai * ai - ai) * ad) * (ab * ab) / 6;\n        f.add([aj, aj]);\n      }\n    }\n\n    return f.toArray();\n  };\n\n  SplineSeriesBase.prototype.uv = function (a, b, c, d, e, f) {\n    var _this = this;\n\n    var g = typeCast(ISortingAxis_$type, d);\n    var h = this.getEffectiveViewport1(f);\n\n    if (g == null) {\n      return;\n    }\n\n    var i = new ScalerParams(0, b, c, d.cc, h);\n    var j = new ScalerParams(0, b, c, e.cc, h);\n    j.b = this.f2();\n    var k = this.pt();\n    var l = 0;\n    var m = this.up(d, b, c, h);\n\n    var n = function (o) {\n      return o;\n    };\n\n    var o = function (p) {\n      return _this.valueColumn.item(g.i$b._inner[p]);\n    };\n\n    var p = this.rc.cr.f;\n    var q = this.rc.cr.e;\n    var r = truncate(Math.ceil(c.width / (p - q)));\n    var s = new CollisionAvoider();\n    var t = this.rc.cr.d;\n\n    if (t <= 0 || q <= 0 && p <= 0) {\n      this.rc.cu.count = l;\n      return;\n    }\n\n    var u = 0;\n    var v = 0;\n\n    for (var w = q; w < p + 1; ++w) {\n      var x = null;\n      var y = w * t;\n\n      if (g != null && g.i$b != null && y >= 0 && y < g.i$b.count) {\n        y = g.i$b._inner[y];\n      }\n\n      if (w >= this.valueColumn.count - 1) {\n        if (k && this.ul(a, a.f._inner[a.f.count - 1], s, Math.min(y, this.ch.count - 1), l, f, u - 1)) {\n          ++l;\n        }\n\n        break;\n      }\n\n      var z = n(w);\n      var aa = o(w);\n      var ab = n(w + 1);\n      var ac = o(w + 1);\n      var ad = ab - z;\n      var ae = this.uh[w];\n      var af = this.uh[w + 1];\n      var ag = g.i$d(g.i$b._inner[w]);\n      var ah = d.d8(ag, i) + m;\n      var ai = e.d8(aa, j);\n      a.f.add([ah, ai, ai]);\n      u++;\n      v = u;\n\n      for (var aj = 1; aj < r; ++aj) {\n        var ak = aj / r;\n        var al = z + ad * ak;\n        var am = (ab - al) / ad;\n        var an = (al - z) / ad;\n        var ao = am * aa + an * ac + ((am * am * am - am) * ae + (an * an * an - an) * af) * (ad * ad) / 6;\n        var ap = g.i$d(g.i$b._inner[w]);\n        var aq = g.i$d(g.i$b._inner[w + 1]);\n        var ar = ap + (aq - ap) * ak;\n        al = d.d8(ar, i) + m;\n        ao = e.d8(ao, j);\n        a.f.add([al, ao, ao]);\n        u++;\n      }\n\n      if (k) {\n        x = [ah, ai, ai];\n      }\n\n      if (k && this.ul(a, x, s, Math.min(y, this.ch.count - 1), l, f, v - 1)) {\n        ++l;\n      }\n    }\n\n    f.cu.count = l;\n  };\n\n  SplineSeriesBase.prototype.ul = function (a, b, c, d, e, f, g) {\n    var h = b[0];\n    var i = b[1];\n    var j = new Rect(0, h - 5, i - 5, 11, 11);\n\n    if (!isNaN_(h) && !isNaN_(i) && c.tryAdd(j)) {\n      a.m.add({\n        $type: Point_$type,\n        x: h,\n        y: i\n      });\n      var k = f.cu.item(e);\n      k.content.item = this.ch.item(d);\n      k.al = g;\n      return true;\n    }\n\n    return false;\n  };\n\n  SplineSeriesBase.prototype.aj = function (a, b, c, d, e, f) {\n    if (a == null || a.ch || this.r3(this.bx) > 1 || this.r3(this.bx) == 0) {\n      return _super.prototype.aj.call(this, this.q2(), this.q3.f, this.r3(this.bx), this.r4(this.bx), e, f);\n    }\n\n    if (this.q3.f.count == 0) {\n      return null;\n    }\n\n    var g = this.ui.cr.f;\n    var h = this.bx.bu;\n    var i = truncate(Math.ceil(h.width));\n\n    if (g != d) {\n      i = truncate(Math.ceil(h.width / (g - d)));\n    }\n\n    var j = -1;\n    var k = -1;\n    var l = this.fw(e);\n    var m = this.g6(e, f);\n    var n = this.g4(e, f);\n    var o = truncate(Math.floor(m / this.r3(this.bx)));\n    var p = truncate(Math.floor(n / this.r3(this.bx)));\n    j = o - this.r4(this.bx);\n    k = p - this.r4(this.bx);\n    var q = j * i;\n    var r = k * i;\n    var s = 0;\n\n    if (m != n) {\n      s = (l - m) / (n - m);\n    }\n\n    var t = truncate(Math.floor(q + s * (r - q)));\n    j = t;\n    k = t + 1;\n\n    if (j < 0) {\n      j = 0;\n    }\n\n    if (j > this.q3.f.count - 1) {\n      j = this.q3.f.count - 1;\n    }\n\n    if (k < 0) {\n      k = 0;\n    }\n\n    if (k > this.q3.f.count - 1) {\n      k = this.q3.f.count - 1;\n    }\n\n    var u = this.q3.f._inner[j];\n    var v = this.q3.f._inner[k];\n    var w = new Array(2);\n    w[0] = u;\n    w[1] = v;\n    return w;\n  };\n\n  SplineSeriesBase.prototype.si = function (a, b) {\n    var _this = this;\n\n    _super.prototype.si.call(this, a, b);\n\n    if (a.f.count <= 1) {\n      return;\n    }\n\n    if (b.cr.d == 0) {\n      return;\n    }\n\n    var c = b.bv;\n    var d = b.bu;\n    var e = this.getEffectiveViewport1(b);\n    var f = this.tw;\n    var g = this.t2;\n    var h = new ScalerParams(0, c, d, f.cc, e);\n\n    var i = function () {\n      var $ret = new ScalerParams(0, c, d, g.cc, e);\n      $ret.b = _this.f2();\n      return $ret;\n    }();\n\n    a.f.clear();\n    a.m.clear();\n    var j = this.pt();\n    var k = 0;\n    var l = typeCast(ISortingAxis_$type, this.tw);\n\n    if (l != null && l.i$b.count != this.ch.count) {\n      return;\n    }\n\n    var m = this.up(f, c, d, e);\n    var n = b.cr.d;\n    this.uu(b);\n    var o = b.cr.f;\n    var p = b.cr.e;\n    var q = truncate(Math.ceil(d.width / (o - p)));\n    var r = new CollisionAvoider();\n\n    if (l != null) {\n      this.uv(a, c, d, f, g, b);\n      return;\n    }\n\n    var s = function (t) {\n      return t;\n    };\n\n    var t = function (u) {\n      return _this.valueColumn.item(u);\n    };\n\n    var u = b;\n    u.c6();\n    var v = 0;\n    var w = 0;\n\n    for (var x = p; x <= o; ++x) {\n      var y = null;\n\n      if (n == 1) {\n        if (x >= this.valueColumn.count - 1) {\n          if (j && this.ul(a, a.f._inner[a.f.count - 1], r, Math.min(x * n, this.ch.count - 1), k, b, v - 1)) {\n            ++k;\n          }\n\n          break;\n        }\n\n        var z = s(x);\n        var aa = t(x);\n        var ab = s(x + 1);\n        var ac = t(x + 1);\n        var ad = ab - z;\n        var ae = this.uh[x];\n        var af = this.uh[x + 1];\n        var ag = f.d8(z, h) + m;\n        var ah = g.d8(aa, i);\n        a.f.add([ag, ah, ah]);\n        v++;\n        w = v;\n\n        for (var ai = 1; ai < q; ++ai) {\n          var aj = z + ad * ai / q;\n          var ak = (ab - aj) / ad;\n          var al = (aj - z) / ad;\n          var am = ak * aa + al * ac + ((ak * ak * ak - ak) * ae + (al * al * al - al) * af) * (ad * ad) / 6;\n          aj = f.d8(aj, h) + m;\n          am = g.d8(am, i);\n          a.f.add([aj, am, am]);\n          v++;\n        }\n\n        if (j) {\n          y = b.cr.getBucket(x);\n          y[0] = f.d8(y[0], h) + m;\n          y[1] = g.d8(y[1], i);\n          y[2] = g.d8(y[2], i);\n        }\n      } else {\n        y = b.cr.getBucket(x);\n\n        if (!isNaN_(y[0])) {\n          y[0] = f.d8(y[0], h) + m;\n          y[1] = g.d8(y[1], i);\n          y[2] = g.d8(y[2], i);\n          a.f.add(y);\n          v++;\n          w = v;\n        }\n      }\n\n      if (j && this.ul(a, y, r, Math.min(x * n, this.ch.count - 1), k, b, w - 1)) {\n        ++k;\n      }\n    }\n\n    u.c8();\n    b.cu.count = k;\n  };\n\n  SplineSeriesBase.prototype.uu = function (a) {\n    var _this = this;\n\n    var b = a.cr.d;\n\n    var c = function (d) {\n      return d;\n    };\n\n    var d = function (e) {\n      return _this.valueColumn.item(e);\n    };\n\n    if (b < 1 || this.valueColumn == null || this.valueColumn.count == 0) {\n      return;\n    }\n\n    if ((this.uh == null || this.uh.length != this.valueColumn.count) && b == 1) {\n      var e = this.uj == 0 ? NaN : 0;\n\n      if (this.tw != null && typeCast(ISortingAxis_$type, this.tw) !== null && this.tw.i$b != null) {\n        var f_1 = new SafeSortedReadOnlyDoubleCollection(1, this.valueColumn, this.tw.i$b, NaN);\n\n        d = function (g) {\n          return f_1.item(g);\n        };\n      }\n\n      this.uh = Numeric.c(this.valueColumn.count, c, d, e, e);\n\n      if (this.uk) {\n        var g = -1.7976931348623157E+308;\n        var h = 1.7976931348623157E+308;\n        var i = this.uf(a);\n\n        if (i == null) {\n          return;\n        }\n\n        for (var j = 0; j < i.length; j++) {\n          if (isNaN_(i[j][0]) || isNaN_(i[j][1])) {\n            continue;\n          }\n\n          if (i[j][1] > g) {\n            g = i[j][1];\n          }\n\n          if (i[j][0] < h) {\n            h = i[j][0];\n          }\n        }\n\n        this.ur = h;\n        this.uq = g;\n      }\n    }\n  };\n\n  SplineSeriesBase.prototype.uo = function (a, b, c, d, e, f, g) {\n    var h = d - b;\n    var i = b + h * a;\n    var j = (d - i) / h;\n    var k = (i - b) / h;\n    var l = j * c + k * e + ((j * j * j - j) * f + (k * k * k - k) * g) * (h * h) / 6;\n    return l;\n  };\n\n  SplineSeriesBase.prototype.f0 = function (a, b, c, d, e, f, g, h) {\n    var i = NaN;\n\n    if (c >= 0 && c < b.count) {\n      i = b.item(c);\n    }\n\n    var j = NaN;\n\n    if (d >= 0 && d < b.count) {\n      j = b.item(d);\n    }\n\n    if (f == 0) {\n      return j;\n    }\n\n    if (e == b.count - 1) {\n      return i;\n    }\n\n    if (isNaN_(j) && g != 0 && a <= 0.5 && !h) {\n      return i;\n    }\n\n    if (isNaN_(i) && g != 0 && a >= 0.5 && !h) {\n      return j;\n    }\n\n    var k = e;\n    var l = f;\n    var m = i;\n    var n = j;\n    var o = NaN;\n    var p = NaN;\n\n    if (this.uh != null && e >= 0 && e < this.uh.length) {\n      o = this.uh[e];\n    }\n\n    if (this.uh != null && f >= 0 && f < this.uh.length) {\n      p = this.uh[f];\n    }\n\n    return this.uo(a, k, m, l, n, o, p);\n  };\n\n  SplineSeriesBase.prototype.up = function (a, b, c, d) {\n    var e = this.preferredCategoryMode(a);\n\n    if (e == 0 && a.categoryMode != 0) {\n      e = 1;\n    }\n\n    var f = 0;\n\n    switch (e) {\n      case 0:\n        f = 0;\n        break;\n\n      case 1:\n        f = 0.5 * a.getCategorySize(b, c, d);\n        break;\n\n      case 2:\n        f = a.getGroupCenter(this.g9, b, c, d);\n        break;\n    }\n\n    if (a.cc) {\n      f = -f;\n    }\n\n    return f;\n  };\n\n  Object.defineProperty(SplineSeriesBase.prototype, \"ur\", {\n    get: function () {\n      return this.un;\n    },\n    set: function (a) {\n      this.un = a;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(SplineSeriesBase.prototype, \"uq\", {\n    get: function () {\n      return this.um;\n    },\n    set: function (a) {\n      this.um = a;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  SplineSeriesBase.prototype.uw = function () {\n    this.uh = null;\n    this.ur = NaN;\n    this.uq = NaN;\n\n    if (this.yAxis != null) {\n      this.yAxis.cv();\n    }\n  };\n\n  SplineSeriesBase.prototype.lm = function (a, b, c, d) {\n    switch (b) {\n      case \"ValueColumn\":\n      case \"FastItemsSource\":\n        this.uw();\n        break;\n    }\n\n    _super.prototype.lm.call(this, a, b, c, d);\n\n    switch (b) {\n      case SplineSeriesBase.$$p[1]:\n        this.uw();\n        this.l0(false);\n        this.k7();\n        break;\n    }\n  };\n\n  SplineSeriesBase.prototype.kk = function (a, b, c, d) {\n    this.uw();\n\n    _super.prototype.kk.call(this, a, b, c, d);\n  };\n\n  Object.defineProperty(SplineSeriesBase.prototype, \"useHighMarkerFidelity\", {\n    get: function () {\n      return this.ry;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  SplineSeriesBase.$t = markType(SplineSeriesBase, 'SplineSeriesBase', HorizontalAnchoredCategorySeries.$);\n  SplineSeriesBase.$$p = markDep(DependencyProperty, PropertyMetadata, SplineSeriesBase, 'raisePropertyChanged', ['IsSplineShapePartOfRange:uk:ux', [0, false], 'SplineType:uj:uy', [SplineType_$type, enumGetBox(SplineType_$type, 0)]]);\n  return SplineSeriesBase;\n}(HorizontalAnchoredCategorySeries);\n\nexport { SplineSeriesBase };\n/**\n * @hidden\n */\n\nvar SplineSeriesBaseView =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(SplineSeriesBaseView, _super);\n\n  function SplineSeriesBaseView(a) {\n    var _this = _super.call(this, a) || this;\n\n    _this.da = null;\n    _this.da = a;\n    return _this;\n  }\n\n  SplineSeriesBaseView.prototype.af = function () {\n    var a = new Color();\n    a.colorString = \"rgba(95,95,95,0.5)\";\n    this.e.or = a;\n    this.e.gj = 3;\n    this.e.gk = 1;\n    this.e.gl = 4;\n    this.e.e1 = false;\n  };\n\n  SplineSeriesBaseView.$t = markType(SplineSeriesBaseView, 'SplineSeriesBaseView', AnchoredCategorySeriesView.$);\n  return SplineSeriesBaseView;\n}(AnchoredCategorySeriesView);\n\nexport { SplineSeriesBaseView };","map":{"version":3,"sources":["../../../../src/igniteui-charts/lib/SplineSeriesBase_combined.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { HorizontalAnchoredCategorySeries } from \"./HorizontalAnchoredCategorySeries\";\nimport { DependencyProperty } from \"igniteui-react-core\";\nimport { SplineType_$type } from \"./SplineType\";\nimport { AxisRange } from \"./AxisRange\";\nimport { Array_$type, typeCast, Point_$type, enumGetBox, markType, markDep } from \"igniteui-react-core\";\nimport { List$1 } from \"igniteui-react-core\";\nimport { Rect } from \"igniteui-react-core\";\nimport { CategoryAxisBase } from \"./CategoryAxisBase\";\nimport { ISortingAxis_$type } from \"./ISortingAxis\";\nimport { CollisionAvoider } from \"./CollisionAvoider\";\nimport { AnchoredCategorySeriesView } from \"./AnchoredCategorySeriesView\";\nimport { ScalerParams } from \"./ScalerParams\";\nimport { SafeSortedReadOnlyDoubleCollection } from \"./SafeSortedReadOnlyDoubleCollection\";\nimport { Numeric } from \"igniteui-react-core\";\nimport { PropertyMetadata } from \"igniteui-react-core\";\nimport { truncate, isNaN_ } from \"igniteui-react-core\";\nimport { Color } from \"igniteui-react-core\";\n/**\n * @hidden\n */\nvar SplineSeriesBase = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(SplineSeriesBase, _super);\n    function SplineSeriesBase() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.uh = null;\n        _this.un = NaN;\n        _this.um = NaN;\n        return _this;\n    }\n    SplineSeriesBase.prototype.bu = function () {\n        return new SplineSeriesBaseView(this);\n    };\n    SplineSeriesBase.prototype.lh = function (a) {\n        _super.prototype.lh.call(this, a);\n        this.ui = a;\n    };\n    SplineSeriesBase.prototype.ap = function (a) {\n        if (!this.uk || this.uh == null || this.uh.length == 0) {\n            return _super.prototype.ap.call(this, a);\n        }\n        if (this.valueColumn == null || this.valueColumn.count == 0) {\n            return null;\n        }\n        if (a == this.fetchXAxis()) {\n            return new AxisRange(0, this.valueColumn.count - 1);\n        }\n        this.uu(this.ui);\n        if (this.uh == null || this.uh.length == 0) {\n            return null;\n        }\n        if (a == this.fetchYAxis()) {\n            if (isNaN_(this.uq) || isNaN_(this.ur)) {\n                return null;\n            }\n            return new AxisRange(this.ur, this.uq);\n        }\n        return null;\n    };\n    SplineSeriesBase.prototype.get_c8 = function () {\n        return true;\n    };\n    SplineSeriesBase.prototype.uf = function (a) {\n        var _this = this;\n        if (a.cr.d == 0) {\n            return null;\n        }\n        var b = new List$1(Array_$type, 0);\n        var c = a.bv;\n        var d = a.bu;\n        var e = this.getEffectiveViewport1(a);\n        var f = 0;\n        var g = 0;\n        var h = 0;\n        var i = this;\n        var j = typeCast(CategoryAxisBase.$, i.fetchXAxis());\n        var k = i.o7(this.bx);\n        var l = i.ch;\n        if (c.isEmpty || d.isEmpty || j == null || l == null || l.count == 0) {\n            f = 0;\n            return null;\n        }\n        var m = this.gh;\n        var n = typeCast(ISortingAxis_$type, j);\n        if (n == null || n.i$b == null) {\n            var o = new ScalerParams(0, c, d, j.cc, e);\n            var p = 0;\n            var q = j.kr - 1;\n            var r = Math.floor((q - p + 1) * m / k.width);\n            f = truncate(Math.max(1, r));\n            g = truncate(Math.max(0, Math.floor(p / f) - 1));\n            h = truncate(Math.ceil(q / f));\n        }\n        else {\n            g = 0;\n            h = j.kr - 1;\n            f = 1;\n        }\n        if (n != null && n.i$b.count != this.ch.count) {\n            return null;\n        }\n        this.uu(a);\n        var s = truncate(Math.ceil(d.width / (h - g)));\n        var t = new CollisionAvoider();\n        if (n != null) {\n            return this.ug(a);\n        }\n        var u = function (v) { return v; };\n        var v = function (w) { return _this.valueColumn.item(w); };\n        var w = a;\n        w.c6();\n        for (var x = g; x <= h; ++x) {\n            var y = null;\n            if (f == 1) {\n                if (x >= (this.valueColumn.count - 1)) {\n                    break;\n                }\n                var z = u(x);\n                var aa = v(x);\n                var ab = u(x + 1);\n                var ac = v(x + 1);\n                var ad = ab - z;\n                var ae = this.uh[x];\n                var af = this.uh[x + 1];\n                b.add([aa, ac]);\n                for (var ag = 1; ag < s; ++ag) {\n                    var ah = z + ad * ag / s;\n                    var ai = (ab - ah) / ad;\n                    var aj = (ah - z) / ad;\n                    var ak = ai * aa + aj * ac + ((ai * ai * ai - ai) * ae + (aj * aj * aj - aj) * af) * (ad * ad) / 6;\n                    b.add([ak, ak]);\n                }\n            }\n            else {\n                y = a.cr.getBucket(x);\n                if (!isNaN_(y[0])) {\n                    b.add([y[1], y[2]]);\n                }\n            }\n        }\n        w.c8();\n        return b.toArray();\n    };\n    SplineSeriesBase.prototype.ug = function (a) {\n        var _this = this;\n        var b = typeCast(ISortingAxis_$type, this.tw);\n        var c = this.getEffectiveViewport1(a);\n        var d = a.bv;\n        var e = a.bu;\n        var f = new List$1(Array_$type, 0);\n        if (b == null) {\n            return null;\n        }\n        var g = this.tw;\n        var h = 0;\n        var i = 0;\n        var j = 0;\n        var k = this.gh;\n        var l = this.o7(this.bx);\n        if (b == null || b.i$b == null) {\n            var m = new ScalerParams(0, d, e, g.cc, c);\n            var n = 0;\n            var o = g.kr - 1;\n            var p = Math.floor((o - n + 1) * k / l.width);\n            h = truncate(Math.max(1, p));\n            i = truncate(Math.max(0, Math.floor(n / h) - 1));\n            j = truncate(Math.ceil(o / h));\n        }\n        else {\n            i = 0;\n            j = g.kr - 1;\n            h = 1;\n        }\n        var q = function (r) { return r; };\n        var r = function (s) { return _this.valueColumn.item(b.i$b._inner[s]); };\n        var s = truncate(Math.ceil(e.width / (j - i)));\n        var t = new CollisionAvoider();\n        if (h <= 0 || (i <= 0 && j <= 0)) {\n            return null;\n        }\n        for (var u = i; u < j + 1; ++u) {\n            var v = null;\n            var w = u * h;\n            if (b != null && b.i$b != null && w >= 0 && w < b.i$b.count) {\n                w = b.i$b._inner[w];\n            }\n            if (u >= (this.valueColumn.count - 1)) {\n                break;\n            }\n            var x = q(u);\n            var y = r(u);\n            var z = q(u + 1);\n            var aa = r(u + 1);\n            var ab = z - x;\n            var ac = this.uh[u];\n            var ad = this.uh[u + 1];\n            f.add([y, y]);\n            for (var ae = 1; ae < s; ++ae) {\n                var af = ae / s;\n                var ag = x + ab * af;\n                var ah = (z - ag) / ab;\n                var ai = (ag - x) / ab;\n                var aj = ah * y + ai * aa + ((ah * ah * ah - ah) * ac + (ai * ai * ai - ai) * ad) * (ab * ab) / 6;\n                f.add([aj, aj]);\n            }\n        }\n        return f.toArray();\n    };\n    SplineSeriesBase.prototype.uv = function (a, b, c, d, e, f) {\n        var _this = this;\n        var g = typeCast(ISortingAxis_$type, d);\n        var h = this.getEffectiveViewport1(f);\n        if (g == null) {\n            return;\n        }\n        var i = new ScalerParams(0, b, c, d.cc, h);\n        var j = new ScalerParams(0, b, c, e.cc, h);\n        j.b = this.f2();\n        var k = this.pt();\n        var l = 0;\n        var m = this.up(d, b, c, h);\n        var n = function (o) { return o; };\n        var o = function (p) { return _this.valueColumn.item(g.i$b._inner[p]); };\n        var p = this.rc.cr.f;\n        var q = this.rc.cr.e;\n        var r = truncate(Math.ceil(c.width / (p - q)));\n        var s = new CollisionAvoider();\n        var t = this.rc.cr.d;\n        if (t <= 0 || (q <= 0 && p <= 0)) {\n            this.rc.cu.count = l;\n            return;\n        }\n        var u = 0;\n        var v = 0;\n        for (var w = q; w < p + 1; ++w) {\n            var x = null;\n            var y = w * t;\n            if (g != null && g.i$b != null && y >= 0 && y < g.i$b.count) {\n                y = g.i$b._inner[y];\n            }\n            if (w >= (this.valueColumn.count - 1)) {\n                if (k && this.ul(a, a.f._inner[a.f.count - 1], s, Math.min(y, this.ch.count - 1), l, f, u - 1)) {\n                    ++l;\n                }\n                break;\n            }\n            var z = n(w);\n            var aa = o(w);\n            var ab = n(w + 1);\n            var ac = o(w + 1);\n            var ad = ab - z;\n            var ae = this.uh[w];\n            var af = this.uh[w + 1];\n            var ag = g.i$d(g.i$b._inner[w]);\n            var ah = d.d8(ag, i) + m;\n            var ai = e.d8(aa, j);\n            a.f.add([ah, ai, ai]);\n            u++;\n            v = u;\n            for (var aj = 1; aj < r; ++aj) {\n                var ak = aj / r;\n                var al = z + ad * ak;\n                var am = (ab - al) / ad;\n                var an = (al - z) / ad;\n                var ao = am * aa + an * ac + ((am * am * am - am) * ae + (an * an * an - an) * af) * (ad * ad) / 6;\n                var ap = g.i$d(g.i$b._inner[w]);\n                var aq = g.i$d(g.i$b._inner[w + 1]);\n                var ar = ap + (aq - ap) * ak;\n                al = d.d8(ar, i) + m;\n                ao = e.d8(ao, j);\n                a.f.add([al, ao, ao]);\n                u++;\n            }\n            if (k) {\n                x = [ah, ai, ai];\n            }\n            if (k && this.ul(a, x, s, Math.min(y, this.ch.count - 1), l, f, v - 1)) {\n                ++l;\n            }\n        }\n        f.cu.count = l;\n    };\n    SplineSeriesBase.prototype.ul = function (a, b, c, d, e, f, g) {\n        var h = b[0];\n        var i = b[1];\n        var j = new Rect(0, h - 5, i - 5, 11, 11);\n        if (!isNaN_(h) && !isNaN_(i) && c.tryAdd(j)) {\n            a.m.add({ $type: Point_$type, x: h, y: i });\n            var k = f.cu.item(e);\n            k.content.item = this.ch.item(d);\n            k.al = g;\n            return true;\n        }\n        return false;\n    };\n    SplineSeriesBase.prototype.aj = function (a, b, c, d, e, f) {\n        if (a == null || a.ch || this.r3(this.bx) > 1 || this.r3(this.bx) == 0) {\n            return _super.prototype.aj.call(this, this.q2(), this.q3.f, this.r3(this.bx), this.r4(this.bx), e, f);\n        }\n        if (this.q3.f.count == 0) {\n            return null;\n        }\n        var g = this.ui.cr.f;\n        var h = this.bx.bu;\n        var i = truncate(Math.ceil(h.width));\n        if (g != d) {\n            i = truncate(Math.ceil(h.width / (g - d)));\n        }\n        var j = -1;\n        var k = -1;\n        var l = this.fw(e);\n        var m = this.g6(e, f);\n        var n = this.g4(e, f);\n        var o = truncate(Math.floor(m / this.r3(this.bx)));\n        var p = truncate(Math.floor(n / this.r3(this.bx)));\n        j = o - this.r4(this.bx);\n        k = p - this.r4(this.bx);\n        var q = j * i;\n        var r = k * i;\n        var s = 0;\n        if (m != n) {\n            s = (l - m) / (n - m);\n        }\n        var t = truncate(Math.floor(q + s * (r - q)));\n        j = t;\n        k = t + 1;\n        if (j < 0) {\n            j = 0;\n        }\n        if (j > this.q3.f.count - 1) {\n            j = this.q3.f.count - 1;\n        }\n        if (k < 0) {\n            k = 0;\n        }\n        if (k > this.q3.f.count - 1) {\n            k = this.q3.f.count - 1;\n        }\n        var u = this.q3.f._inner[j];\n        var v = this.q3.f._inner[k];\n        var w = new Array(2);\n        w[0] = u;\n        w[1] = v;\n        return w;\n    };\n    SplineSeriesBase.prototype.si = function (a, b) {\n        var _this = this;\n        _super.prototype.si.call(this, a, b);\n        if (a.f.count <= 1) {\n            return;\n        }\n        if (b.cr.d == 0) {\n            return;\n        }\n        var c = b.bv;\n        var d = b.bu;\n        var e = this.getEffectiveViewport1(b);\n        var f = this.tw;\n        var g = this.t2;\n        var h = new ScalerParams(0, c, d, f.cc, e);\n        var i = ((function () {\n            var $ret = new ScalerParams(0, c, d, g.cc, e);\n            $ret.b = _this.f2();\n            return $ret;\n        })());\n        a.f.clear();\n        a.m.clear();\n        var j = this.pt();\n        var k = 0;\n        var l = typeCast(ISortingAxis_$type, this.tw);\n        if (l != null && l.i$b.count != this.ch.count) {\n            return;\n        }\n        var m = this.up(f, c, d, e);\n        var n = b.cr.d;\n        this.uu(b);\n        var o = b.cr.f;\n        var p = b.cr.e;\n        var q = truncate(Math.ceil(d.width / (o - p)));\n        var r = new CollisionAvoider();\n        if (l != null) {\n            this.uv(a, c, d, f, g, b);\n            return;\n        }\n        var s = function (t) { return t; };\n        var t = function (u) { return _this.valueColumn.item(u); };\n        var u = b;\n        u.c6();\n        var v = 0;\n        var w = 0;\n        for (var x = p; x <= o; ++x) {\n            var y = null;\n            if (n == 1) {\n                if (x >= (this.valueColumn.count - 1)) {\n                    if (j && this.ul(a, a.f._inner[a.f.count - 1], r, Math.min(x * n, this.ch.count - 1), k, b, v - 1)) {\n                        ++k;\n                    }\n                    break;\n                }\n                var z = s(x);\n                var aa = t(x);\n                var ab = s(x + 1);\n                var ac = t(x + 1);\n                var ad = ab - z;\n                var ae = this.uh[x];\n                var af = this.uh[x + 1];\n                var ag = f.d8(z, h) + m;\n                var ah = g.d8(aa, i);\n                a.f.add([ag, ah, ah]);\n                v++;\n                w = v;\n                for (var ai = 1; ai < q; ++ai) {\n                    var aj = z + ad * ai / q;\n                    var ak = (ab - aj) / ad;\n                    var al = (aj - z) / ad;\n                    var am = ak * aa + al * ac + ((ak * ak * ak - ak) * ae + (al * al * al - al) * af) * (ad * ad) / 6;\n                    aj = f.d8(aj, h) + m;\n                    am = g.d8(am, i);\n                    a.f.add([aj, am, am]);\n                    v++;\n                }\n                if (j) {\n                    y = b.cr.getBucket(x);\n                    y[0] = (f.d8(y[0], h) + m);\n                    y[1] = g.d8(y[1], i);\n                    y[2] = g.d8(y[2], i);\n                }\n            }\n            else {\n                y = b.cr.getBucket(x);\n                if (!isNaN_(y[0])) {\n                    y[0] = (f.d8(y[0], h) + m);\n                    y[1] = g.d8(y[1], i);\n                    y[2] = g.d8(y[2], i);\n                    a.f.add(y);\n                    v++;\n                    w = v;\n                }\n            }\n            if (j && this.ul(a, y, r, Math.min(x * n, this.ch.count - 1), k, b, w - 1)) {\n                ++k;\n            }\n        }\n        u.c8();\n        b.cu.count = k;\n    };\n    SplineSeriesBase.prototype.uu = function (a) {\n        var _this = this;\n        var b = a.cr.d;\n        var c = function (d) { return d; };\n        var d = function (e) { return _this.valueColumn.item(e); };\n        if (b < 1 || this.valueColumn == null || this.valueColumn.count == 0) {\n            return;\n        }\n        if ((this.uh == null || this.uh.length != this.valueColumn.count) && b == 1) {\n            var e = this.uj == 0 ? NaN : 0;\n            if (this.tw != null && typeCast(ISortingAxis_$type, this.tw) !== null && this.tw.i$b != null) {\n                var f_1 = new SafeSortedReadOnlyDoubleCollection(1, this.valueColumn, this.tw.i$b, NaN);\n                d = function (g) { return f_1.item(g); };\n            }\n            this.uh = Numeric.c(this.valueColumn.count, c, d, e, e);\n            if (this.uk) {\n                var g = -1.7976931348623157E+308;\n                var h = 1.7976931348623157E+308;\n                var i = this.uf(a);\n                if (i == null) {\n                    return;\n                }\n                for (var j = 0; j < i.length; j++) {\n                    if (isNaN_(i[j][0]) || isNaN_(i[j][1])) {\n                        continue;\n                    }\n                    if (i[j][1] > g) {\n                        g = i[j][1];\n                    }\n                    if (i[j][0] < h) {\n                        h = i[j][0];\n                    }\n                }\n                this.ur = h;\n                this.uq = g;\n            }\n        }\n    };\n    SplineSeriesBase.prototype.uo = function (a, b, c, d, e, f, g) {\n        var h = d - b;\n        var i = b + h * a;\n        var j = (d - i) / h;\n        var k = (i - b) / h;\n        var l = j * c + k * e + ((j * j * j - j) * f + (k * k * k - k) * g) * (h * h) / 6;\n        return l;\n    };\n    SplineSeriesBase.prototype.f0 = function (a, b, c, d, e, f, g, h) {\n        var i = NaN;\n        if (c >= 0 && c < b.count) {\n            i = b.item(c);\n        }\n        var j = NaN;\n        if (d >= 0 && d < b.count) {\n            j = b.item(d);\n        }\n        if (f == 0) {\n            return j;\n        }\n        if (e == b.count - 1) {\n            return i;\n        }\n        if (isNaN_(j) && g != 0 && a <= 0.5 && !h) {\n            return i;\n        }\n        if (isNaN_(i) && g != 0 && a >= 0.5 && !h) {\n            return j;\n        }\n        var k = e;\n        var l = f;\n        var m = i;\n        var n = j;\n        var o = NaN;\n        var p = NaN;\n        if (this.uh != null && e >= 0 && e < this.uh.length) {\n            o = this.uh[e];\n        }\n        if (this.uh != null && f >= 0 && f < this.uh.length) {\n            p = this.uh[f];\n        }\n        return this.uo(a, k, m, l, n, o, p);\n    };\n    SplineSeriesBase.prototype.up = function (a, b, c, d) {\n        var e = this.preferredCategoryMode(a);\n        if (e == 0 && a.categoryMode != 0) {\n            e = 1;\n        }\n        var f = 0;\n        switch (e) {\n            case 0:\n                f = 0;\n                break;\n            case 1:\n                f = 0.5 * a.getCategorySize(b, c, d);\n                break;\n            case 2:\n                f = a.getGroupCenter(this.g9, b, c, d);\n                break;\n        }\n        if (a.cc) {\n            f = -f;\n        }\n        return f;\n    };\n    Object.defineProperty(SplineSeriesBase.prototype, \"ur\", {\n        get: function () {\n            return this.un;\n        },\n        set: function (a) {\n            this.un = a;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SplineSeriesBase.prototype, \"uq\", {\n        get: function () {\n            return this.um;\n        },\n        set: function (a) {\n            this.um = a;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SplineSeriesBase.prototype.uw = function () {\n        this.uh = null;\n        this.ur = NaN;\n        this.uq = NaN;\n        if (this.yAxis != null) {\n            this.yAxis.cv();\n        }\n    };\n    SplineSeriesBase.prototype.lm = function (a, b, c, d) {\n        switch (b) {\n            case \"ValueColumn\":\n            case \"FastItemsSource\":\n                this.uw();\n                break;\n        }\n        _super.prototype.lm.call(this, a, b, c, d);\n        switch (b) {\n            case SplineSeriesBase.$$p[1]:\n                this.uw();\n                this.l0(false);\n                this.k7();\n                break;\n        }\n    };\n    SplineSeriesBase.prototype.kk = function (a, b, c, d) {\n        this.uw();\n        _super.prototype.kk.call(this, a, b, c, d);\n    };\n    Object.defineProperty(SplineSeriesBase.prototype, \"useHighMarkerFidelity\", {\n        get: function () {\n            return this.ry;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SplineSeriesBase.$t = markType(SplineSeriesBase, 'SplineSeriesBase', HorizontalAnchoredCategorySeries.$);\n    SplineSeriesBase.$$p = markDep(DependencyProperty, PropertyMetadata, SplineSeriesBase, 'raisePropertyChanged', ['IsSplineShapePartOfRange:uk:ux', [0, false], 'SplineType:uj:uy', [SplineType_$type, enumGetBox(SplineType_$type, 0)]]);\n    return SplineSeriesBase;\n}(HorizontalAnchoredCategorySeries));\nexport { SplineSeriesBase };\n/**\n * @hidden\n */\nvar SplineSeriesBaseView = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(SplineSeriesBaseView, _super);\n    function SplineSeriesBaseView(a) {\n        var _this = _super.call(this, a) || this;\n        _this.da = null;\n        _this.da = a;\n        return _this;\n    }\n    SplineSeriesBaseView.prototype.af = function () {\n        var a = new Color();\n        a.colorString = \"rgba(95,95,95,0.5)\";\n        this.e.or = a;\n        this.e.gj = 3;\n        this.e.gk = 1;\n        this.e.gl = 4;\n        this.e.e1 = false;\n    };\n    SplineSeriesBaseView.$t = markType(SplineSeriesBaseView, 'SplineSeriesBaseView', AnchoredCategorySeriesView.$);\n    return SplineSeriesBaseView;\n}(AnchoredCategorySeriesView));\nexport { SplineSeriesBaseView };\n//# sourceMappingURL=SplineSeriesBase_combined.js.map\n"]},"metadata":{},"sourceType":"module"}