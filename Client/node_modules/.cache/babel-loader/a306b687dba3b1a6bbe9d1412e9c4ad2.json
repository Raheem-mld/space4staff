{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { ImagesChangedEventArgsDescription } from \"./ImagesChangedEventArgsDescription\";\n/**\n * @hidden\n */\n\nvar ImagesChangedEventArgsDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(ImagesChangedEventArgsDescriptionMetadata, _super);\n\n  function ImagesChangedEventArgsDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  ImagesChangedEventArgsDescriptionMetadata.b = function (a) {\n    if (ImagesChangedEventArgsDescriptionMetadata.a == null) {\n      ImagesChangedEventArgsDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      ImagesChangedEventArgsDescriptionMetadata.c(ImagesChangedEventArgsDescriptionMetadata.a);\n    }\n\n    if (a.g(ImagesChangedEventArgsDescriptionMetadata.a)) {\n      return;\n    }\n\n    a.s(ImagesChangedEventArgsDescriptionMetadata.a);\n  };\n\n  ImagesChangedEventArgsDescriptionMetadata.c = function (a) {};\n\n  ImagesChangedEventArgsDescriptionMetadata.d = function (a) {\n    ImagesChangedEventArgsDescriptionMetadata.b(a);\n    a.u(\"ImagesChangedEventArgs\", function () {\n      return new ImagesChangedEventArgsDescription();\n    });\n    a.t(\"ImagesChangedEventArgs\", ImagesChangedEventArgsDescriptionMetadata.a);\n  };\n\n  ImagesChangedEventArgsDescriptionMetadata.$t = markType(ImagesChangedEventArgsDescriptionMetadata, 'ImagesChangedEventArgsDescriptionMetadata');\n  ImagesChangedEventArgsDescriptionMetadata.a = null;\n  return ImagesChangedEventArgsDescriptionMetadata;\n}(Base);\n\nexport { ImagesChangedEventArgsDescriptionMetadata };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/ImagesChangedEventArgsDescriptionMetadata.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,IAAT,EAAe,YAAf,EAAmC,QAAnC,QAAmD,QAAnD;AAEA,SAAS,YAAT,QAA6B,gBAA7B;AACA,SAAS,iCAAT,QAAkD,qCAAlD;AAEA;;AAEG;;AACH,IAAA,yCAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAA+D,EAAA,SAAA,CAAA,yCAAA,EAAA,MAAA,CAAA;;AAA/D,WAAA,yCAAA,GAAA;;AAoBC;;AAjBe,EAAA,yCAAA,CAAA,CAAA,GAAf,UAAiB,CAAjB,EAA0C;AACzC,QAAI,yCAAyC,CAAC,CAA1C,IAA+C,IAAnD,EAAyD;AACxD,MAAA,yCAAyC,CAAC,CAA1C,GAA8C,IAAI,YAAJ,CAAiC,YAAjC,EAA+C,YAA/C,EAA6D,CAA7D,CAA9C;AACA,MAAA,yCAAyC,CAAC,CAA1C,CAA4C,yCAAyC,CAAC,CAAtF;AACA;;AACD,QAAI,CAAC,CAAC,CAAF,CAAI,yCAAyC,CAAC,CAA9C,CAAJ,EAAsD;AACrD;AACA;;AACD,IAAA,CAAC,CAAC,CAAF,CAAI,yCAAyC,CAAC,CAA9C;AACA,GATc;;AAUR,EAAA,yCAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAwC,CACvC,CADM;;AAEA,EAAA,yCAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAkC;AACjC,IAAA,yCAAyC,CAAC,CAA1C,CAA4C,CAA5C;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,wBAAJ,EAA8B,YAAA;AAAM,aAAA,IAAA,iCAAA,EAAA;AAAuC,KAA3E;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,wBAAJ,EAA8B,yCAAyC,CAAC,CAAxE;AACA,GAJM;;AAdA,EAAA,yCAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,yCAAD,EAA4C,2CAA5C,CAAnB;AACQ,EAAA,yCAAA,CAAA,CAAA,GAAkC,IAAlC;AAkBhB,SAAA,yCAAA;AAAC,CApBD,CAA+D,IAA/D,CAAA;;SAAa,yC","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { ImagesChangedEventArgsDescription } from \"./ImagesChangedEventArgsDescription\";\n/**\n * @hidden\n */\nvar ImagesChangedEventArgsDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(ImagesChangedEventArgsDescriptionMetadata, _super);\n    function ImagesChangedEventArgsDescriptionMetadata() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ImagesChangedEventArgsDescriptionMetadata.b = function (a) {\n        if (ImagesChangedEventArgsDescriptionMetadata.a == null) {\n            ImagesChangedEventArgsDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n            ImagesChangedEventArgsDescriptionMetadata.c(ImagesChangedEventArgsDescriptionMetadata.a);\n        }\n        if (a.g(ImagesChangedEventArgsDescriptionMetadata.a)) {\n            return;\n        }\n        a.s(ImagesChangedEventArgsDescriptionMetadata.a);\n    };\n    ImagesChangedEventArgsDescriptionMetadata.c = function (a) {\n    };\n    ImagesChangedEventArgsDescriptionMetadata.d = function (a) {\n        ImagesChangedEventArgsDescriptionMetadata.b(a);\n        a.u(\"ImagesChangedEventArgs\", function () { return new ImagesChangedEventArgsDescription(); });\n        a.t(\"ImagesChangedEventArgs\", ImagesChangedEventArgsDescriptionMetadata.a);\n    };\n    ImagesChangedEventArgsDescriptionMetadata.$t = markType(ImagesChangedEventArgsDescriptionMetadata, 'ImagesChangedEventArgsDescriptionMetadata');\n    ImagesChangedEventArgsDescriptionMetadata.a = null;\n    return ImagesChangedEventArgsDescriptionMetadata;\n}(Base));\nexport { ImagesChangedEventArgsDescriptionMetadata };\n//# sourceMappingURL=ImagesChangedEventArgsDescriptionMetadata.js.map\n"]},"metadata":{},"sourceType":"module"}