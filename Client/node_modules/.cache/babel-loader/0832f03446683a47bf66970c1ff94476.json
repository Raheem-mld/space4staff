{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends, __values } from \"tslib\";\nimport { LegendBase } from \"./LegendBase\";\nimport { IChartItemLegend_$type } from \"igniteui-react-core\";\nimport { LegendBaseView } from \"./LegendBaseView\";\nimport { fromEn, delegateCombine, typeCast, fromEnum, markType } from \"igniteui-react-core\";\nimport { ObservableCollection$1 } from \"igniteui-react-core\";\nimport { UIElement } from \"igniteui-react-core\";\nimport { ContentControl } from \"igniteui-react-core\";\nimport { ILegendContext_$type } from \"igniteui-react-core\";\nimport { LegendItemInfo } from \"./LegendItemInfo\";\nimport { LegendVisualData } from \"./LegendVisualData\";\nimport { LegendItemVisualData } from \"./LegendItemVisualData\";\nimport { RectData } from \"igniteui-react-core\";\n/**\n * @hidden\n */\n\nvar ItemLegend =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(ItemLegend, _super);\n\n  function ItemLegend() {\n    var _this = _super.call(this) || this;\n\n    _this.bb = null;\n    _this.bd = null;\n    _this.ab = ItemLegend.$;\n    _this.bb = _this.ak;\n    var a = _this.at;\n    a.collectionChanged = delegateCombine(a.collectionChanged, function (a, b) {\n      var e_1, _a, e_2, _b;\n\n      if (b.oldItems != null) {\n        try {\n          for (var _c = __values(fromEn(b.oldItems)), _d = _c.next(); !_d.done; _d = _c.next()) {\n            var c = _d.value;\n\n            _this.bb.an(c);\n          }\n        } catch (e_1_1) {\n          e_1 = {\n            error: e_1_1\n          };\n        } finally {\n          try {\n            if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n          } finally {\n            if (e_1) throw e_1.error;\n          }\n        }\n      }\n\n      if (b.newItems != null) {\n        try {\n          for (var _e = __values(fromEn(b.newItems)), _f = _e.next(); !_f.done; _f = _e.next()) {\n            var d = _f.value;\n\n            _this.bb.x(d);\n          }\n        } catch (e_2_1) {\n          e_2 = {\n            error: e_2_1\n          };\n        } finally {\n          try {\n            if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n          } finally {\n            if (e_2) throw e_2.error;\n          }\n        }\n      }\n    });\n    return _this;\n  }\n\n  ItemLegend.prototype.aj = function () {\n    return new ItemLegendView(this);\n  };\n\n  ItemLegend.prototype.a8 = function (a) {\n    _super.prototype.a8.call(this, a);\n\n    this.bb = a;\n  };\n\n  ItemLegend.prototype.addChildInOrder = function (a, b) {\n    if (!this.ak.m()) {\n      return;\n    }\n\n    this.bi(b);\n  };\n\n  ItemLegend.prototype.get_isItemwise = function () {\n    return true;\n  };\n\n  ItemLegend.prototype.createItemwiseLegendItems = function (a, b) {\n    this.a0(a, b);\n  };\n\n  ItemLegend.prototype.a0 = function (a, b) {\n    var e_3, _a;\n\n    this.ak.af();\n    this.clearLegendItemsForSeries(b);\n\n    if (b == null || a == null || a.count == 0) {\n      return;\n    }\n\n    try {\n      for (var _b = __values(fromEnum(a)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var c = _c.value;\n        var d = typeCast(ContentControl.$, c);\n\n        if (d != null && d.content != null) {\n          var e = typeCast(ILegendContext_$type, d.content);\n\n          if (e != null && !this.be(e)) {\n            this.at.add(c);\n            var f = new LegendItemInfo();\n            f.b = e;\n            f.c = c;\n            f.a = b;\n\n            if (e.legendLabel != null) {\n              f.d = e.legendLabel;\n            } else {\n              f.d = e.itemLabel;\n            }\n          }\n        }\n      }\n    } catch (e_3_1) {\n      e_3 = {\n        error: e_3_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_3) throw e_3.error;\n      }\n    }\n\n    this.ak.ag();\n  };\n\n  ItemLegend.prototype.createLegendItemsInsert = function (a, b) {\n    this.bh(a, b);\n  };\n\n  ItemLegend.prototype.bh = function (a, b) {\n    var e_4, _a;\n\n    this.ak.af();\n\n    try {\n      var c = this.bf(b);\n\n      if (b == null || a == null || a.count == 0) {\n        return;\n      }\n\n      try {\n        for (var _b = __values(fromEnum(a)), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var d = _c.value;\n          var e = typeCast(ContentControl.$, d);\n\n          if (e != null && e.content != null) {\n            var f = typeCast(ILegendContext_$type, e.content);\n\n            if (f != null && !this.be(f)) {\n              this.at.insert(c, d);\n              c++;\n              var g = new LegendItemInfo();\n              g.b = f;\n              g.c = d;\n              g.a = b;\n              g.d = f.legendLabel != null ? f.legendLabel.toString() : f.itemLabel;\n            }\n          }\n        }\n      } catch (e_4_1) {\n        e_4 = {\n          error: e_4_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_4) throw e_4.error;\n        }\n      }\n    } finally {\n      this.ak.ag();\n    }\n  };\n\n  ItemLegend.prototype.renderItemwiseContent = function (a) {\n    this.bi(a);\n  };\n\n  ItemLegend.prototype.bi = function (a) {\n    var _this = this;\n\n    this.clearLegendItemsForSeries(a);\n\n    if (a.hasSubItems) {\n      a.forSubItems(function (b) {\n        var c = typeCast(ContentControl.$, b);\n\n        if (c != null && c.content != null) {\n          var d = typeCast(ILegendContext_$type, c.content);\n\n          if (d != null && !_this.be(d)) {\n            _this.at.add(b);\n\n            var e = new LegendItemInfo();\n            e.b = d;\n            e.c = b;\n            e.a = a;\n            e.d = d.itemLabel;\n          }\n        }\n      });\n    }\n  };\n\n  ItemLegend.prototype.bf = function (a) {\n    var e_5, _a, e_6, _b;\n\n    if (a == null || this.at == null || this.at.count == 0) {\n      return 0;\n    }\n\n    var b = new ObservableCollection$1(UIElement.$, 0);\n    var c = -1;\n    var d = 0;\n\n    try {\n      for (var _c = __values(fromEnum(this.at)), _d = _c.next(); !_d.done; _d = _c.next()) {\n        var e = _d.value;\n        var f = typeCast(ContentControl.$, e);\n\n        if (f != null && f.content != null) {\n          var g = typeCast(ILegendContext_$type, f.content);\n\n          if (g != null && g.series == a) {\n            if (c == -1) {\n              c = d;\n            }\n\n            b.add(e);\n          }\n        }\n\n        d++;\n      }\n    } catch (e_5_1) {\n      e_5 = {\n        error: e_5_1\n      };\n    } finally {\n      try {\n        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n      } finally {\n        if (e_5) throw e_5.error;\n      }\n    }\n\n    try {\n      for (var _e = __values(fromEnum(b)), _f = _e.next(); !_f.done; _f = _e.next()) {\n        var h = _f.value;\n        this.at.remove(h);\n      }\n    } catch (e_6_1) {\n      e_6 = {\n        error: e_6_1\n      };\n    } finally {\n      try {\n        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n      } finally {\n        if (e_6) throw e_6.error;\n      }\n    }\n\n    if (c == -1) {\n      return this.at.count;\n    }\n\n    return c;\n  };\n\n  ItemLegend.prototype.be = function (a) {\n    return this.bb.ap(a);\n  };\n\n  Object.defineProperty(ItemLegend.prototype, \"bc\", {\n    get: function () {\n      return this.ak.k ? 0 : 1;\n    },\n    set: function (a) {\n      this.ak.k = a == 0;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  ItemLegend.$t = markType(ItemLegend, 'ItemLegend', LegendBase.$, [IChartItemLegend_$type]);\n  return ItemLegend;\n}(LegendBase);\n\nexport { ItemLegend };\n/**\n * @hidden\n */\n\nvar ItemLegendView =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(ItemLegendView, _super);\n\n  function ItemLegendView(a) {\n    var _this = _super.call(this, a) || this;\n\n    _this.ao = null;\n    _this.ao = a;\n    return _this;\n  }\n\n  ItemLegendView.prototype.ak = function () {\n    _super.prototype.ak.call(this);\n  };\n\n  ItemLegendView.prototype.get_j = function () {\n    return true;\n  };\n\n  ItemLegendView.prototype.ap = function (a) {\n    return this.c.e(a);\n  };\n\n  ItemLegendView.prototype.f = function () {\n    var a = new LegendVisualData();\n    var b = this.c.g.rootWrapper;\n    b = b.getChildAt(0);\n    var c = b.getChildCount();\n\n    for (var d = 0; d < c; d++) {\n      var e = new LegendItemVisualData();\n      var f = b.getChildAt(d);\n      e.label = f.getText();\n      e.label = e.label != null ? e.label.trim() : null;\n      e.bounds = new RectData(f.getOffset().left, f.getOffset().top, f.width(), f.height());\n      e.labelBounds = this.h(f);\n      e.badgeBounds = this.g(f);\n      a.items.add(e);\n    }\n\n    for (var g = 0; g < c; g++) {\n      a.items._inner[g].appearance.fill = this.a(g);\n    }\n\n    return a;\n  };\n\n  ItemLegendView.$t = markType(ItemLegendView, 'ItemLegendView', LegendBaseView.$);\n  return ItemLegendView;\n}(LegendBaseView);\n\nexport { ItemLegendView };","map":{"version":3,"sources":["../../../../src/igniteui-charts/lib/ItemLegend_combined.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends, __values } from \"tslib\";\nimport { LegendBase } from \"./LegendBase\";\nimport { IChartItemLegend_$type } from \"igniteui-react-core\";\nimport { LegendBaseView } from \"./LegendBaseView\";\nimport { fromEn, delegateCombine, typeCast, fromEnum, markType } from \"igniteui-react-core\";\nimport { ObservableCollection$1 } from \"igniteui-react-core\";\nimport { UIElement } from \"igniteui-react-core\";\nimport { ContentControl } from \"igniteui-react-core\";\nimport { ILegendContext_$type } from \"igniteui-react-core\";\nimport { LegendItemInfo } from \"./LegendItemInfo\";\nimport { LegendVisualData } from \"./LegendVisualData\";\nimport { LegendItemVisualData } from \"./LegendItemVisualData\";\nimport { RectData } from \"igniteui-react-core\";\n/**\n * @hidden\n */\nvar ItemLegend = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(ItemLegend, _super);\n    function ItemLegend() {\n        var _this = _super.call(this) || this;\n        _this.bb = null;\n        _this.bd = null;\n        _this.ab = ItemLegend.$;\n        _this.bb = _this.ak;\n        var a = _this.at;\n        a.collectionChanged = delegateCombine(a.collectionChanged, function (a, b) {\n            var e_1, _a, e_2, _b;\n            if (b.oldItems != null) {\n                try {\n                    for (var _c = __values(fromEn(b.oldItems)), _d = _c.next(); !_d.done; _d = _c.next()) {\n                        var c = _d.value;\n                        _this.bb.an(c);\n                    }\n                }\n                catch (e_1_1) {\n                    e_1 = { error: e_1_1 };\n                }\n                finally {\n                    try {\n                        if (_d && !_d.done && (_a = _c.return))\n                            _a.call(_c);\n                    }\n                    finally {\n                        if (e_1)\n                            throw e_1.error;\n                    }\n                }\n            }\n            if (b.newItems != null) {\n                try {\n                    for (var _e = __values(fromEn(b.newItems)), _f = _e.next(); !_f.done; _f = _e.next()) {\n                        var d = _f.value;\n                        _this.bb.x(d);\n                    }\n                }\n                catch (e_2_1) {\n                    e_2 = { error: e_2_1 };\n                }\n                finally {\n                    try {\n                        if (_f && !_f.done && (_b = _e.return))\n                            _b.call(_e);\n                    }\n                    finally {\n                        if (e_2)\n                            throw e_2.error;\n                    }\n                }\n            }\n        });\n        return _this;\n    }\n    ItemLegend.prototype.aj = function () {\n        return new ItemLegendView(this);\n    };\n    ItemLegend.prototype.a8 = function (a) {\n        _super.prototype.a8.call(this, a);\n        this.bb = a;\n    };\n    ItemLegend.prototype.addChildInOrder = function (a, b) {\n        if (!this.ak.m()) {\n            return;\n        }\n        this.bi(b);\n    };\n    ItemLegend.prototype.get_isItemwise = function () {\n        return true;\n    };\n    ItemLegend.prototype.createItemwiseLegendItems = function (a, b) {\n        this.a0(a, b);\n    };\n    ItemLegend.prototype.a0 = function (a, b) {\n        var e_3, _a;\n        this.ak.af();\n        this.clearLegendItemsForSeries(b);\n        if (b == null || a == null || a.count == 0) {\n            return;\n        }\n        try {\n            for (var _b = __values(fromEnum(a)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var c = _c.value;\n                var d = typeCast(ContentControl.$, c);\n                if (d != null && d.content != null) {\n                    var e = typeCast(ILegendContext_$type, d.content);\n                    if (e != null && !this.be(e)) {\n                        this.at.add(c);\n                        var f = new LegendItemInfo();\n                        f.b = e;\n                        f.c = c;\n                        f.a = b;\n                        if (e.legendLabel != null) {\n                            f.d = e.legendLabel;\n                        }\n                        else {\n                            f.d = e.itemLabel;\n                        }\n                    }\n                }\n            }\n        }\n        catch (e_3_1) {\n            e_3 = { error: e_3_1 };\n        }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return))\n                    _a.call(_b);\n            }\n            finally {\n                if (e_3)\n                    throw e_3.error;\n            }\n        }\n        this.ak.ag();\n    };\n    ItemLegend.prototype.createLegendItemsInsert = function (a, b) {\n        this.bh(a, b);\n    };\n    ItemLegend.prototype.bh = function (a, b) {\n        var e_4, _a;\n        this.ak.af();\n        try {\n            var c = this.bf(b);\n            if (b == null || a == null || a.count == 0) {\n                return;\n            }\n            try {\n                for (var _b = __values(fromEnum(a)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var d = _c.value;\n                    var e = typeCast(ContentControl.$, d);\n                    if (e != null && e.content != null) {\n                        var f = typeCast(ILegendContext_$type, e.content);\n                        if (f != null && !this.be(f)) {\n                            this.at.insert(c, d);\n                            c++;\n                            var g = new LegendItemInfo();\n                            g.b = f;\n                            g.c = d;\n                            g.a = b;\n                            g.d = f.legendLabel != null ? f.legendLabel.toString() : f.itemLabel;\n                        }\n                    }\n                }\n            }\n            catch (e_4_1) {\n                e_4 = { error: e_4_1 };\n            }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return))\n                        _a.call(_b);\n                }\n                finally {\n                    if (e_4)\n                        throw e_4.error;\n                }\n            }\n        }\n        finally {\n            this.ak.ag();\n        }\n    };\n    ItemLegend.prototype.renderItemwiseContent = function (a) {\n        this.bi(a);\n    };\n    ItemLegend.prototype.bi = function (a) {\n        var _this = this;\n        this.clearLegendItemsForSeries(a);\n        if (a.hasSubItems) {\n            a.forSubItems(function (b) {\n                var c = typeCast(ContentControl.$, b);\n                if (c != null && c.content != null) {\n                    var d = typeCast(ILegendContext_$type, c.content);\n                    if (d != null && !_this.be(d)) {\n                        _this.at.add(b);\n                        var e = new LegendItemInfo();\n                        e.b = d;\n                        e.c = b;\n                        e.a = a;\n                        e.d = d.itemLabel;\n                    }\n                }\n            });\n        }\n    };\n    ItemLegend.prototype.bf = function (a) {\n        var e_5, _a, e_6, _b;\n        if (a == null || this.at == null || this.at.count == 0) {\n            return 0;\n        }\n        var b = new ObservableCollection$1(UIElement.$, 0);\n        var c = -1;\n        var d = 0;\n        try {\n            for (var _c = __values(fromEnum(this.at)), _d = _c.next(); !_d.done; _d = _c.next()) {\n                var e = _d.value;\n                var f = typeCast(ContentControl.$, e);\n                if (f != null && f.content != null) {\n                    var g = typeCast(ILegendContext_$type, f.content);\n                    if (g != null && g.series == a) {\n                        if (c == -1) {\n                            c = d;\n                        }\n                        b.add(e);\n                    }\n                }\n                d++;\n            }\n        }\n        catch (e_5_1) {\n            e_5 = { error: e_5_1 };\n        }\n        finally {\n            try {\n                if (_d && !_d.done && (_a = _c.return))\n                    _a.call(_c);\n            }\n            finally {\n                if (e_5)\n                    throw e_5.error;\n            }\n        }\n        try {\n            for (var _e = __values(fromEnum(b)), _f = _e.next(); !_f.done; _f = _e.next()) {\n                var h = _f.value;\n                this.at.remove(h);\n            }\n        }\n        catch (e_6_1) {\n            e_6 = { error: e_6_1 };\n        }\n        finally {\n            try {\n                if (_f && !_f.done && (_b = _e.return))\n                    _b.call(_e);\n            }\n            finally {\n                if (e_6)\n                    throw e_6.error;\n            }\n        }\n        if (c == -1) {\n            return this.at.count;\n        }\n        return c;\n    };\n    ItemLegend.prototype.be = function (a) {\n        return this.bb.ap(a);\n    };\n    Object.defineProperty(ItemLegend.prototype, \"bc\", {\n        get: function () {\n            return this.ak.k ? 0 : 1;\n        },\n        set: function (a) {\n            this.ak.k = a == 0;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    ItemLegend.$t = markType(ItemLegend, 'ItemLegend', LegendBase.$, [IChartItemLegend_$type]);\n    return ItemLegend;\n}(LegendBase));\nexport { ItemLegend };\n/**\n * @hidden\n */\nvar ItemLegendView = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(ItemLegendView, _super);\n    function ItemLegendView(a) {\n        var _this = _super.call(this, a) || this;\n        _this.ao = null;\n        _this.ao = a;\n        return _this;\n    }\n    ItemLegendView.prototype.ak = function () {\n        _super.prototype.ak.call(this);\n    };\n    ItemLegendView.prototype.get_j = function () {\n        return true;\n    };\n    ItemLegendView.prototype.ap = function (a) {\n        return this.c.e(a);\n    };\n    ItemLegendView.prototype.f = function () {\n        var a = new LegendVisualData();\n        var b = this.c.g.rootWrapper;\n        b = b.getChildAt(0);\n        var c = b.getChildCount();\n        for (var d = 0; d < c; d++) {\n            var e = new LegendItemVisualData();\n            var f = b.getChildAt(d);\n            e.label = f.getText();\n            e.label = e.label != null ? e.label.trim() : null;\n            e.bounds = new RectData(f.getOffset().left, f.getOffset().top, f.width(), f.height());\n            e.labelBounds = this.h(f);\n            e.badgeBounds = this.g(f);\n            a.items.add(e);\n        }\n        for (var g = 0; g < c; g++) {\n            a.items._inner[g].appearance.fill = this.a(g);\n        }\n        return a;\n    };\n    ItemLegendView.$t = markType(ItemLegendView, 'ItemLegendView', LegendBaseView.$);\n    return ItemLegendView;\n}(LegendBaseView));\nexport { ItemLegendView };\n//# sourceMappingURL=ItemLegend_combined.js.map\n"]},"metadata":{},"sourceType":"module"}