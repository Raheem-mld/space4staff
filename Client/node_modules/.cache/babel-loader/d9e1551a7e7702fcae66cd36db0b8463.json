{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { WebListDescription } from \"./WebListDescription\";\n/**\n * @hidden\n */\n\nvar WebListDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(WebListDescriptionMetadata, _super);\n\n  function WebListDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  WebListDescriptionMetadata.b = function (a) {\n    if (WebListDescriptionMetadata.a == null) {\n      WebListDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      WebListDescriptionMetadata.c(WebListDescriptionMetadata.a);\n    }\n\n    if (a.g(WebListDescriptionMetadata.a)) {\n      return;\n    }\n\n    a.s(WebListDescriptionMetadata.a);\n  };\n\n  WebListDescriptionMetadata.c = function (a) {\n    a.item(\"__qualifiedNameTS\", \"String:List\");\n    a.item(\"Size\", \"ExportedType:string:SizableComponentSize\");\n    a.item(\"Size@names\", \"Large;Small;Medium\");\n    a.item(\"Content\", \"Collection:object:ContentChildCollection:Object\");\n  };\n\n  WebListDescriptionMetadata.d = function (a) {\n    WebListDescriptionMetadata.b(a);\n    a.u(\"WebList\", function () {\n      return new WebListDescription();\n    });\n    a.t(\"WebList\", WebListDescriptionMetadata.a);\n  };\n\n  WebListDescriptionMetadata.$t = markType(WebListDescriptionMetadata, 'WebListDescriptionMetadata');\n  WebListDescriptionMetadata.a = null;\n  return WebListDescriptionMetadata;\n}(Base);\n\nexport { WebListDescriptionMetadata };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/WebListDescriptionMetadata.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,IAAT,EAAe,YAAf,EAAmC,QAAnC,QAAmD,QAAnD;AAEA,SAAS,YAAT,QAA6B,gBAA7B;AACA,SAAS,kBAAT,QAAmC,sBAAnC;AAEA;;AAEG;;AACH,IAAA,0BAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAgD,EAAA,SAAA,CAAA,0BAAA,EAAA,MAAA,CAAA;;AAAhD,WAAA,0BAAA,GAAA;;AAwBC;;AArBe,EAAA,0BAAA,CAAA,CAAA,GAAf,UAAiB,CAAjB,EAA0C;AACzC,QAAI,0BAA0B,CAAC,CAA3B,IAAgC,IAApC,EAA0C;AACzC,MAAA,0BAA0B,CAAC,CAA3B,GAA+B,IAAI,YAAJ,CAAiC,YAAjC,EAA+C,YAA/C,EAA6D,CAA7D,CAA/B;AACA,MAAA,0BAA0B,CAAC,CAA3B,CAA6B,0BAA0B,CAAC,CAAxD;AACA;;AACD,QAAI,CAAC,CAAC,CAAF,CAAI,0BAA0B,CAAC,CAA/B,CAAJ,EAAuC;AACtC;AACA;;AACD,IAAA,CAAC,CAAC,CAAF,CAAI,0BAA0B,CAAC,CAA/B;AACA,GATc;;AAUR,EAAA,0BAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAwC;AACvC,IAAA,CAAC,CAAC,IAAF,CAAO,mBAAP,EAA4B,aAA5B;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,MAAP,EAAe,0CAAf;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,YAAP,EAAqB,oBAArB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,SAAP,EAAkB,iDAAlB;AACA,GALM;;AAMA,EAAA,0BAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAkC;AACjC,IAAA,0BAA0B,CAAC,CAA3B,CAA6B,CAA7B;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,SAAJ,EAAe,YAAA;AAAM,aAAA,IAAA,kBAAA,EAAA;AAAwB,KAA7C;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,SAAJ,EAAe,0BAA0B,CAAC,CAA1C;AACA,GAJM;;AAlBA,EAAA,0BAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,0BAAD,EAA6B,4BAA7B,CAAnB;AACQ,EAAA,0BAAA,CAAA,CAAA,GAAkC,IAAlC;AAsBhB,SAAA,0BAAA;AAAC,CAxBD,CAAgD,IAAhD,CAAA;;SAAa,0B","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { WebListDescription } from \"./WebListDescription\";\n/**\n * @hidden\n */\nvar WebListDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(WebListDescriptionMetadata, _super);\n    function WebListDescriptionMetadata() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    WebListDescriptionMetadata.b = function (a) {\n        if (WebListDescriptionMetadata.a == null) {\n            WebListDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n            WebListDescriptionMetadata.c(WebListDescriptionMetadata.a);\n        }\n        if (a.g(WebListDescriptionMetadata.a)) {\n            return;\n        }\n        a.s(WebListDescriptionMetadata.a);\n    };\n    WebListDescriptionMetadata.c = function (a) {\n        a.item(\"__qualifiedNameTS\", \"String:List\");\n        a.item(\"Size\", \"ExportedType:string:SizableComponentSize\");\n        a.item(\"Size@names\", \"Large;Small;Medium\");\n        a.item(\"Content\", \"Collection:object:ContentChildCollection:Object\");\n    };\n    WebListDescriptionMetadata.d = function (a) {\n        WebListDescriptionMetadata.b(a);\n        a.u(\"WebList\", function () { return new WebListDescription(); });\n        a.t(\"WebList\", WebListDescriptionMetadata.a);\n    };\n    WebListDescriptionMetadata.$t = markType(WebListDescriptionMetadata, 'WebListDescriptionMetadata');\n    WebListDescriptionMetadata.a = null;\n    return WebListDescriptionMetadata;\n}(Base));\nexport { WebListDescriptionMetadata };\n//# sourceMappingURL=WebListDescriptionMetadata.js.map\n"]},"metadata":{},"sourceType":"module"}