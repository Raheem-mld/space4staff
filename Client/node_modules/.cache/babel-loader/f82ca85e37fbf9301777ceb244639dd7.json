{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { IgrAxis } from \"./igr-axis\";\nimport { IgrAnnotationLayer } from \"./igr-annotation-layer\";\nimport { CategoryToolTipLayer } from \"./CategoryToolTipLayer\";\nimport { ensureBool } from \"igniteui-react-core\";\n/**\n * Represents an annotation layer that displays grouped tooltips for series that use a category axis.\n*/\n\nvar IgrCategoryToolTipLayer =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(IgrCategoryToolTipLayer, _super);\n\n  function IgrCategoryToolTipLayer(props) {\n    return _super.call(this, props) || this;\n  }\n\n  IgrCategoryToolTipLayer.prototype.createImplementation = function () {\n    return new CategoryToolTipLayer();\n  };\n\n  Object.defineProperty(IgrCategoryToolTipLayer.prototype, \"i\", {\n    /**\n                                 * @hidden\n                                 */\n    get: function () {\n      return this._implementation;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrCategoryToolTipLayer.prototype, \"isAnnotationHoverLayer\", {\n    /**\n     * Gets whether the series is an annotation layer displayed only when hovering over the chart.\n    */\n    get: function () {\n      return this.i.c5;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrCategoryToolTipLayer.prototype, \"isDefaultTooltipBehaviorDisabled\", {\n    /**\n     * Gets whether the default tooltip behaviors for the chart are disabled if this layer is present.\n    */\n    get: function () {\n      return this.i.de;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrCategoryToolTipLayer.prototype, \"targetAxis\", {\n    /**\n     * Gets or sets the Axis to target this annotation to. If null, this annotation layer will not render content.\n    */\n    get: function () {\n      if (this.i.qm == null) {\n        return null;\n      }\n\n      if (!this.i.qm.externalObject) {\n        var e = IgrAxis._createFromInternal(this.i.qm);\n\n        if (e) {\n          e._implementation = this.i.qm;\n        }\n\n        this.i.qm.externalObject = e;\n      }\n\n      return this.i.qm.externalObject;\n    },\n    set: function (v) {\n      if (v != null && this._stylingContainer && v._styling) v._styling(this._stylingContainer, this, this);\n      v == null ? this.i.qm = null : this.i.qm = v.i;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrCategoryToolTipLayer.prototype, \"useInterpolation\", {\n    /**\n     * Gets or sets whether to use value interpolation when drawing the tooltips.\n    */\n    get: function () {\n      return this.i.qq;\n    },\n    set: function (v) {\n      this.i.qq = ensureBool(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  IgrCategoryToolTipLayer.prototype.findByName = function (name) {\n    var baseResult = _super.prototype.findByName.call(this, name);\n\n    if (baseResult) {\n      return baseResult;\n    }\n\n    if (this.targetAxis && this.targetAxis.name && this.targetAxis.name == name) {\n      return this.targetAxis;\n    }\n\n    return null;\n  };\n\n  IgrCategoryToolTipLayer.prototype._styling = function (container, component, parent) {\n    _super.prototype._styling.call(this, container, component, parent);\n\n    this._inStyling = true;\n\n    if (this.targetAxis && this.targetAxis._styling) {\n      this.targetAxis._styling(container, component, this);\n    }\n\n    this._inStyling = false;\n  };\n  /**\n   * Hides any tooltips presented by the layer, if any.\n  \r\n  */\n\n\n  IgrCategoryToolTipLayer.prototype.hideToolTips = function () {\n    this.i.kx();\n  };\n\n  return IgrCategoryToolTipLayer;\n}(IgrAnnotationLayer);\n\nexport { IgrCategoryToolTipLayer };","map":{"version":3,"sources":["../../../../src/igniteui-charts/lib/igr-category-tool-tip-layer.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __extends } from \"tslib\";\nimport { IgrAxis } from \"./igr-axis\";\nimport { IgrAnnotationLayer } from \"./igr-annotation-layer\";\nimport { CategoryToolTipLayer } from \"./CategoryToolTipLayer\";\nimport { ensureBool } from \"igniteui-react-core\";\n/**\n * Represents an annotation layer that displays grouped tooltips for series that use a category axis.\n*/\nvar IgrCategoryToolTipLayer = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(IgrCategoryToolTipLayer, _super);\n    function IgrCategoryToolTipLayer(props) {\n        return _super.call(this, props) || this;\n    }\n    IgrCategoryToolTipLayer.prototype.createImplementation = function () {\n        return new CategoryToolTipLayer();\n    };\n    Object.defineProperty(IgrCategoryToolTipLayer.prototype, \"i\", {\n        /**\n                                     * @hidden\n                                     */\n        get: function () {\n            return this._implementation;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrCategoryToolTipLayer.prototype, \"isAnnotationHoverLayer\", {\n        /**\n         * Gets whether the series is an annotation layer displayed only when hovering over the chart.\n        */\n        get: function () {\n            return this.i.c5;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrCategoryToolTipLayer.prototype, \"isDefaultTooltipBehaviorDisabled\", {\n        /**\n         * Gets whether the default tooltip behaviors for the chart are disabled if this layer is present.\n        */\n        get: function () {\n            return this.i.de;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrCategoryToolTipLayer.prototype, \"targetAxis\", {\n        /**\n         * Gets or sets the Axis to target this annotation to. If null, this annotation layer will not render content.\n        */\n        get: function () {\n            if (this.i.qm == null) {\n                return null;\n            }\n            if (!this.i.qm.externalObject) {\n                var e = IgrAxis._createFromInternal(this.i.qm);\n                if (e) {\n                    e._implementation = this.i.qm;\n                }\n                this.i.qm.externalObject = e;\n            }\n            return this.i.qm.externalObject;\n        },\n        set: function (v) {\n            if (v != null && this._stylingContainer && v._styling)\n                v._styling(this._stylingContainer, this, this);\n            v == null ? this.i.qm = null : this.i.qm = v.i;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrCategoryToolTipLayer.prototype, \"useInterpolation\", {\n        /**\n         * Gets or sets whether to use value interpolation when drawing the tooltips.\n        */\n        get: function () {\n            return this.i.qq;\n        },\n        set: function (v) {\n            this.i.qq = ensureBool(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    IgrCategoryToolTipLayer.prototype.findByName = function (name) {\n        var baseResult = _super.prototype.findByName.call(this, name);\n        if (baseResult) {\n            return baseResult;\n        }\n        if (this.targetAxis && this.targetAxis.name && this.targetAxis.name == name) {\n            return this.targetAxis;\n        }\n        return null;\n    };\n    IgrCategoryToolTipLayer.prototype._styling = function (container, component, parent) {\n        _super.prototype._styling.call(this, container, component, parent);\n        this._inStyling = true;\n        if (this.targetAxis && this.targetAxis._styling) {\n            this.targetAxis._styling(container, component, this);\n        }\n        this._inStyling = false;\n    };\n    /**\n     * Hides any tooltips presented by the layer, if any.\n    \r\n    */\n    IgrCategoryToolTipLayer.prototype.hideToolTips = function () {\n        this.i.kx();\n    };\n    return IgrCategoryToolTipLayer;\n}(IgrAnnotationLayer));\nexport { IgrCategoryToolTipLayer };\n//# sourceMappingURL=igr-category-tool-tip-layer.js.map\n"]},"metadata":{},"sourceType":"module"}