{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends, __values } from \"tslib\";\nimport { DependencyObject } from \"igniteui-react-core\";\nimport { INotifyPropertyChanged_$type, PropertyChangedEventArgs, runOn, delegateCombine, fromEnum, typeCast, delegateRemove, markType } from \"igniteui-react-core\";\nimport { BrushCollection } from \"igniteui-react-core\";\nimport { List$1 } from \"igniteui-react-core\";\nimport { Series } from \"./Series\";\nimport { PropertyUpdatedEventArgs } from \"igniteui-react-core\";\nimport { ISupportsFillScale_$type } from \"./ISupportsFillScale\";\nimport { BrushCollectionUtil } from \"igniteui-react-core\";\nimport { isNaN_, isInfinity } from \"igniteui-react-core\";\n/**\n * @hidden\n */\n\nvar BrushScale =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(BrushScale, _super);\n\n  function BrushScale() {\n    var _this = _super.call(this) || this;\n\n    _this.j = null;\n    _this.o = null;\n    _this.propertyChanged = null;\n    _this.propertyUpdated = null;\n    _this.q = 0;\n    _this.p = 0;\n    _this.o = new List$1(Series.$, 0);\n    _this.brushes = new BrushCollection();\n    var a = _this.brushes;\n    a.collectionChanged = delegateCombine(a.collectionChanged, runOn(_this, _this.r));\n    _this.propertyUpdated = delegateCombine(_this.propertyUpdated, function (b, c) {\n      return _this.u(b, c.propertyName, c.oldValue, c.newValue);\n    });\n    return _this;\n  }\n\n  BrushScale.prototype.r = function (a, b) {\n    var e_1, _a;\n\n    try {\n      for (var _b = __values(fromEnum(this.o)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var c = _c.value;\n        c.l0(false);\n        c.k0();\n        c.k7();\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n  };\n\n  BrushScale.prototype.s = function () {\n    var e_2, _a;\n\n    if (isNaN_(this.q) || isNaN_(this.p)) {\n      try {\n        for (var _b = __values(fromEnum(this.o)), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var a = _c.value;\n\n          if (typeCast(ISupportsFillScale_$type, a) !== null) {\n            a.updateFillScaleGlobals();\n          }\n        }\n      } catch (e_2_1) {\n        e_2 = {\n          error: e_2_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_2) throw e_2.error;\n        }\n      }\n    }\n  };\n\n  Object.defineProperty(BrushScale.prototype, \"brushes\", {\n    get: function () {\n      return this.j;\n    },\n    set: function (a) {\n      var b = this.j;\n\n      if (this.j != null) {\n        var c = this.j;\n        c.collectionChanged = delegateRemove(c.collectionChanged, runOn(this, this.r));\n      }\n\n      this.j = a;\n\n      if (this.j != null) {\n        var d = this.j;\n        d.collectionChanged = delegateCombine(d.collectionChanged, runOn(this, this.r));\n      }\n\n      this.notifySeries();\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  BrushScale.prototype.registerSeries = function (a) {\n    var b = this.o.contains(a);\n\n    if (!b) {\n      this.o.add(a);\n    }\n  };\n\n  BrushScale.prototype.unregisterSeries = function (a) {\n    var b = this.o.contains(a);\n\n    if (b) {\n      this.o.remove(a);\n    }\n  };\n\n  BrushScale.prototype.getBrush = function (a) {\n    if (this.brushes == null || a < 0 || a >= this.brushes.count) {\n      return null;\n    }\n\n    return this.brushes.item(a);\n  };\n\n  BrushScale.prototype.get_isReady = function () {\n    return true;\n  };\n\n  Object.defineProperty(BrushScale.prototype, \"isReady\", {\n    get: function () {\n      return this.get_isReady();\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  BrushScale.prototype.ab = function (a) {\n    if (this.brushes == null || this.brushes.count == 0 || a < 0) {\n      return null;\n    }\n\n    return BrushCollectionUtil.b(this.brushes, a);\n  };\n\n  BrushScale.prototype.v = function (a, b, c) {\n    if (this.propertyChanged != null) {\n      this.propertyChanged(this, new PropertyChangedEventArgs(a));\n    }\n\n    if (this.propertyUpdated != null) {\n      this.propertyUpdated(this, new PropertyUpdatedEventArgs(a, b, c));\n    }\n  };\n\n  BrushScale.prototype.u = function (a, b, c, d) {\n    this.notifySeries();\n  };\n\n  BrushScale.prototype.notifySeries = function () {\n    var e_3, _a;\n\n    try {\n      for (var _b = __values(fromEnum(this.o)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var a = _c.value;\n        a.k2();\n        a.l0(false);\n        a.k0();\n        a.k7();\n      }\n    } catch (e_3_1) {\n      e_3 = {\n        error: e_3_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_3) throw e_3.error;\n      }\n    }\n  };\n\n  BrushScale.prototype.z = function (a, b) {\n    if (!isNaN_(a) && !isInfinity(a)) {\n      if (isNaN_(this.q)) {\n        this.q = a;\n      } else {\n        this.q = Math.min(a, this.q);\n      }\n    }\n\n    if (!isNaN_(b) && !isInfinity(b)) {\n      if (isNaN_(this.p)) {\n        this.p = b;\n      } else {\n        this.p = Math.max(b, this.p);\n      }\n    }\n  };\n\n  BrushScale.prototype.x = function () {\n    this.q = NaN;\n    this.p = NaN;\n  };\n\n  BrushScale.prototype.get_isBrushScale = function () {\n    return true;\n  };\n\n  Object.defineProperty(BrushScale.prototype, \"isBrushScale\", {\n    get: function () {\n      return this.get_isBrushScale();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  BrushScale.$t = markType(BrushScale, 'BrushScale', DependencyObject.$, [INotifyPropertyChanged_$type]);\n  return BrushScale;\n}(DependencyObject);\n\nexport { BrushScale };","map":{"version":3,"sources":["../../../../src/igniteui-charts/lib/BrushScale.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends, __values } from \"tslib\";\nimport { DependencyObject } from \"igniteui-react-core\";\nimport { INotifyPropertyChanged_$type, PropertyChangedEventArgs, runOn, delegateCombine, fromEnum, typeCast, delegateRemove, markType } from \"igniteui-react-core\";\nimport { BrushCollection } from \"igniteui-react-core\";\nimport { List$1 } from \"igniteui-react-core\";\nimport { Series } from \"./Series\";\nimport { PropertyUpdatedEventArgs } from \"igniteui-react-core\";\nimport { ISupportsFillScale_$type } from \"./ISupportsFillScale\";\nimport { BrushCollectionUtil } from \"igniteui-react-core\";\nimport { isNaN_, isInfinity } from \"igniteui-react-core\";\n/**\n * @hidden\n */\nvar BrushScale = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(BrushScale, _super);\n    function BrushScale() {\n        var _this = _super.call(this) || this;\n        _this.j = null;\n        _this.o = null;\n        _this.propertyChanged = null;\n        _this.propertyUpdated = null;\n        _this.q = 0;\n        _this.p = 0;\n        _this.o = new List$1(Series.$, 0);\n        _this.brushes = new BrushCollection();\n        var a = _this.brushes;\n        a.collectionChanged = delegateCombine(a.collectionChanged, runOn(_this, _this.r));\n        _this.propertyUpdated = delegateCombine(_this.propertyUpdated, function (b, c) { return _this.u(b, c.propertyName, c.oldValue, c.newValue); });\n        return _this;\n    }\n    BrushScale.prototype.r = function (a, b) {\n        var e_1, _a;\n        try {\n            for (var _b = __values(fromEnum(this.o)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var c = _c.value;\n                c.l0(false);\n                c.k0();\n                c.k7();\n            }\n        }\n        catch (e_1_1) {\n            e_1 = { error: e_1_1 };\n        }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return))\n                    _a.call(_b);\n            }\n            finally {\n                if (e_1)\n                    throw e_1.error;\n            }\n        }\n    };\n    BrushScale.prototype.s = function () {\n        var e_2, _a;\n        if (isNaN_(this.q) || isNaN_(this.p)) {\n            try {\n                for (var _b = __values(fromEnum(this.o)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var a = _c.value;\n                    if (typeCast(ISupportsFillScale_$type, a) !== null) {\n                        a.updateFillScaleGlobals();\n                    }\n                }\n            }\n            catch (e_2_1) {\n                e_2 = { error: e_2_1 };\n            }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return))\n                        _a.call(_b);\n                }\n                finally {\n                    if (e_2)\n                        throw e_2.error;\n                }\n            }\n        }\n    };\n    Object.defineProperty(BrushScale.prototype, \"brushes\", {\n        get: function () {\n            return this.j;\n        },\n        set: function (a) {\n            var b = this.j;\n            if (this.j != null) {\n                var c = this.j;\n                c.collectionChanged = delegateRemove(c.collectionChanged, runOn(this, this.r));\n            }\n            this.j = a;\n            if (this.j != null) {\n                var d = this.j;\n                d.collectionChanged = delegateCombine(d.collectionChanged, runOn(this, this.r));\n            }\n            this.notifySeries();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    BrushScale.prototype.registerSeries = function (a) {\n        var b = this.o.contains(a);\n        if (!b) {\n            this.o.add(a);\n        }\n    };\n    BrushScale.prototype.unregisterSeries = function (a) {\n        var b = this.o.contains(a);\n        if (b) {\n            this.o.remove(a);\n        }\n    };\n    BrushScale.prototype.getBrush = function (a) {\n        if (this.brushes == null || a < 0 || a >= this.brushes.count) {\n            return null;\n        }\n        return this.brushes.item(a);\n    };\n    BrushScale.prototype.get_isReady = function () {\n        return true;\n    };\n    Object.defineProperty(BrushScale.prototype, \"isReady\", {\n        get: function () {\n            return this.get_isReady();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    BrushScale.prototype.ab = function (a) {\n        if (this.brushes == null || this.brushes.count == 0 || a < 0) {\n            return null;\n        }\n        return BrushCollectionUtil.b(this.brushes, a);\n    };\n    BrushScale.prototype.v = function (a, b, c) {\n        if (this.propertyChanged != null) {\n            this.propertyChanged(this, new PropertyChangedEventArgs(a));\n        }\n        if (this.propertyUpdated != null) {\n            this.propertyUpdated(this, new PropertyUpdatedEventArgs(a, b, c));\n        }\n    };\n    BrushScale.prototype.u = function (a, b, c, d) {\n        this.notifySeries();\n    };\n    BrushScale.prototype.notifySeries = function () {\n        var e_3, _a;\n        try {\n            for (var _b = __values(fromEnum(this.o)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var a = _c.value;\n                a.k2();\n                a.l0(false);\n                a.k0();\n                a.k7();\n            }\n        }\n        catch (e_3_1) {\n            e_3 = { error: e_3_1 };\n        }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return))\n                    _a.call(_b);\n            }\n            finally {\n                if (e_3)\n                    throw e_3.error;\n            }\n        }\n    };\n    BrushScale.prototype.z = function (a, b) {\n        if (!isNaN_(a) && !isInfinity(a)) {\n            if (isNaN_(this.q)) {\n                this.q = a;\n            }\n            else {\n                this.q = Math.min(a, this.q);\n            }\n        }\n        if (!isNaN_(b) && !isInfinity(b)) {\n            if (isNaN_(this.p)) {\n                this.p = b;\n            }\n            else {\n                this.p = Math.max(b, this.p);\n            }\n        }\n    };\n    BrushScale.prototype.x = function () {\n        this.q = NaN;\n        this.p = NaN;\n    };\n    BrushScale.prototype.get_isBrushScale = function () {\n        return true;\n    };\n    Object.defineProperty(BrushScale.prototype, \"isBrushScale\", {\n        get: function () {\n            return this.get_isBrushScale();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    BrushScale.$t = markType(BrushScale, 'BrushScale', DependencyObject.$, [INotifyPropertyChanged_$type]);\n    return BrushScale;\n}(DependencyObject));\nexport { BrushScale };\n//# sourceMappingURL=BrushScale.js.map\n"]},"metadata":{},"sourceType":"module"}