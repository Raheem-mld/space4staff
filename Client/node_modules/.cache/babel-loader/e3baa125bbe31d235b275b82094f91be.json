{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { StyleDescriptionMetadata } from \"./StyleDescriptionMetadata\";\nimport { ShapeSeriesBaseDescriptionMetadata } from \"./ShapeSeriesBaseDescriptionMetadata\";\nimport { ScatterPolygonSeriesDescription } from \"./ScatterPolygonSeriesDescription\";\n/**\n * @hidden\n */\n\nvar ScatterPolygonSeriesDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(ScatterPolygonSeriesDescriptionMetadata, _super);\n\n  function ScatterPolygonSeriesDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  ScatterPolygonSeriesDescriptionMetadata.b = function (a) {\n    if (ScatterPolygonSeriesDescriptionMetadata.a == null) {\n      ScatterPolygonSeriesDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      ScatterPolygonSeriesDescriptionMetadata.c(ScatterPolygonSeriesDescriptionMetadata.a);\n    }\n\n    if (a.g(ScatterPolygonSeriesDescriptionMetadata.a)) {\n      return;\n    }\n\n    a.s(ScatterPolygonSeriesDescriptionMetadata.a);\n    StyleDescriptionMetadata.d(a);\n  };\n\n  ScatterPolygonSeriesDescriptionMetadata.c = function (a) {\n    ShapeSeriesBaseDescriptionMetadata.c(a);\n    a.item(\"ShapeStyle\", \"ExportedType:Style\");\n    a.item(\"MarkerType\", \"ExportedType:string:MarkerType\");\n    a.item(\"MarkerType@names\", \"Unset;None;Automatic;Circle;Triangle;Pyramid;Square;Diamond;Pentagon;Hexagon;Tetragram;Pentagram;Hexagram;Hidden\");\n    a.item(\"MarkerTemplateRef\", \"(w:MarkerTemplate,wf:MarkerTemplate)DataRef::object\");\n    a.item(\"MarkerThickness\", \"Number:double\");\n    a.item(\"ActualMarkerTemplateRef\", \"(w:ActualMarkerTemplate,wf:ActualMarkerTemplate)DataRef::object\");\n    a.item(\"MarkerBrush\", \"Brush\");\n    a.item(\"ActualMarkerBrush\", \"Brush\");\n    a.item(\"MarkerOutline\", \"Brush\");\n    a.item(\"ActualMarkerOutline\", \"Brush\");\n    a.item(\"MarkerCollisionAvoidance\", \"ExportedType:string:CollisionAvoidanceType\");\n    a.item(\"MarkerCollisionAvoidance@names\", \"None;Omit;Fade;OmitAndShift;FadeAndShift\");\n    a.item(\"MarkerOutlineMode\", \"ExportedType:string:MarkerOutlineMode\");\n    a.item(\"MarkerOutlineMode@names\", \"Auto;Normal;MatchMarkerBrush\");\n    a.item(\"MarkerFillMode\", \"ExportedType:string:MarkerFillMode\");\n    a.item(\"MarkerFillMode@names\", \"Auto;Normal;MatchMarkerOutline\");\n  };\n\n  ScatterPolygonSeriesDescriptionMetadata.d = function (a) {\n    ScatterPolygonSeriesDescriptionMetadata.b(a);\n    a.u(\"ScatterPolygonSeries\", function () {\n      return new ScatterPolygonSeriesDescription();\n    });\n    a.t(\"ScatterPolygonSeries\", ScatterPolygonSeriesDescriptionMetadata.a);\n  };\n\n  ScatterPolygonSeriesDescriptionMetadata.$t = markType(ScatterPolygonSeriesDescriptionMetadata, 'ScatterPolygonSeriesDescriptionMetadata');\n  ScatterPolygonSeriesDescriptionMetadata.a = null;\n  return ScatterPolygonSeriesDescriptionMetadata;\n}(Base);\n\nexport { ScatterPolygonSeriesDescriptionMetadata };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/ScatterPolygonSeriesDescriptionMetadata.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { StyleDescriptionMetadata } from \"./StyleDescriptionMetadata\";\nimport { ShapeSeriesBaseDescriptionMetadata } from \"./ShapeSeriesBaseDescriptionMetadata\";\nimport { ScatterPolygonSeriesDescription } from \"./ScatterPolygonSeriesDescription\";\n/**\n * @hidden\n */\nvar ScatterPolygonSeriesDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(ScatterPolygonSeriesDescriptionMetadata, _super);\n    function ScatterPolygonSeriesDescriptionMetadata() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ScatterPolygonSeriesDescriptionMetadata.b = function (a) {\n        if (ScatterPolygonSeriesDescriptionMetadata.a == null) {\n            ScatterPolygonSeriesDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n            ScatterPolygonSeriesDescriptionMetadata.c(ScatterPolygonSeriesDescriptionMetadata.a);\n        }\n        if (a.g(ScatterPolygonSeriesDescriptionMetadata.a)) {\n            return;\n        }\n        a.s(ScatterPolygonSeriesDescriptionMetadata.a);\n        StyleDescriptionMetadata.d(a);\n    };\n    ScatterPolygonSeriesDescriptionMetadata.c = function (a) {\n        ShapeSeriesBaseDescriptionMetadata.c(a);\n        a.item(\"ShapeStyle\", \"ExportedType:Style\");\n        a.item(\"MarkerType\", \"ExportedType:string:MarkerType\");\n        a.item(\"MarkerType@names\", \"Unset;None;Automatic;Circle;Triangle;Pyramid;Square;Diamond;Pentagon;Hexagon;Tetragram;Pentagram;Hexagram;Hidden\");\n        a.item(\"MarkerTemplateRef\", \"(w:MarkerTemplate,wf:MarkerTemplate)DataRef::object\");\n        a.item(\"MarkerThickness\", \"Number:double\");\n        a.item(\"ActualMarkerTemplateRef\", \"(w:ActualMarkerTemplate,wf:ActualMarkerTemplate)DataRef::object\");\n        a.item(\"MarkerBrush\", \"Brush\");\n        a.item(\"ActualMarkerBrush\", \"Brush\");\n        a.item(\"MarkerOutline\", \"Brush\");\n        a.item(\"ActualMarkerOutline\", \"Brush\");\n        a.item(\"MarkerCollisionAvoidance\", \"ExportedType:string:CollisionAvoidanceType\");\n        a.item(\"MarkerCollisionAvoidance@names\", \"None;Omit;Fade;OmitAndShift;FadeAndShift\");\n        a.item(\"MarkerOutlineMode\", \"ExportedType:string:MarkerOutlineMode\");\n        a.item(\"MarkerOutlineMode@names\", \"Auto;Normal;MatchMarkerBrush\");\n        a.item(\"MarkerFillMode\", \"ExportedType:string:MarkerFillMode\");\n        a.item(\"MarkerFillMode@names\", \"Auto;Normal;MatchMarkerOutline\");\n    };\n    ScatterPolygonSeriesDescriptionMetadata.d = function (a) {\n        ScatterPolygonSeriesDescriptionMetadata.b(a);\n        a.u(\"ScatterPolygonSeries\", function () { return new ScatterPolygonSeriesDescription(); });\n        a.t(\"ScatterPolygonSeries\", ScatterPolygonSeriesDescriptionMetadata.a);\n    };\n    ScatterPolygonSeriesDescriptionMetadata.$t = markType(ScatterPolygonSeriesDescriptionMetadata, 'ScatterPolygonSeriesDescriptionMetadata');\n    ScatterPolygonSeriesDescriptionMetadata.a = null;\n    return ScatterPolygonSeriesDescriptionMetadata;\n}(Base));\nexport { ScatterPolygonSeriesDescriptionMetadata };\n//# sourceMappingURL=ScatterPolygonSeriesDescriptionMetadata.js.map\n"]},"metadata":{},"sourceType":"module"}