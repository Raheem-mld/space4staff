{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { TemplateCellUpdatingEventArgsDescriptionMetadata } from \"./TemplateCellUpdatingEventArgsDescriptionMetadata\";\nimport { ColumnDescriptionMetadata } from \"./ColumnDescriptionMetadata\";\nimport { TemplateColumnDescription } from \"./TemplateColumnDescription\";\n/**\n * @hidden\n */\n\nvar TemplateColumnDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(TemplateColumnDescriptionMetadata, _super);\n\n  function TemplateColumnDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  TemplateColumnDescriptionMetadata.e = function (a) {\n    a.item(\"TemplateRef\", \"(w:Template,wf:Template,xam:Template)DataRef:String\");\n  };\n\n  TemplateColumnDescriptionMetadata.b = function (a) {\n    if (TemplateColumnDescriptionMetadata.a == null) {\n      TemplateColumnDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      TemplateColumnDescriptionMetadata.c(TemplateColumnDescriptionMetadata.a);\n    }\n\n    if (a.g(TemplateColumnDescriptionMetadata.a)) {\n      return;\n    }\n\n    a.s(TemplateColumnDescriptionMetadata.a);\n    TemplateCellUpdatingEventArgsDescriptionMetadata.d(a);\n  };\n\n  TemplateColumnDescriptionMetadata.c = function (a) {\n    ColumnDescriptionMetadata.c(a);\n    a.item(\"CellUpdatingRef\", \"EventRef::cellUpdating\");\n    TemplateColumnDescriptionMetadata.e(a);\n  };\n\n  TemplateColumnDescriptionMetadata.d = function (a) {\n    TemplateColumnDescriptionMetadata.b(a);\n    a.u(\"TemplateColumn\", function () {\n      return new TemplateColumnDescription();\n    });\n    a.t(\"TemplateColumn\", TemplateColumnDescriptionMetadata.a);\n  };\n\n  TemplateColumnDescriptionMetadata.$t = markType(TemplateColumnDescriptionMetadata, 'TemplateColumnDescriptionMetadata');\n  TemplateColumnDescriptionMetadata.a = null;\n  return TemplateColumnDescriptionMetadata;\n}(Base);\n\nexport { TemplateColumnDescriptionMetadata };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/TemplateColumnDescriptionMetadata.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,IAAT,EAAe,YAAf,EAAmC,QAAnC,QAAmD,QAAnD;AACA,SAAS,YAAT,QAA6B,gBAA7B;AAEA,SAAS,gDAAT,QAAiE,oDAAjE;AACA,SAAS,yBAAT,QAA0C,6BAA1C;AACA,SAAS,yBAAT,QAA0C,6BAA1C;AAEA;;AAEG;;AACH,IAAA,iCAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAuD,EAAA,SAAA,CAAA,iCAAA,EAAA,MAAA,CAAA;;AAAvD,WAAA,iCAAA,GAAA;;AA2BC;;AAzBe,EAAA,iCAAA,CAAA,CAAA,GAAf,UAAiB,CAAjB,EAAgD;AAC/C,IAAA,CAAC,CAAC,IAAF,CAAO,aAAP,EAAsB,qDAAtB;AACA,GAFc;;AAIA,EAAA,iCAAA,CAAA,CAAA,GAAf,UAAiB,CAAjB,EAA0C;AACzC,QAAI,iCAAiC,CAAC,CAAlC,IAAuC,IAA3C,EAAiD;AAChD,MAAA,iCAAiC,CAAC,CAAlC,GAAsC,IAAI,YAAJ,CAAiC,YAAjC,EAA+C,YAA/C,EAA6D,CAA7D,CAAtC;AACA,MAAA,iCAAiC,CAAC,CAAlC,CAAoC,iCAAiC,CAAC,CAAtE;AACA;;AACD,QAAI,CAAC,CAAC,CAAF,CAAI,iCAAiC,CAAC,CAAtC,CAAJ,EAA8C;AAC7C;AACA;;AACD,IAAA,CAAC,CAAC,CAAF,CAAI,iCAAiC,CAAC,CAAtC;AACA,IAAA,gDAAgD,CAAC,CAAjD,CAAmD,CAAnD;AACA,GAVc;;AAWR,EAAA,iCAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAwC;AACvC,IAAA,yBAAyB,CAAC,CAA1B,CAA4B,CAA5B;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,iBAAP,EAA0B,wBAA1B;AACA,IAAA,iCAAiC,CAAC,CAAlC,CAAoC,CAApC;AACA,GAJM;;AAKA,EAAA,iCAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAkC;AACjC,IAAA,iCAAiC,CAAC,CAAlC,CAAoC,CAApC;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,gBAAJ,EAAsB,YAAA;AAAM,aAAA,IAAA,yBAAA,EAAA;AAA+B,KAA3D;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,gBAAJ,EAAsB,iCAAiC,CAAC,CAAxD;AACA,GAJM;;AArBA,EAAA,iCAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,iCAAD,EAAoC,mCAApC,CAAnB;AAIQ,EAAA,iCAAA,CAAA,CAAA,GAAkC,IAAlC;AAsBhB,SAAA,iCAAA;AAAC,CA3BD,CAAuD,IAAvD,CAAA;;SAAa,iC","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { TemplateCellUpdatingEventArgsDescriptionMetadata } from \"./TemplateCellUpdatingEventArgsDescriptionMetadata\";\nimport { ColumnDescriptionMetadata } from \"./ColumnDescriptionMetadata\";\nimport { TemplateColumnDescription } from \"./TemplateColumnDescription\";\n/**\n * @hidden\n */\nvar TemplateColumnDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(TemplateColumnDescriptionMetadata, _super);\n    function TemplateColumnDescriptionMetadata() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    TemplateColumnDescriptionMetadata.e = function (a) {\n        a.item(\"TemplateRef\", \"(w:Template,wf:Template,xam:Template)DataRef:String\");\n    };\n    TemplateColumnDescriptionMetadata.b = function (a) {\n        if (TemplateColumnDescriptionMetadata.a == null) {\n            TemplateColumnDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n            TemplateColumnDescriptionMetadata.c(TemplateColumnDescriptionMetadata.a);\n        }\n        if (a.g(TemplateColumnDescriptionMetadata.a)) {\n            return;\n        }\n        a.s(TemplateColumnDescriptionMetadata.a);\n        TemplateCellUpdatingEventArgsDescriptionMetadata.d(a);\n    };\n    TemplateColumnDescriptionMetadata.c = function (a) {\n        ColumnDescriptionMetadata.c(a);\n        a.item(\"CellUpdatingRef\", \"EventRef::cellUpdating\");\n        TemplateColumnDescriptionMetadata.e(a);\n    };\n    TemplateColumnDescriptionMetadata.d = function (a) {\n        TemplateColumnDescriptionMetadata.b(a);\n        a.u(\"TemplateColumn\", function () { return new TemplateColumnDescription(); });\n        a.t(\"TemplateColumn\", TemplateColumnDescriptionMetadata.a);\n    };\n    TemplateColumnDescriptionMetadata.$t = markType(TemplateColumnDescriptionMetadata, 'TemplateColumnDescriptionMetadata');\n    TemplateColumnDescriptionMetadata.a = null;\n    return TemplateColumnDescriptionMetadata;\n}(Base));\nexport { TemplateColumnDescriptionMetadata };\n//# sourceMappingURL=TemplateColumnDescriptionMetadata.js.map\n"]},"metadata":{},"sourceType":"module"}