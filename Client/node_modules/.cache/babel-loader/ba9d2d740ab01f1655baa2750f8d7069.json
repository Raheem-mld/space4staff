{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { PieChartBaseDescriptionMetadata } from \"./PieChartBaseDescriptionMetadata\";\nimport { PieChartDescription } from \"./PieChartDescription\";\n/**\n * @hidden\n */\n\nvar PieChartDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(PieChartDescriptionMetadata, _super);\n\n  function PieChartDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  PieChartDescriptionMetadata.e = function (a) {\n    a.item(\"_qualifiedName\", \"String:Infragistics.Controls.Charts.XamPieChart\");\n    a.item(\"Width\", \"(w:Width/DimensionTransform,xam:Width/DimensionTransform)String\");\n    a.item(\"Height\", \"(w:Height/DimensionTransform,xam:Height/DimensionTransform)String\");\n    a.item(\"Background\", \"(wf:BackColor/ColorTransform)Brush\");\n  };\n\n  PieChartDescriptionMetadata.b = function (a) {\n    if (PieChartDescriptionMetadata.a == null) {\n      PieChartDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      PieChartDescriptionMetadata.c(PieChartDescriptionMetadata.a);\n    }\n\n    if (a.g(PieChartDescriptionMetadata.a)) {\n      return;\n    }\n\n    a.s(PieChartDescriptionMetadata.a);\n  };\n\n  PieChartDescriptionMetadata.c = function (a) {\n    PieChartBaseDescriptionMetadata.c(a);\n    PieChartDescriptionMetadata.e(a);\n  };\n\n  PieChartDescriptionMetadata.d = function (a) {\n    PieChartDescriptionMetadata.b(a);\n    a.u(\"PieChart\", function () {\n      return new PieChartDescription();\n    });\n    a.t(\"PieChart\", PieChartDescriptionMetadata.a);\n  };\n\n  PieChartDescriptionMetadata.$t = markType(PieChartDescriptionMetadata, 'PieChartDescriptionMetadata');\n  PieChartDescriptionMetadata.a = null;\n  return PieChartDescriptionMetadata;\n}(Base);\n\nexport { PieChartDescriptionMetadata };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/PieChartDescriptionMetadata.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,IAAT,EAAe,YAAf,EAAmC,QAAnC,QAAmD,QAAnD;AACA,SAAS,YAAT,QAA6B,gBAA7B;AAEA,SAAS,+BAAT,QAAgD,mCAAhD;AACA,SAAS,mBAAT,QAAoC,uBAApC;AAEA;;AAEG;;AACH,IAAA,2BAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAiD,EAAA,SAAA,CAAA,2BAAA,EAAA,MAAA,CAAA;;AAAjD,WAAA,2BAAA,GAAA;;AA4BC;;AA1Be,EAAA,2BAAA,CAAA,CAAA,GAAf,UAAiB,CAAjB,EAAgD;AAC/C,IAAA,CAAC,CAAC,IAAF,CAAO,gBAAP,EAAyB,iDAAzB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,OAAP,EAAgB,iEAAhB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,QAAP,EAAiB,mEAAjB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,YAAP,EAAqB,oCAArB;AACA,GALc;;AAOA,EAAA,2BAAA,CAAA,CAAA,GAAf,UAAiB,CAAjB,EAA0C;AACzC,QAAI,2BAA2B,CAAC,CAA5B,IAAiC,IAArC,EAA2C;AAC1C,MAAA,2BAA2B,CAAC,CAA5B,GAAgC,IAAI,YAAJ,CAAiC,YAAjC,EAA+C,YAA/C,EAA6D,CAA7D,CAAhC;AACA,MAAA,2BAA2B,CAAC,CAA5B,CAA8B,2BAA2B,CAAC,CAA1D;AACA;;AACD,QAAI,CAAC,CAAC,CAAF,CAAI,2BAA2B,CAAC,CAAhC,CAAJ,EAAwC;AACvC;AACA;;AACD,IAAA,CAAC,CAAC,CAAF,CAAI,2BAA2B,CAAC,CAAhC;AACA,GATc;;AAUR,EAAA,2BAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAwC;AACvC,IAAA,+BAA+B,CAAC,CAAhC,CAAkC,CAAlC;AACA,IAAA,2BAA2B,CAAC,CAA5B,CAA8B,CAA9B;AACA,GAHM;;AAIA,EAAA,2BAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAkC;AACjC,IAAA,2BAA2B,CAAC,CAA5B,CAA8B,CAA9B;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,UAAJ,EAAgB,YAAA;AAAM,aAAA,IAAA,mBAAA,EAAA;AAAyB,KAA/C;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,UAAJ,EAAgB,2BAA2B,CAAC,CAA5C;AACA,GAJM;;AAtBA,EAAA,2BAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,2BAAD,EAA8B,6BAA9B,CAAnB;AAOQ,EAAA,2BAAA,CAAA,CAAA,GAAkC,IAAlC;AAoBhB,SAAA,2BAAA;AAAC,CA5BD,CAAiD,IAAjD,CAAA;;SAAa,2B","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { PieChartBaseDescriptionMetadata } from \"./PieChartBaseDescriptionMetadata\";\nimport { PieChartDescription } from \"./PieChartDescription\";\n/**\n * @hidden\n */\nvar PieChartDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(PieChartDescriptionMetadata, _super);\n    function PieChartDescriptionMetadata() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    PieChartDescriptionMetadata.e = function (a) {\n        a.item(\"_qualifiedName\", \"String:Infragistics.Controls.Charts.XamPieChart\");\n        a.item(\"Width\", \"(w:Width/DimensionTransform,xam:Width/DimensionTransform)String\");\n        a.item(\"Height\", \"(w:Height/DimensionTransform,xam:Height/DimensionTransform)String\");\n        a.item(\"Background\", \"(wf:BackColor/ColorTransform)Brush\");\n    };\n    PieChartDescriptionMetadata.b = function (a) {\n        if (PieChartDescriptionMetadata.a == null) {\n            PieChartDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n            PieChartDescriptionMetadata.c(PieChartDescriptionMetadata.a);\n        }\n        if (a.g(PieChartDescriptionMetadata.a)) {\n            return;\n        }\n        a.s(PieChartDescriptionMetadata.a);\n    };\n    PieChartDescriptionMetadata.c = function (a) {\n        PieChartBaseDescriptionMetadata.c(a);\n        PieChartDescriptionMetadata.e(a);\n    };\n    PieChartDescriptionMetadata.d = function (a) {\n        PieChartDescriptionMetadata.b(a);\n        a.u(\"PieChart\", function () { return new PieChartDescription(); });\n        a.t(\"PieChart\", PieChartDescriptionMetadata.a);\n    };\n    PieChartDescriptionMetadata.$t = markType(PieChartDescriptionMetadata, 'PieChartDescriptionMetadata');\n    PieChartDescriptionMetadata.a = null;\n    return PieChartDescriptionMetadata;\n}(Base));\nexport { PieChartDescriptionMetadata };\n//# sourceMappingURL=PieChartDescriptionMetadata.js.map\n"]},"metadata":{},"sourceType":"module"}