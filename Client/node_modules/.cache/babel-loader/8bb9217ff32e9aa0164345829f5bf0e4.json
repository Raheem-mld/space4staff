{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { FinancialSeriesDescriptionMetadata } from \"./FinancialSeriesDescriptionMetadata\";\n/**\n * @hidden\n */\n\nvar FinancialIndicatorDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(FinancialIndicatorDescriptionMetadata, _super);\n\n  function FinancialIndicatorDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  FinancialIndicatorDescriptionMetadata.b = function (a) {\n    if (FinancialIndicatorDescriptionMetadata.a == null) {\n      FinancialIndicatorDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      FinancialIndicatorDescriptionMetadata.c(FinancialIndicatorDescriptionMetadata.a);\n    }\n\n    if (a.g(FinancialIndicatorDescriptionMetadata.a)) {\n      return;\n    }\n\n    a.s(FinancialIndicatorDescriptionMetadata.a);\n  };\n\n  FinancialIndicatorDescriptionMetadata.c = function (a) {\n    FinancialSeriesDescriptionMetadata.c(a);\n    a.item(\"DisplayType\", \"ExportedType:string:IndicatorDisplayType\");\n    a.item(\"DisplayType@names\", \"Line;Area;Column\");\n    a.item(\"IgnoreFirst\", \"Number:int\");\n    a.item(\"TrendLineType\", \"ExportedType:string:TrendLineType\");\n    a.item(\"TrendLineType@names\", \"None;LinearFit;QuadraticFit;CubicFit;QuarticFit;QuinticFit;LogarithmicFit;ExponentialFit;PowerLawFit;SimpleAverage;ExponentialAverage;ModifiedAverage;CumulativeAverage;WeightedAverage\");\n    a.item(\"TrendLineBrush\", \"Brush\");\n    a.item(\"ActualTrendLineBrush\", \"Brush\");\n    a.item(\"TrendLineThickness\", \"Number:double\");\n    a.item(\"TrendLinePeriod\", \"Number:int\");\n  };\n\n  FinancialIndicatorDescriptionMetadata.d = function (a) {\n    FinancialIndicatorDescriptionMetadata.b(a);\n    a.t(\"FinancialIndicator\", FinancialIndicatorDescriptionMetadata.a);\n  };\n\n  FinancialIndicatorDescriptionMetadata.$t = markType(FinancialIndicatorDescriptionMetadata, 'FinancialIndicatorDescriptionMetadata');\n  FinancialIndicatorDescriptionMetadata.a = null;\n  return FinancialIndicatorDescriptionMetadata;\n}(Base);\n\nexport { FinancialIndicatorDescriptionMetadata };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/FinancialIndicatorDescriptionMetadata.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,IAAT,EAAe,YAAf,EAAmC,QAAnC,QAAmD,QAAnD;AAEA,SAAS,YAAT,QAA6B,gBAA7B;AACA,SAAS,kCAAT,QAAmD,sCAAnD;AAEA;;AAEG;;AACH,IAAA,qCAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAA2D,EAAA,SAAA,CAAA,qCAAA,EAAA,MAAA,CAAA;;AAA3D,WAAA,qCAAA,GAAA;;AA6BC;;AA1Be,EAAA,qCAAA,CAAA,CAAA,GAAf,UAAiB,CAAjB,EAA0C;AACzC,QAAI,qCAAqC,CAAC,CAAtC,IAA2C,IAA/C,EAAqD;AACpD,MAAA,qCAAqC,CAAC,CAAtC,GAA0C,IAAI,YAAJ,CAAiC,YAAjC,EAA+C,YAA/C,EAA6D,CAA7D,CAA1C;AACA,MAAA,qCAAqC,CAAC,CAAtC,CAAwC,qCAAqC,CAAC,CAA9E;AACA;;AACD,QAAI,CAAC,CAAC,CAAF,CAAI,qCAAqC,CAAC,CAA1C,CAAJ,EAAkD;AACjD;AACA;;AACD,IAAA,CAAC,CAAC,CAAF,CAAI,qCAAqC,CAAC,CAA1C;AACA,GATc;;AAUR,EAAA,qCAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAwC;AACvC,IAAA,kCAAkC,CAAC,CAAnC,CAAqC,CAArC;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,aAAP,EAAsB,0CAAtB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,mBAAP,EAA4B,kBAA5B;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,aAAP,EAAsB,YAAtB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,eAAP,EAAwB,mCAAxB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,qBAAP,EAA8B,yLAA9B;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,gBAAP,EAAyB,OAAzB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,sBAAP,EAA+B,OAA/B;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,oBAAP,EAA6B,eAA7B;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,iBAAP,EAA0B,YAA1B;AACA,GAXM;;AAYA,EAAA,qCAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAkC;AACjC,IAAA,qCAAqC,CAAC,CAAtC,CAAwC,CAAxC;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,oBAAJ,EAA0B,qCAAqC,CAAC,CAAhE;AACA,GAHM;;AAxBA,EAAA,qCAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,qCAAD,EAAwC,uCAAxC,CAAnB;AACQ,EAAA,qCAAA,CAAA,CAAA,GAAkC,IAAlC;AA2BhB,SAAA,qCAAA;AAAC,CA7BD,CAA2D,IAA3D,CAAA;;SAAa,qC","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { FinancialSeriesDescriptionMetadata } from \"./FinancialSeriesDescriptionMetadata\";\n/**\n * @hidden\n */\nvar FinancialIndicatorDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(FinancialIndicatorDescriptionMetadata, _super);\n    function FinancialIndicatorDescriptionMetadata() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    FinancialIndicatorDescriptionMetadata.b = function (a) {\n        if (FinancialIndicatorDescriptionMetadata.a == null) {\n            FinancialIndicatorDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n            FinancialIndicatorDescriptionMetadata.c(FinancialIndicatorDescriptionMetadata.a);\n        }\n        if (a.g(FinancialIndicatorDescriptionMetadata.a)) {\n            return;\n        }\n        a.s(FinancialIndicatorDescriptionMetadata.a);\n    };\n    FinancialIndicatorDescriptionMetadata.c = function (a) {\n        FinancialSeriesDescriptionMetadata.c(a);\n        a.item(\"DisplayType\", \"ExportedType:string:IndicatorDisplayType\");\n        a.item(\"DisplayType@names\", \"Line;Area;Column\");\n        a.item(\"IgnoreFirst\", \"Number:int\");\n        a.item(\"TrendLineType\", \"ExportedType:string:TrendLineType\");\n        a.item(\"TrendLineType@names\", \"None;LinearFit;QuadraticFit;CubicFit;QuarticFit;QuinticFit;LogarithmicFit;ExponentialFit;PowerLawFit;SimpleAverage;ExponentialAverage;ModifiedAverage;CumulativeAverage;WeightedAverage\");\n        a.item(\"TrendLineBrush\", \"Brush\");\n        a.item(\"ActualTrendLineBrush\", \"Brush\");\n        a.item(\"TrendLineThickness\", \"Number:double\");\n        a.item(\"TrendLinePeriod\", \"Number:int\");\n    };\n    FinancialIndicatorDescriptionMetadata.d = function (a) {\n        FinancialIndicatorDescriptionMetadata.b(a);\n        a.t(\"FinancialIndicator\", FinancialIndicatorDescriptionMetadata.a);\n    };\n    FinancialIndicatorDescriptionMetadata.$t = markType(FinancialIndicatorDescriptionMetadata, 'FinancialIndicatorDescriptionMetadata');\n    FinancialIndicatorDescriptionMetadata.a = null;\n    return FinancialIndicatorDescriptionMetadata;\n}(Base));\nexport { FinancialIndicatorDescriptionMetadata };\n//# sourceMappingURL=FinancialIndicatorDescriptionMetadata.js.map\n"]},"metadata":{},"sourceType":"module"}