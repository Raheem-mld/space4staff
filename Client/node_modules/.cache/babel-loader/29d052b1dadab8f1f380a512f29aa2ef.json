{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { AssigningScatterStyleEventArgsDescriptionMetadata } from \"./AssigningScatterStyleEventArgsDescriptionMetadata\";\nimport { AssigningScatterMarkerStyleEventArgsDescriptionMetadata } from \"./AssigningScatterMarkerStyleEventArgsDescriptionMetadata\";\nimport { MarkerSeriesDescriptionMetadata } from \"./MarkerSeriesDescriptionMetadata\";\n/**\n * @hidden\n */\n\nvar ScatterBaseDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(ScatterBaseDescriptionMetadata, _super);\n\n  function ScatterBaseDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  ScatterBaseDescriptionMetadata.b = function (a) {\n    if (ScatterBaseDescriptionMetadata.a == null) {\n      ScatterBaseDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      ScatterBaseDescriptionMetadata.c(ScatterBaseDescriptionMetadata.a);\n    }\n\n    if (a.g(ScatterBaseDescriptionMetadata.a)) {\n      return;\n    }\n\n    a.s(ScatterBaseDescriptionMetadata.a);\n    AssigningScatterStyleEventArgsDescriptionMetadata.d(a);\n    AssigningScatterMarkerStyleEventArgsDescriptionMetadata.d(a);\n  };\n\n  ScatterBaseDescriptionMetadata.c = function (a) {\n    MarkerSeriesDescriptionMetadata.c(a);\n    a.item(\"XAxisRef\", \"(w:XAxis,wf:XAxis)DataRef::object\");\n    a.item(\"XAxisRef@nameBinding\", \"true\");\n    a.item(\"YAxisRef\", \"(w:YAxis,wf:YAxis)DataRef::object\");\n    a.item(\"YAxisRef@nameBinding\", \"true\");\n    a.item(\"XMemberPath\", \"String\");\n    a.item(\"YMemberPath\", \"String\");\n    a.item(\"TrendLineType\", \"ExportedType:string:TrendLineType\");\n    a.item(\"TrendLineType@names\", \"None;LinearFit;QuadraticFit;CubicFit;QuarticFit;QuinticFit;LogarithmicFit;ExponentialFit;PowerLawFit;SimpleAverage;ExponentialAverage;ModifiedAverage;CumulativeAverage;WeightedAverage\");\n    a.item(\"TrendLineBrush\", \"Brush\");\n    a.item(\"ActualTrendLineBrush\", \"Brush\");\n    a.item(\"TrendLineThickness\", \"Number:double\");\n    a.item(\"TrendLinePeriod\", \"Number:int\");\n    a.item(\"MarkerCollisionAvoidance\", \"ExportedType:string:CollisionAvoidanceType\");\n    a.item(\"MarkerCollisionAvoidance@names\", \"None;Omit;Fade;OmitAndShift;FadeAndShift\");\n    a.item(\"TrendLineZIndex\", \"Number:int\");\n    a.item(\"MaximumMarkers\", \"Number:int\");\n    a.item(\"ItemSearchMode\", \"ExportedType:string:ScatterItemSearchMode\");\n    a.item(\"ItemSearchMode@names\", \"Auto;ClosestVisiblePoint;ClosestPoint;ClosestVisiblePointOnClosestLine;ClosestPointOnClosestLine;None\");\n    a.item(\"ItemSearchThreshold\", \"Number:int\");\n    a.item(\"ActualItemSearchMode\", \"ExportedType:string:ScatterItemSearchMode\");\n    a.item(\"ActualItemSearchMode@names\", \"Auto;ClosestVisiblePoint;ClosestPoint;ClosestVisiblePointOnClosestLine;ClosestPointOnClosestLine;None\");\n    a.item(\"IsCustomScatterStyleAllowed\", \"Boolean\");\n    a.item(\"IsCustomScatterMarkerStyleAllowed\", \"Boolean\");\n    a.item(\"AssigningScatterStyleRef\", \"EventRef::assigningScatterStyle\");\n    a.item(\"AssigningScatterMarkerStyleRef\", \"EventRef::assigningScatterMarkerStyle\");\n  };\n\n  ScatterBaseDescriptionMetadata.d = function (a) {\n    ScatterBaseDescriptionMetadata.b(a);\n    a.t(\"ScatterBase\", ScatterBaseDescriptionMetadata.a);\n  };\n\n  ScatterBaseDescriptionMetadata.$t = markType(ScatterBaseDescriptionMetadata, 'ScatterBaseDescriptionMetadata');\n  ScatterBaseDescriptionMetadata.a = null;\n  return ScatterBaseDescriptionMetadata;\n}(Base);\n\nexport { ScatterBaseDescriptionMetadata };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/ScatterBaseDescriptionMetadata.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { AssigningScatterStyleEventArgsDescriptionMetadata } from \"./AssigningScatterStyleEventArgsDescriptionMetadata\";\nimport { AssigningScatterMarkerStyleEventArgsDescriptionMetadata } from \"./AssigningScatterMarkerStyleEventArgsDescriptionMetadata\";\nimport { MarkerSeriesDescriptionMetadata } from \"./MarkerSeriesDescriptionMetadata\";\n/**\n * @hidden\n */\nvar ScatterBaseDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(ScatterBaseDescriptionMetadata, _super);\n    function ScatterBaseDescriptionMetadata() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ScatterBaseDescriptionMetadata.b = function (a) {\n        if (ScatterBaseDescriptionMetadata.a == null) {\n            ScatterBaseDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n            ScatterBaseDescriptionMetadata.c(ScatterBaseDescriptionMetadata.a);\n        }\n        if (a.g(ScatterBaseDescriptionMetadata.a)) {\n            return;\n        }\n        a.s(ScatterBaseDescriptionMetadata.a);\n        AssigningScatterStyleEventArgsDescriptionMetadata.d(a);\n        AssigningScatterMarkerStyleEventArgsDescriptionMetadata.d(a);\n    };\n    ScatterBaseDescriptionMetadata.c = function (a) {\n        MarkerSeriesDescriptionMetadata.c(a);\n        a.item(\"XAxisRef\", \"(w:XAxis,wf:XAxis)DataRef::object\");\n        a.item(\"XAxisRef@nameBinding\", \"true\");\n        a.item(\"YAxisRef\", \"(w:YAxis,wf:YAxis)DataRef::object\");\n        a.item(\"YAxisRef@nameBinding\", \"true\");\n        a.item(\"XMemberPath\", \"String\");\n        a.item(\"YMemberPath\", \"String\");\n        a.item(\"TrendLineType\", \"ExportedType:string:TrendLineType\");\n        a.item(\"TrendLineType@names\", \"None;LinearFit;QuadraticFit;CubicFit;QuarticFit;QuinticFit;LogarithmicFit;ExponentialFit;PowerLawFit;SimpleAverage;ExponentialAverage;ModifiedAverage;CumulativeAverage;WeightedAverage\");\n        a.item(\"TrendLineBrush\", \"Brush\");\n        a.item(\"ActualTrendLineBrush\", \"Brush\");\n        a.item(\"TrendLineThickness\", \"Number:double\");\n        a.item(\"TrendLinePeriod\", \"Number:int\");\n        a.item(\"MarkerCollisionAvoidance\", \"ExportedType:string:CollisionAvoidanceType\");\n        a.item(\"MarkerCollisionAvoidance@names\", \"None;Omit;Fade;OmitAndShift;FadeAndShift\");\n        a.item(\"TrendLineZIndex\", \"Number:int\");\n        a.item(\"MaximumMarkers\", \"Number:int\");\n        a.item(\"ItemSearchMode\", \"ExportedType:string:ScatterItemSearchMode\");\n        a.item(\"ItemSearchMode@names\", \"Auto;ClosestVisiblePoint;ClosestPoint;ClosestVisiblePointOnClosestLine;ClosestPointOnClosestLine;None\");\n        a.item(\"ItemSearchThreshold\", \"Number:int\");\n        a.item(\"ActualItemSearchMode\", \"ExportedType:string:ScatterItemSearchMode\");\n        a.item(\"ActualItemSearchMode@names\", \"Auto;ClosestVisiblePoint;ClosestPoint;ClosestVisiblePointOnClosestLine;ClosestPointOnClosestLine;None\");\n        a.item(\"IsCustomScatterStyleAllowed\", \"Boolean\");\n        a.item(\"IsCustomScatterMarkerStyleAllowed\", \"Boolean\");\n        a.item(\"AssigningScatterStyleRef\", \"EventRef::assigningScatterStyle\");\n        a.item(\"AssigningScatterMarkerStyleRef\", \"EventRef::assigningScatterMarkerStyle\");\n    };\n    ScatterBaseDescriptionMetadata.d = function (a) {\n        ScatterBaseDescriptionMetadata.b(a);\n        a.t(\"ScatterBase\", ScatterBaseDescriptionMetadata.a);\n    };\n    ScatterBaseDescriptionMetadata.$t = markType(ScatterBaseDescriptionMetadata, 'ScatterBaseDescriptionMetadata');\n    ScatterBaseDescriptionMetadata.a = null;\n    return ScatterBaseDescriptionMetadata;\n}(Base));\nexport { ScatterBaseDescriptionMetadata };\n//# sourceMappingURL=ScatterBaseDescriptionMetadata.js.map\n"]},"metadata":{},"sourceType":"module"}