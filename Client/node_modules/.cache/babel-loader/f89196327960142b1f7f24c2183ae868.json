{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { delegateCombine, delegateRemove } from \"igniteui-react-core\";\nimport { IgrNumericAngleAxis } from \"./igr-numeric-angle-axis\";\nimport { IgrNumericRadiusAxis } from \"./igr-numeric-radius-axis\";\nimport { TrendLineType_$type } from \"igniteui-react-core\";\nimport { ScatterItemSearchMode_$type } from \"./ScatterItemSearchMode\";\nimport { IgrAssigningPolarStyleEventArgs } from \"./igr-assigning-polar-style-event-args\";\nimport { IgrAssigningPolarMarkerStyleEventArgs } from \"./igr-assigning-polar-marker-style-event-args\";\nimport { IgrMarkerSeries } from \"./igr-marker-series\";\nimport { ensureBool, ensureEnum, brushToString, stringToBrush, toPoint, fromPoint } from \"igniteui-react-core\";\n/**\n * Represents the base class from which all IgxDataChartComponent polar series are derived.\n*/\n\nvar IgrPolarBase =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(IgrPolarBase, _super);\n\n  function IgrPolarBase(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this._angleAxisName = null;\n    _this._radiusAxisName = null;\n    _this._assigningPolarStyle = null;\n    _this._assigningPolarStyle_wrapped = null;\n    _this._assigningPolarMarkerStyle = null;\n    _this._assigningPolarMarkerStyle_wrapped = null;\n    return _this;\n  }\n\n  Object.defineProperty(IgrPolarBase.prototype, \"i\", {\n    /**\n                                 * @hidden\n                                 */\n    get: function () {\n      return this._implementation;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrPolarBase.prototype, \"isPolar\", {\n    /**\n     * Checks if this series is a polar series\n    */\n    get: function () {\n      return this.i.d0;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrPolarBase.prototype, \"angleMemberPath\", {\n    /**\n     * Gets or sets the path to use to find the angle values for the series.\n    */\n    get: function () {\n      return this.i.so;\n    },\n    set: function (v) {\n      this.i.so = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrPolarBase.prototype, \"radiusMemberPath\", {\n    /**\n     * Gets or sets the path to use to get the radius values for the series.\n    */\n    get: function () {\n      return this.i.sy;\n    },\n    set: function (v) {\n      this.i.sy = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrPolarBase.prototype, \"angleAxis\", {\n    /**\n     * Gets the effective angle axis for the current series object.\n    */\n    get: function () {\n      if (this.i.q8 == null) {\n        return null;\n      }\n\n      if (!this.i.q8.externalObject) {\n        var e = IgrNumericAngleAxis._createFromInternal(this.i.q8);\n\n        if (e) {\n          e._implementation = this.i.q8;\n        }\n\n        this.i.q8.externalObject = e;\n      }\n\n      return this.i.q8.externalObject;\n    },\n    set: function (v) {\n      if (v != null && this._stylingContainer && v._styling) v._styling(this._stylingContainer, this, this);\n      v == null ? this.i.q8 = null : this.i.q8 = v.i;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrPolarBase.prototype, \"angleAxisName\", {\n    /**\n    * Gets or sets the name to use to resolve angleAxis from markup.\n    */\n    get: function () {\n      return this._angleAxisName;\n    },\n    set: function (v) {\n      this._angleAxisName = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrPolarBase.prototype, \"radiusAxis\", {\n    /**\n     * Gets the effective radius axis for the current series object.\n    */\n    get: function () {\n      if (this.i.q9 == null) {\n        return null;\n      }\n\n      if (!this.i.q9.externalObject) {\n        var e = IgrNumericRadiusAxis._createFromInternal(this.i.q9);\n\n        if (e) {\n          e._implementation = this.i.q9;\n        }\n\n        this.i.q9.externalObject = e;\n      }\n\n      return this.i.q9.externalObject;\n    },\n    set: function (v) {\n      if (v != null && this._stylingContainer && v._styling) v._styling(this._stylingContainer, this, this);\n      v == null ? this.i.q9 = null : this.i.q9 = v.i;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrPolarBase.prototype, \"radiusAxisName\", {\n    /**\n    * Gets or sets the name to use to resolve radiusAxis from markup.\n    */\n    get: function () {\n      return this._radiusAxisName;\n    },\n    set: function (v) {\n      this._radiusAxisName = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrPolarBase.prototype, \"useCartesianInterpolation\", {\n    /**\n     * Gets or sets whether Cartesian Interpolation should be used rather than Archimedian\n     * spiral based interpolation.\n    */\n    get: function () {\n      return this.i.r8;\n    },\n    set: function (v) {\n      this.i.r8 = ensureBool(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrPolarBase.prototype, \"maximumMarkers\", {\n    /**\n     * Gets or sets the maximum number of markers displayed by the current series.\n     * If more than the specified number of markers are visible, the polar series will automatically\n     * choose a representative set.\n    */\n    get: function () {\n      return this.i.si;\n    },\n    set: function (v) {\n      this.i.si = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrPolarBase.prototype, \"trendLineType\", {\n    /**\n     * Gets or sets the trend type for the current series object.\n    */\n    get: function () {\n      return this.i.rq;\n    },\n    set: function (v) {\n      this.i.rq = ensureEnum(TrendLineType_$type, v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrPolarBase.prototype, \"trendLineBrush\", {\n    /**\n     * Gets or sets the brush that specifies how the current series\n     * object's trend line is drawn.\n    */\n    get: function () {\n      return brushToString(this.i.tx);\n    },\n    set: function (v) {\n      this.i.tx = stringToBrush(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrPolarBase.prototype, \"actualTrendLineBrush\", {\n    /**\n     * Gets the effective TrendLineBrush for this series.\n    */\n    get: function () {\n      return brushToString(this.i.tw);\n    },\n    set: function (v) {\n      this.i.tw = stringToBrush(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrPolarBase.prototype, \"trendLineThickness\", {\n    /**\n     * Gets or sets the thickness of the current series object's trend line.\n    */\n    get: function () {\n      return this.i.sg;\n    },\n    set: function (v) {\n      this.i.sg = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrPolarBase.prototype, \"trendLinePeriod\", {\n    /**\n     * Gets or sets the moving average period for the current series object.\n    */\n    get: function () {\n      return this.i.sj;\n    },\n    set: function (v) {\n      this.i.sj = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrPolarBase.prototype, \"trendLineZIndex\", {\n    /**\n     * Sets or Gets the Trendline Z index.\n    */\n    get: function () {\n      return this.i.sk;\n    },\n    set: function (v) {\n      this.i.sk = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrPolarBase.prototype, \"clipSeriesToBounds\", {\n    /**\n     * Gets or sets whether to clip the series to the bounds.\n     * Setting this to true can effect performance.\n    */\n    get: function () {\n      return this.i.rz;\n    },\n    set: function (v) {\n      this.i.rz = ensureBool(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrPolarBase.prototype, \"actualItemSearchMode\", {\n    get: function () {\n      return this.i.rm;\n    },\n    set: function (v) {\n      this.i.rm = ensureEnum(ScatterItemSearchMode_$type, v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrPolarBase.prototype, \"itemSearchMode\", {\n    /**\n     * Gets or sets the mode the series will use to find the closest point to the cursor.\n    */\n    get: function () {\n      return this.i.ro;\n    },\n    set: function (v) {\n      this.i.ro = ensureEnum(ScatterItemSearchMode_$type, v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrPolarBase.prototype, \"itemSearchThreshold\", {\n    /**\n     * Gets or sets the threshold to use when searching for items using ItemSearchMode.\n    */\n    get: function () {\n      return this.i.sh;\n    },\n    set: function (v) {\n      this.i.sh = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrPolarBase.prototype, \"isCustomPolarStyleAllowed\", {\n    /**\n     * Gets or sets whether this Polar series should allow custom style overrides of its individual visuals.\n    */\n    get: function () {\n      return this.i.r2;\n    },\n    set: function (v) {\n      this.i.r2 = ensureBool(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrPolarBase.prototype, \"isCustomPolarMarkerStyleAllowed\", {\n    /**\n     * Gets or sets whether this Polar series should allow custom style overrides of its individual marker visuals.\n    */\n    get: function () {\n      return this.i.r1;\n    },\n    set: function (v) {\n      this.i.r1 = ensureBool(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  IgrPolarBase.prototype.bindAxes = function (axes) {\n    _super.prototype.bindAxes.call(this, axes);\n\n    for (var i = 0; i < axes.length; i++) {\n      if (this.angleAxisName && this.angleAxisName.length > 0 && axes[i].name == this.angleAxisName) {\n        this.angleAxis = axes[i];\n      }\n    }\n\n    for (var i = 0; i < axes.length; i++) {\n      if (this.radiusAxisName && this.radiusAxisName.length > 0 && axes[i].name == this.radiusAxisName) {\n        this.radiusAxis = axes[i];\n      }\n    }\n  };\n\n  IgrPolarBase.prototype.findByName = function (name) {\n    var baseResult = _super.prototype.findByName.call(this, name);\n\n    if (baseResult) {\n      return baseResult;\n    }\n\n    if (this.angleAxis && this.angleAxis.name && this.angleAxis.name == name) {\n      return this.angleAxis;\n    }\n\n    if (this.radiusAxis && this.radiusAxis.name && this.radiusAxis.name == name) {\n      return this.radiusAxis;\n    }\n\n    return null;\n  };\n\n  IgrPolarBase.prototype._styling = function (container, component, parent) {\n    _super.prototype._styling.call(this, container, component, parent);\n\n    this._inStyling = true;\n\n    if (this.angleAxis && this.angleAxis._styling) {\n      this.angleAxis._styling(container, component, this);\n    }\n\n    if (this.radiusAxis && this.radiusAxis._styling) {\n      this.radiusAxis._styling(container, component, this);\n    }\n\n    this._inStyling = false;\n  };\n  /**\n   * Scrolls the requested item into view, if possible.\n  \r\n  * @param item  * The item to scroll into view.\n  */\n\n\n  IgrPolarBase.prototype.scrollIntoView = function (item) {\n    var iv = this.i.eh(item);\n    return iv;\n  };\n  /**\n   * Gets the item that is the best match for the specified world coordinates.\n  \r\n  * @param world  * The world coordinates to use.\n  */\n\n\n  IgrPolarBase.prototype.getItem = function (world) {\n    var iv = this.i.hh(toPoint(world));\n    return iv;\n  };\n  /**\n   * Gets the index of the item that resides at the provided world coordinates.\n  \r\n  * @param world  * The world coordinates of the requested item.\n  */\n\n\n  IgrPolarBase.prototype.getItemIndex = function (world) {\n    var iv = this.i.g0(toPoint(world));\n    return iv;\n  };\n\n  IgrPolarBase.prototype.getExactItemIndex = function (world) {\n    var iv = this.i.fw(toPoint(world));\n    return iv;\n  };\n\n  IgrPolarBase.prototype.getSeriesValuePosition = function (world, useInterpolation, skipUnknowns) {\n    var iv = this.i.o2(toPoint(world), useInterpolation, skipUnknowns);\n    return fromPoint(iv);\n  };\n\n  IgrPolarBase.prototype.getItemValue = function (item, memberPathName) {\n    var iv = this.i.hk(item, memberPathName);\n    return iv;\n  };\n  /**\n   * Determine if object can be used as RadiusAxis\n  \r\n  * @param axis  * The object to check\n  */\n\n\n  IgrPolarBase.prototype.canUseAsRadiusAxis = function (axis) {\n    var iv = this.i.ry(axis);\n    return iv;\n  };\n  /**\n   * Determine if object can be used as AngleAxis\n  \r\n  * @param axis  * The object to check\n  */\n\n\n  IgrPolarBase.prototype.canUseAsAngleAxis = function (axis) {\n    var iv = this.i.rx(axis);\n    return iv;\n  };\n\n  Object.defineProperty(IgrPolarBase.prototype, \"assigningPolarStyle\", {\n    /**\n     * Event raised when Assigning Category Style\n    */\n    get: function () {\n      return this._assigningPolarStyle;\n    },\n    set: function (ev) {\n      var _this = this;\n\n      if (this._assigningPolarStyle_wrapped !== null) {\n        this.i.assigningPolarStyle = delegateRemove(this.i.assigningPolarStyle, this._assigningPolarStyle_wrapped);\n        this._assigningPolarStyle_wrapped = null;\n        this._assigningPolarStyle = null;\n      }\n\n      this._assigningPolarStyle = ev;\n\n      this._assigningPolarStyle_wrapped = function (o, e) {\n        var outerArgs = new IgrAssigningPolarStyleEventArgs();\n\n        outerArgs._provideImplementation(e);\n\n        if (_this.beforeAssigningPolarStyle) {\n          _this.beforeAssigningPolarStyle(_this, outerArgs);\n        }\n\n        if (_this._assigningPolarStyle) {\n          _this._assigningPolarStyle(_this, outerArgs);\n        }\n      };\n\n      this.i.assigningPolarStyle = delegateCombine(this.i.assigningPolarStyle, this._assigningPolarStyle_wrapped);\n      ;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrPolarBase.prototype, \"assigningPolarMarkerStyle\", {\n    /**\n     * Event raised when Assigning Polar Marker Style\n    */\n    get: function () {\n      return this._assigningPolarMarkerStyle;\n    },\n    set: function (ev) {\n      var _this = this;\n\n      if (this._assigningPolarMarkerStyle_wrapped !== null) {\n        this.i.assigningPolarMarkerStyle = delegateRemove(this.i.assigningPolarMarkerStyle, this._assigningPolarMarkerStyle_wrapped);\n        this._assigningPolarMarkerStyle_wrapped = null;\n        this._assigningPolarMarkerStyle = null;\n      }\n\n      this._assigningPolarMarkerStyle = ev;\n\n      this._assigningPolarMarkerStyle_wrapped = function (o, e) {\n        var outerArgs = new IgrAssigningPolarMarkerStyleEventArgs();\n\n        outerArgs._provideImplementation(e);\n\n        if (_this.beforeAssigningPolarMarkerStyle) {\n          _this.beforeAssigningPolarMarkerStyle(_this, outerArgs);\n        }\n\n        if (_this._assigningPolarMarkerStyle) {\n          _this._assigningPolarMarkerStyle(_this, outerArgs);\n        }\n      };\n\n      this.i.assigningPolarMarkerStyle = delegateCombine(this.i.assigningPolarMarkerStyle, this._assigningPolarMarkerStyle_wrapped);\n      ;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return IgrPolarBase;\n}(IgrMarkerSeries);\n\nexport { IgrPolarBase };","map":{"version":3,"sources":["../../../../src/igniteui-charts/lib/igr-polar-base.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __extends } from \"tslib\";\nimport { delegateCombine, delegateRemove } from \"igniteui-react-core\";\nimport { IgrNumericAngleAxis } from \"./igr-numeric-angle-axis\";\nimport { IgrNumericRadiusAxis } from \"./igr-numeric-radius-axis\";\nimport { TrendLineType_$type } from \"igniteui-react-core\";\nimport { ScatterItemSearchMode_$type } from \"./ScatterItemSearchMode\";\nimport { IgrAssigningPolarStyleEventArgs } from \"./igr-assigning-polar-style-event-args\";\nimport { IgrAssigningPolarMarkerStyleEventArgs } from \"./igr-assigning-polar-marker-style-event-args\";\nimport { IgrMarkerSeries } from \"./igr-marker-series\";\nimport { ensureBool, ensureEnum, brushToString, stringToBrush, toPoint, fromPoint } from \"igniteui-react-core\";\n/**\n * Represents the base class from which all IgxDataChartComponent polar series are derived.\n*/\nvar IgrPolarBase = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(IgrPolarBase, _super);\n    function IgrPolarBase(props) {\n        var _this = _super.call(this, props) || this;\n        _this._angleAxisName = null;\n        _this._radiusAxisName = null;\n        _this._assigningPolarStyle = null;\n        _this._assigningPolarStyle_wrapped = null;\n        _this._assigningPolarMarkerStyle = null;\n        _this._assigningPolarMarkerStyle_wrapped = null;\n        return _this;\n    }\n    Object.defineProperty(IgrPolarBase.prototype, \"i\", {\n        /**\n                                     * @hidden\n                                     */\n        get: function () {\n            return this._implementation;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrPolarBase.prototype, \"isPolar\", {\n        /**\n         * Checks if this series is a polar series\n        */\n        get: function () {\n            return this.i.d0;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrPolarBase.prototype, \"angleMemberPath\", {\n        /**\n         * Gets or sets the path to use to find the angle values for the series.\n        */\n        get: function () {\n            return this.i.so;\n        },\n        set: function (v) {\n            this.i.so = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrPolarBase.prototype, \"radiusMemberPath\", {\n        /**\n         * Gets or sets the path to use to get the radius values for the series.\n        */\n        get: function () {\n            return this.i.sy;\n        },\n        set: function (v) {\n            this.i.sy = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrPolarBase.prototype, \"angleAxis\", {\n        /**\n         * Gets the effective angle axis for the current series object.\n        */\n        get: function () {\n            if (this.i.q8 == null) {\n                return null;\n            }\n            if (!this.i.q8.externalObject) {\n                var e = IgrNumericAngleAxis._createFromInternal(this.i.q8);\n                if (e) {\n                    e._implementation = this.i.q8;\n                }\n                this.i.q8.externalObject = e;\n            }\n            return this.i.q8.externalObject;\n        },\n        set: function (v) {\n            if (v != null && this._stylingContainer && v._styling)\n                v._styling(this._stylingContainer, this, this);\n            v == null ? this.i.q8 = null : this.i.q8 = v.i;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrPolarBase.prototype, \"angleAxisName\", {\n        /**\n        * Gets or sets the name to use to resolve angleAxis from markup.\n        */\n        get: function () {\n            return this._angleAxisName;\n        },\n        set: function (v) {\n            this._angleAxisName = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrPolarBase.prototype, \"radiusAxis\", {\n        /**\n         * Gets the effective radius axis for the current series object.\n        */\n        get: function () {\n            if (this.i.q9 == null) {\n                return null;\n            }\n            if (!this.i.q9.externalObject) {\n                var e = IgrNumericRadiusAxis._createFromInternal(this.i.q9);\n                if (e) {\n                    e._implementation = this.i.q9;\n                }\n                this.i.q9.externalObject = e;\n            }\n            return this.i.q9.externalObject;\n        },\n        set: function (v) {\n            if (v != null && this._stylingContainer && v._styling)\n                v._styling(this._stylingContainer, this, this);\n            v == null ? this.i.q9 = null : this.i.q9 = v.i;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrPolarBase.prototype, \"radiusAxisName\", {\n        /**\n        * Gets or sets the name to use to resolve radiusAxis from markup.\n        */\n        get: function () {\n            return this._radiusAxisName;\n        },\n        set: function (v) {\n            this._radiusAxisName = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrPolarBase.prototype, \"useCartesianInterpolation\", {\n        /**\n         * Gets or sets whether Cartesian Interpolation should be used rather than Archimedian\n         * spiral based interpolation.\n        */\n        get: function () {\n            return this.i.r8;\n        },\n        set: function (v) {\n            this.i.r8 = ensureBool(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrPolarBase.prototype, \"maximumMarkers\", {\n        /**\n         * Gets or sets the maximum number of markers displayed by the current series.\n         * If more than the specified number of markers are visible, the polar series will automatically\n         * choose a representative set.\n        */\n        get: function () {\n            return this.i.si;\n        },\n        set: function (v) {\n            this.i.si = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrPolarBase.prototype, \"trendLineType\", {\n        /**\n         * Gets or sets the trend type for the current series object.\n        */\n        get: function () {\n            return this.i.rq;\n        },\n        set: function (v) {\n            this.i.rq = ensureEnum(TrendLineType_$type, v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrPolarBase.prototype, \"trendLineBrush\", {\n        /**\n         * Gets or sets the brush that specifies how the current series\n         * object's trend line is drawn.\n        */\n        get: function () {\n            return brushToString(this.i.tx);\n        },\n        set: function (v) {\n            this.i.tx = stringToBrush(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrPolarBase.prototype, \"actualTrendLineBrush\", {\n        /**\n         * Gets the effective TrendLineBrush for this series.\n        */\n        get: function () {\n            return brushToString(this.i.tw);\n        },\n        set: function (v) {\n            this.i.tw = stringToBrush(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrPolarBase.prototype, \"trendLineThickness\", {\n        /**\n         * Gets or sets the thickness of the current series object's trend line.\n        */\n        get: function () {\n            return this.i.sg;\n        },\n        set: function (v) {\n            this.i.sg = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrPolarBase.prototype, \"trendLinePeriod\", {\n        /**\n         * Gets or sets the moving average period for the current series object.\n        */\n        get: function () {\n            return this.i.sj;\n        },\n        set: function (v) {\n            this.i.sj = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrPolarBase.prototype, \"trendLineZIndex\", {\n        /**\n         * Sets or Gets the Trendline Z index.\n        */\n        get: function () {\n            return this.i.sk;\n        },\n        set: function (v) {\n            this.i.sk = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrPolarBase.prototype, \"clipSeriesToBounds\", {\n        /**\n         * Gets or sets whether to clip the series to the bounds.\n         * Setting this to true can effect performance.\n        */\n        get: function () {\n            return this.i.rz;\n        },\n        set: function (v) {\n            this.i.rz = ensureBool(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrPolarBase.prototype, \"actualItemSearchMode\", {\n        get: function () {\n            return this.i.rm;\n        },\n        set: function (v) {\n            this.i.rm = ensureEnum(ScatterItemSearchMode_$type, v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrPolarBase.prototype, \"itemSearchMode\", {\n        /**\n         * Gets or sets the mode the series will use to find the closest point to the cursor.\n        */\n        get: function () {\n            return this.i.ro;\n        },\n        set: function (v) {\n            this.i.ro = ensureEnum(ScatterItemSearchMode_$type, v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrPolarBase.prototype, \"itemSearchThreshold\", {\n        /**\n         * Gets or sets the threshold to use when searching for items using ItemSearchMode.\n        */\n        get: function () {\n            return this.i.sh;\n        },\n        set: function (v) {\n            this.i.sh = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrPolarBase.prototype, \"isCustomPolarStyleAllowed\", {\n        /**\n         * Gets or sets whether this Polar series should allow custom style overrides of its individual visuals.\n        */\n        get: function () {\n            return this.i.r2;\n        },\n        set: function (v) {\n            this.i.r2 = ensureBool(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrPolarBase.prototype, \"isCustomPolarMarkerStyleAllowed\", {\n        /**\n         * Gets or sets whether this Polar series should allow custom style overrides of its individual marker visuals.\n        */\n        get: function () {\n            return this.i.r1;\n        },\n        set: function (v) {\n            this.i.r1 = ensureBool(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    IgrPolarBase.prototype.bindAxes = function (axes) {\n        _super.prototype.bindAxes.call(this, axes);\n        for (var i = 0; i < axes.length; i++) {\n            if (this.angleAxisName && this.angleAxisName.length > 0 &&\n                axes[i].name == this.angleAxisName) {\n                this.angleAxis = axes[i];\n            }\n        }\n        for (var i = 0; i < axes.length; i++) {\n            if (this.radiusAxisName && this.radiusAxisName.length > 0 &&\n                axes[i].name == this.radiusAxisName) {\n                this.radiusAxis = axes[i];\n            }\n        }\n    };\n    IgrPolarBase.prototype.findByName = function (name) {\n        var baseResult = _super.prototype.findByName.call(this, name);\n        if (baseResult) {\n            return baseResult;\n        }\n        if (this.angleAxis && this.angleAxis.name && this.angleAxis.name == name) {\n            return this.angleAxis;\n        }\n        if (this.radiusAxis && this.radiusAxis.name && this.radiusAxis.name == name) {\n            return this.radiusAxis;\n        }\n        return null;\n    };\n    IgrPolarBase.prototype._styling = function (container, component, parent) {\n        _super.prototype._styling.call(this, container, component, parent);\n        this._inStyling = true;\n        if (this.angleAxis && this.angleAxis._styling) {\n            this.angleAxis._styling(container, component, this);\n        }\n        if (this.radiusAxis && this.radiusAxis._styling) {\n            this.radiusAxis._styling(container, component, this);\n        }\n        this._inStyling = false;\n    };\n    /**\n     * Scrolls the requested item into view, if possible.\n    \r\n    * @param item  * The item to scroll into view.\n    */\n    IgrPolarBase.prototype.scrollIntoView = function (item) {\n        var iv = this.i.eh(item);\n        return (iv);\n    };\n    /**\n     * Gets the item that is the best match for the specified world coordinates.\n    \r\n    * @param world  * The world coordinates to use.\n    */\n    IgrPolarBase.prototype.getItem = function (world) {\n        var iv = this.i.hh(toPoint(world));\n        return (iv);\n    };\n    /**\n     * Gets the index of the item that resides at the provided world coordinates.\n    \r\n    * @param world  * The world coordinates of the requested item.\n    */\n    IgrPolarBase.prototype.getItemIndex = function (world) {\n        var iv = this.i.g0(toPoint(world));\n        return (iv);\n    };\n    IgrPolarBase.prototype.getExactItemIndex = function (world) {\n        var iv = this.i.fw(toPoint(world));\n        return (iv);\n    };\n    IgrPolarBase.prototype.getSeriesValuePosition = function (world, useInterpolation, skipUnknowns) {\n        var iv = this.i.o2(toPoint(world), useInterpolation, skipUnknowns);\n        return fromPoint(iv);\n    };\n    IgrPolarBase.prototype.getItemValue = function (item, memberPathName) {\n        var iv = this.i.hk(item, memberPathName);\n        return (iv);\n    };\n    /**\n     * Determine if object can be used as RadiusAxis\n    \r\n    * @param axis  * The object to check\n    */\n    IgrPolarBase.prototype.canUseAsRadiusAxis = function (axis) {\n        var iv = this.i.ry(axis);\n        return (iv);\n    };\n    /**\n     * Determine if object can be used as AngleAxis\n    \r\n    * @param axis  * The object to check\n    */\n    IgrPolarBase.prototype.canUseAsAngleAxis = function (axis) {\n        var iv = this.i.rx(axis);\n        return (iv);\n    };\n    Object.defineProperty(IgrPolarBase.prototype, \"assigningPolarStyle\", {\n        /**\n         * Event raised when Assigning Category Style\n        */\n        get: function () {\n            return this._assigningPolarStyle;\n        },\n        set: function (ev) {\n            var _this = this;\n            if (this._assigningPolarStyle_wrapped !== null) {\n                this.i.assigningPolarStyle = delegateRemove(this.i.assigningPolarStyle, this._assigningPolarStyle_wrapped);\n                this._assigningPolarStyle_wrapped = null;\n                this._assigningPolarStyle = null;\n            }\n            this._assigningPolarStyle = ev;\n            this._assigningPolarStyle_wrapped = function (o, e) {\n                var outerArgs = new IgrAssigningPolarStyleEventArgs();\n                outerArgs._provideImplementation(e);\n                if (_this.beforeAssigningPolarStyle) {\n                    _this.beforeAssigningPolarStyle(_this, outerArgs);\n                }\n                if (_this._assigningPolarStyle) {\n                    _this._assigningPolarStyle(_this, outerArgs);\n                }\n            };\n            this.i.assigningPolarStyle = delegateCombine(this.i.assigningPolarStyle, this._assigningPolarStyle_wrapped);\n            ;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrPolarBase.prototype, \"assigningPolarMarkerStyle\", {\n        /**\n         * Event raised when Assigning Polar Marker Style\n        */\n        get: function () {\n            return this._assigningPolarMarkerStyle;\n        },\n        set: function (ev) {\n            var _this = this;\n            if (this._assigningPolarMarkerStyle_wrapped !== null) {\n                this.i.assigningPolarMarkerStyle = delegateRemove(this.i.assigningPolarMarkerStyle, this._assigningPolarMarkerStyle_wrapped);\n                this._assigningPolarMarkerStyle_wrapped = null;\n                this._assigningPolarMarkerStyle = null;\n            }\n            this._assigningPolarMarkerStyle = ev;\n            this._assigningPolarMarkerStyle_wrapped = function (o, e) {\n                var outerArgs = new IgrAssigningPolarMarkerStyleEventArgs();\n                outerArgs._provideImplementation(e);\n                if (_this.beforeAssigningPolarMarkerStyle) {\n                    _this.beforeAssigningPolarMarkerStyle(_this, outerArgs);\n                }\n                if (_this._assigningPolarMarkerStyle) {\n                    _this._assigningPolarMarkerStyle(_this, outerArgs);\n                }\n            };\n            this.i.assigningPolarMarkerStyle = delegateCombine(this.i.assigningPolarMarkerStyle, this._assigningPolarMarkerStyle_wrapped);\n            ;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return IgrPolarBase;\n}(IgrMarkerSeries));\nexport { IgrPolarBase };\n//# sourceMappingURL=igr-polar-base.js.map\n"]},"metadata":{},"sourceType":"module"}