{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, NotSupportedException, typeCast, typeGetValue, markType } from \"./type\";\nimport { TypeDescriptionContext } from \"./TypeDescriptionContext\";\nimport { DescriptionTreeNode } from \"./DescriptionTreeNode\";\nimport { DescriptionSerializerBuilder } from \"./DescriptionSerializerBuilder\";\nimport { DescriptionTreeBuilder } from \"./DescriptionTreeBuilder\";\nimport { DescriptionResult } from \"./DescriptionResult\";\nimport { JsonDictionaryParser } from \"./JsonDictionaryParser\";\nimport { JsonDictionaryObject } from \"./JsonDictionaryObject\";\nimport { EmbeddedRefDescription } from \"./EmbeddedRefDescription\";\nimport { JsonDictionaryArray } from \"./JsonDictionaryArray\";\nimport { PointDescription } from \"./PointDescription\";\nimport { SizeDescription } from \"./SizeDescription\";\nimport { RectDescription } from \"./RectDescription\";\nimport { NotImplementedException } from \"./NotImplementedException\";\nimport { Convert } from \"./Convert\";\nimport { stringEndsWith, stringStartsWith, stringReplace } from \"./string\";\n/**\n * @hidden\n */\n\nvar DescriptionSerializer =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(DescriptionSerializer, _super);\n\n  function DescriptionSerializer() {\n    var _this = _super.call(this) || this;\n\n    _this.h = false;\n    _this.g = false;\n    _this.f = false;\n    _this.i = null;\n    _this.e = false;\n    return _this;\n  }\n\n  DescriptionSerializer.prototype.o = function (a, b) {\n    var c = DescriptionTreeBuilder.createTree(a, b);\n    var d = new DescriptionSerializerBuilder();\n    this.p(a, c, d);\n    return d.toString();\n  };\n\n  DescriptionSerializer.prototype.s = function (a, b, c) {\n    this.p(a, b, c);\n  };\n\n  DescriptionSerializer.prototype.c = function (a, b) {\n    var c = new JsonDictionaryParser();\n    var d = c.parse(b);\n    return this.d(a, d, false, null, false);\n  };\n\n  DescriptionSerializer.prototype.d = function (a, b, c, d, e) {\n    if (!(typeCast(JsonDictionaryObject.$, b) !== null)) {\n      throw new NotSupportedException(1, \"expected an object at the root of the json\");\n    }\n\n    var f = b;\n\n    if (c) {\n      this.f = true;\n      this.i = d;\n    }\n\n    if (e) {\n      this.e = true;\n    }\n\n    var g = this.b(a, f);\n    this.f = false;\n    this.i = null;\n    this.e = false;\n    return g;\n  };\n\n  DescriptionSerializer.prototype.u = function (a, b, c, d, e) {\n    if (this.g) {\n      a.w(b, c, d, e);\n    } else {\n      a.v(b, c, d, e);\n    }\n  };\n\n  DescriptionSerializer.prototype.b = function (a, b, c) {\n    if (c === void 0) {\n      c = 8;\n    }\n\n    if (!b.g(\"type\")) {\n      if (b.g(\"refType\")) {\n        var d = new EmbeddedRefDescription();\n        d.refType = b.item(\"refType\").value;\n        d.value = b.item(\"id\").value;\n        var e = new DescriptionResult();\n        e.result = d;\n        return e;\n      } else {\n        throw new NotSupportedException(1, \"expected type to be defined for the json object\");\n      }\n    }\n\n    var f = new DescriptionResult();\n    var g = b.item(\"type\").value;\n    var h = a.o(g);\n    f.result = h;\n\n    if (h == null) {\n      if (this.h) {\n        throw new NotSupportedException(1, \"missing description for type: \" + g);\n      }\n\n      f.d(\"couldn't find registered description for type: \" + g);\n      return f;\n    }\n\n    var i = b.e();\n\n    for (var j = 0; j < i.length; j++) {\n      var k = i[j];\n      var l = a.getMetadata(g, TypeDescriptionContext.r(k));\n\n      if (l == null) {\n        if (TypeDescriptionContext.r(k) == \"Name\") {\n          var m = \"string\";\n          var n = b.item(k);\n          var o = this.j(f, a, n, m);\n          h.name = o;\n        }\n\n        continue;\n      }\n\n      var p = b.item(k);\n\n      if (l.knownType == 14 || l.knownType == 11 || l.knownType == 12) {\n        var q = p;\n\n        switch (l.knownType) {\n          case 14:\n            q = this.l(a, p);\n            break;\n\n          case 12:\n            q = this.m(a, p);\n            break;\n\n          case 11:\n            q = this.k(a, p);\n            break;\n        }\n\n        if (!this.e) {\n          this.u(a, h, k, l, q);\n        }\n      } else if (typeCast(JsonDictionaryObject.$, p) !== null) {\n        var r = p;\n        var s = this.b(a, r, l.knownType);\n        f.e(s);\n        this.u(a, h, k, l, s.result);\n      } else if (typeCast(JsonDictionaryArray.$, p) !== null) {\n        var t = p;\n        var u = \"string\";\n        var v = false;\n\n        if (l.knownType == 10) {\n          u = l.specificExternalType;\n        }\n\n        if (l.knownType == 9) {\n          v = true;\n          u = l.collectionElementType;\n        }\n\n        var w = this.a(f, a, t, u);\n\n        if (!this.e || v) {\n          this.u(a, h, k, l, w);\n        }\n      } else {\n        var x = l.specificExternalType;\n\n        if (x == null && l.knownType == 3) {\n          x = \"DateTime\";\n        }\n\n        if (x == null) {\n          x = \"String\";\n        }\n\n        var y = p;\n        var z = this.j(f, a, y, x);\n\n        if (this.f) {\n          if (stringEndsWith(l.propertyName, \"MemberPath\") || g != null && stringEndsWith(g, \"Axis\") && l.propertyName.toLowerCase() == \"label\") {\n            var aa = z.toString();\n\n            if (this.i != null) {\n              z = this.i(aa);\n            } else {\n              if (stringStartsWith(aa, \"{\")) {\n                if (!stringStartsWith(aa, \"{[\")) {\n                  aa = aa.substr(1, aa.length - 2);\n                  aa = \"{[\" + aa + \"]}\";\n                  z = aa;\n                }\n              } else {\n                if (!stringStartsWith(aa, \"[\")) {\n                  aa = \"[\" + aa + \"]\";\n                  z = aa;\n                }\n              }\n            }\n          }\n        }\n\n        if (!this.e) {\n          this.u(a, h, k, l, z);\n        }\n      }\n    }\n\n    return f;\n  };\n\n  DescriptionSerializer.prototype.k = function (a, b) {\n    if (b == null) {\n      return null;\n    }\n\n    var c = NaN;\n    var d = NaN;\n\n    if (b.g(\"x\")) {\n      c = b.item(\"x\").value;\n    }\n\n    if (b.g(\"y\")) {\n      d = b.item(\"y\").value;\n    }\n\n    return function () {\n      var $ret = new PointDescription();\n      $ret.x = c;\n      $ret.y = d;\n      return $ret;\n    }();\n  };\n\n  DescriptionSerializer.prototype.m = function (a, b) {\n    if (b == null) {\n      return null;\n    }\n\n    var c = NaN;\n    var d = NaN;\n\n    if (b.g(\"width\")) {\n      c = b.item(\"width\").value;\n    }\n\n    if (b.g(\"height\")) {\n      d = b.item(\"height\").value;\n    }\n\n    return function () {\n      var $ret = new SizeDescription();\n      $ret.width = c;\n      $ret.height = d;\n      return $ret;\n    }();\n  };\n\n  DescriptionSerializer.prototype.l = function (a, b) {\n    if (b == null) {\n      return null;\n    }\n\n    var c = NaN;\n    var d = NaN;\n    var e = NaN;\n    var f = NaN;\n\n    if (b.g(\"left\")) {\n      c = b.item(\"left\").value;\n    }\n\n    if (b.g(\"top\")) {\n      d = b.item(\"top\").value;\n    }\n\n    if (b.g(\"width\")) {\n      e = b.item(\"width\").value;\n    }\n\n    if (b.g(\"height\")) {\n      f = b.item(\"height\").value;\n    }\n\n    return function () {\n      var $ret = new RectDescription();\n      $ret.left = c;\n      $ret.top = d;\n      $ret.width = e;\n      $ret.height = f;\n      return $ret;\n    }();\n  };\n\n  DescriptionSerializer.prototype.a = function (a, b, c, d) {\n    var e = new Array(c.items.length);\n\n    for (var f = 0; f < c.items.length; f++) {\n      var g = c.items[f];\n\n      if (typeCast(JsonDictionaryObject.$, g) !== null) {\n        var h = g;\n        var i = this.b(b, h);\n        a.e(i);\n        e[f] = i.result;\n      } else if (typeCast(JsonDictionaryArray.$, g) !== null) {\n        var j = g;\n        var k = this.a(a, b, j, d);\n        e[f] = k;\n      } else {\n        var l = g;\n        var m = this.j(a, b, l, d);\n        e[f] = m;\n      }\n    }\n\n    return e;\n  };\n\n  DescriptionSerializer.prototype.j = function (a, b, c, d) {\n    switch (c.e) {\n      case 1:\n        return c.value;\n\n      case 3:\n        return c.value;\n\n      case 0:\n        switch (d.toLowerCase()) {\n          case \"int\":\n            return typeGetValue(c.value);\n\n          case \"double\":\n            return c.value;\n\n          case \"timespan\":\n            return c.value;\n\n          case \"short\":\n            return typeGetValue(c.value);\n\n          case \"long\":\n            return typeGetValue(c.value);\n\n          case \"float\":\n            return c.value;\n\n          case \"byte\":\n            return typeGetValue(c.value);\n\n          default:\n            a.d(\"unexpected target type for number: \" + d);\n            return c.value;\n        }\n\n      case 2:\n        if (d.toLowerCase() == \"datetime\") {\n          var val_ = c.value;\n          var e = new Date(val_);\n          return e;\n        }\n\n        return c.value;\n\n      default:\n        a.d(\"unexpected value type\");\n        return c.value;\n    }\n  };\n\n  DescriptionSerializer.prototype.p = function (a, b, c) {\n    c.f(\"{\");\n    c.i();\n    c.f(\"\\\"type\\\": \\\"\" + b.h + \"\\\"\");\n    var d = b.e();\n\n    for (var e = 0; e < d.count; e++) {\n      var f = d._inner[e];\n\n      if (e >= 0) {\n        c.f(\",\");\n      }\n\n      this.q(a, b, f, c);\n    }\n\n    c.h();\n    c.f(\"}\");\n  };\n\n  DescriptionSerializer.prototype.n = function (a) {\n    if (a == null) {\n      return null;\n    }\n\n    return a.substr(0, 1).toLowerCase() + a.substr(1);\n  };\n\n  DescriptionSerializer.prototype.q = function (a, b, c, d) {\n    if (c.c.toLowerCase() == \"type\") {\n      return;\n    }\n\n    d.e(\"\\\"\" + this.n(c.c) + \"\\\": \");\n    this.t(a, b, c, c.b, d);\n  };\n\n  DescriptionSerializer.prototype.t = function (a, b, c, d, e) {\n    var f = 2;\n\n    if (c.a != null) {\n      f = c.a.knownType;\n    }\n\n    switch (f) {\n      case 6:\n      case 16:\n      case 10:\n        {\n          e.e(\"[\");\n          var g = c.b;\n          var h = c.a.specificType;\n\n          if (c.a.knownType == 6 || c.a.knownType == 16) {\n            h = \"String\";\n          }\n\n          for (var i = 0; i < g.length; i++) {\n            if (i > 0) {\n              e.e(\", \");\n            }\n\n            var j = h;\n\n            if (typeCast(DescriptionTreeNode.$, g[i]) !== null) {\n              this.p(a, g[i], e);\n            } else {\n              this.r(a, h, g[i], e);\n            }\n          }\n\n          e.e(\"]\");\n        }\n        break;\n\n      case 7:\n        this.r(a, \"Boolean\", d, e);\n        break;\n\n      case 9:\n        {\n          e.e(\"[\");\n          var k = c.b;\n          var l = c.a.collectionElementType;\n\n          for (var m = 0; m < k.length; m++) {\n            if (m > 0) {\n              e.e(\", \");\n            }\n\n            var n = l;\n\n            if (typeCast(DescriptionTreeNode.$, k[m]) !== null) {\n              this.p(a, k[m], e);\n            } else {\n              this.r(a, l, k[m], e);\n            }\n          }\n\n          e.e(\"]\");\n        }\n        break;\n\n      case 4:\n      case 18:\n      case 19:\n      case 20:\n      case 5:\n      case 2:\n        this.r(a, \"String\", d, e);\n        break;\n\n      case 3:\n        this.r(a, \"DateTime\", d, e);\n        break;\n\n      case 8:\n        if (c.a.specificExternalType.toLowerCase() == \"string\") {\n          this.r(a, \"String\", d, e);\n        } else {\n          this.p(a, d, e);\n        }\n\n        break;\n\n      case 1:\n        this.r(a, \"Double\", d, e);\n        break;\n\n      case 14:\n      case 12:\n      case 11:\n        this.p(a, d, e);\n        break;\n\n      case 21:\n        this.r(a, \"TimeSpan\", d, e);\n        break;\n\n      case 17:\n      case 0:\n      case 15:\n      case 13:\n        throw new NotImplementedException(0);\n    }\n  };\n\n  DescriptionSerializer.prototype.r = function (a, b, c, d) {\n    switch (b.toLowerCase()) {\n      case \"string\":\n        if (c == null) {\n          d.e(\"null\");\n        } else {\n          d.e(\"\\\"\" + stringReplace(c, \"\\\"\", \"\\\\\\\"\") + \"\\\"\");\n        }\n\n        break;\n\n      case \"number\":\n      case \"double\":\n        if (c == null) {\n          d.e(\"null\");\n        } else {\n          if (!(typeof c === 'number')) {\n            c = Convert.toDouble3(c);\n          }\n\n          d.e(c.toString());\n        }\n\n        break;\n\n      case \"int\":\n        if (c == null) {\n          d.e(\"null\");\n        } else {\n          d.e(c.toString());\n        }\n\n        break;\n\n      case \"float\":\n        if (c == null) {\n          d.e(\"null\");\n        } else {\n          d.e(c.toString());\n        }\n\n        break;\n\n      case \"long\":\n        if (c == null) {\n          d.e(\"null\");\n        } else {\n          d.e(c.toString());\n        }\n\n        break;\n\n      case \"decimal\":\n        if (c == null) {\n          d.e(\"null\");\n        } else {\n          d.e(c.toString());\n        }\n\n        break;\n\n      case \"timespan\":\n        if (c == null) {\n          d.e(\"null\");\n        } else {\n          d.e(c.toString());\n        }\n\n        break;\n\n      case \"boolean\":\n        d.e(c == null ? \"false\" : c.toString().toLowerCase());\n        break;\n\n      case \"datetime\":\n        if (c == null) {\n          d.e(\"null\");\n        } else {\n          var v_ = c;\n          d.e(\"\\\"\" + v_.toJSON() + \"\\\"\");\n        }\n\n        break;\n    }\n  };\n\n  DescriptionSerializer.$t = markType(DescriptionSerializer, 'DescriptionSerializer');\n  return DescriptionSerializer;\n}(Base);\n\nexport { DescriptionSerializer };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/DescriptionSerializer.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, NotSupportedException, typeCast, typeGetValue, markType } from \"./type\";\nimport { TypeDescriptionContext } from \"./TypeDescriptionContext\";\nimport { DescriptionTreeNode } from \"./DescriptionTreeNode\";\nimport { DescriptionSerializerBuilder } from \"./DescriptionSerializerBuilder\";\nimport { DescriptionTreeBuilder } from \"./DescriptionTreeBuilder\";\nimport { DescriptionResult } from \"./DescriptionResult\";\nimport { JsonDictionaryParser } from \"./JsonDictionaryParser\";\nimport { JsonDictionaryObject } from \"./JsonDictionaryObject\";\nimport { EmbeddedRefDescription } from \"./EmbeddedRefDescription\";\nimport { JsonDictionaryArray } from \"./JsonDictionaryArray\";\nimport { PointDescription } from \"./PointDescription\";\nimport { SizeDescription } from \"./SizeDescription\";\nimport { RectDescription } from \"./RectDescription\";\nimport { NotImplementedException } from \"./NotImplementedException\";\nimport { Convert } from \"./Convert\";\nimport { stringEndsWith, stringStartsWith, stringReplace } from \"./string\";\n/**\n * @hidden\n */\nvar DescriptionSerializer = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(DescriptionSerializer, _super);\n    function DescriptionSerializer() {\n        var _this = _super.call(this) || this;\n        _this.h = false;\n        _this.g = false;\n        _this.f = false;\n        _this.i = null;\n        _this.e = false;\n        return _this;\n    }\n    DescriptionSerializer.prototype.o = function (a, b) {\n        var c = DescriptionTreeBuilder.createTree(a, b);\n        var d = new DescriptionSerializerBuilder();\n        this.p(a, c, d);\n        return d.toString();\n    };\n    DescriptionSerializer.prototype.s = function (a, b, c) {\n        this.p(a, b, c);\n    };\n    DescriptionSerializer.prototype.c = function (a, b) {\n        var c = new JsonDictionaryParser();\n        var d = c.parse(b);\n        return this.d(a, d, false, null, false);\n    };\n    DescriptionSerializer.prototype.d = function (a, b, c, d, e) {\n        if (!(typeCast(JsonDictionaryObject.$, b) !== null)) {\n            throw new NotSupportedException(1, \"expected an object at the root of the json\");\n        }\n        var f = b;\n        if (c) {\n            this.f = true;\n            this.i = d;\n        }\n        if (e) {\n            this.e = true;\n        }\n        var g = this.b(a, f);\n        this.f = false;\n        this.i = null;\n        this.e = false;\n        return g;\n    };\n    DescriptionSerializer.prototype.u = function (a, b, c, d, e) {\n        if (this.g) {\n            a.w(b, c, d, e);\n        }\n        else {\n            a.v(b, c, d, e);\n        }\n    };\n    DescriptionSerializer.prototype.b = function (a, b, c) {\n        if (c === void 0) {\n            c = 8;\n        }\n        if (!b.g(\"type\")) {\n            if (b.g(\"refType\")) {\n                var d = new EmbeddedRefDescription();\n                d.refType = b.item(\"refType\").value;\n                d.value = b.item(\"id\").value;\n                var e = new DescriptionResult();\n                e.result = d;\n                return e;\n            }\n            else {\n                throw new NotSupportedException(1, \"expected type to be defined for the json object\");\n            }\n        }\n        var f = new DescriptionResult();\n        var g = b.item(\"type\").value;\n        var h = a.o(g);\n        f.result = h;\n        if (h == null) {\n            if (this.h) {\n                throw new NotSupportedException(1, \"missing description for type: \" + g);\n            }\n            f.d(\"couldn't find registered description for type: \" + g);\n            return f;\n        }\n        var i = b.e();\n        for (var j = 0; j < i.length; j++) {\n            var k = i[j];\n            var l = a.getMetadata(g, TypeDescriptionContext.r(k));\n            if (l == null) {\n                if (TypeDescriptionContext.r(k) == \"Name\") {\n                    var m = \"string\";\n                    var n = b.item(k);\n                    var o = this.j(f, a, n, m);\n                    h.name = o;\n                }\n                continue;\n            }\n            var p = b.item(k);\n            if (l.knownType == 14 || l.knownType == 11 || l.knownType == 12) {\n                var q = p;\n                switch (l.knownType) {\n                    case 14:\n                        q = this.l(a, p);\n                        break;\n                    case 12:\n                        q = this.m(a, p);\n                        break;\n                    case 11:\n                        q = this.k(a, p);\n                        break;\n                }\n                if (!this.e) {\n                    this.u(a, h, k, l, q);\n                }\n            }\n            else if (typeCast(JsonDictionaryObject.$, p) !== null) {\n                var r = p;\n                var s = this.b(a, r, l.knownType);\n                f.e(s);\n                this.u(a, h, k, l, s.result);\n            }\n            else if (typeCast(JsonDictionaryArray.$, p) !== null) {\n                var t = p;\n                var u = \"string\";\n                var v = false;\n                if (l.knownType == 10) {\n                    u = l.specificExternalType;\n                }\n                if (l.knownType == 9) {\n                    v = true;\n                    u = l.collectionElementType;\n                }\n                var w = this.a(f, a, t, u);\n                if (!this.e || v) {\n                    this.u(a, h, k, l, w);\n                }\n            }\n            else {\n                var x = l.specificExternalType;\n                if (x == null && l.knownType == 3) {\n                    x = \"DateTime\";\n                }\n                if (x == null) {\n                    x = \"String\";\n                }\n                var y = p;\n                var z = this.j(f, a, y, x);\n                if (this.f) {\n                    if (stringEndsWith(l.propertyName, \"MemberPath\") || (g != null && stringEndsWith(g, \"Axis\") && l.propertyName.toLowerCase() == \"label\")) {\n                        var aa = z.toString();\n                        if (this.i != null) {\n                            z = this.i(aa);\n                        }\n                        else {\n                            if (stringStartsWith(aa, \"{\")) {\n                                if (!stringStartsWith(aa, \"{[\")) {\n                                    aa = aa.substr(1, aa.length - 2);\n                                    aa = \"{[\" + aa + \"]}\";\n                                    z = aa;\n                                }\n                            }\n                            else {\n                                if (!stringStartsWith(aa, \"[\")) {\n                                    aa = \"[\" + aa + \"]\";\n                                    z = aa;\n                                }\n                            }\n                        }\n                    }\n                }\n                if (!this.e) {\n                    this.u(a, h, k, l, z);\n                }\n            }\n        }\n        return f;\n    };\n    DescriptionSerializer.prototype.k = function (a, b) {\n        if (b == null) {\n            return null;\n        }\n        var c = NaN;\n        var d = NaN;\n        if (b.g(\"x\")) {\n            c = b.item(\"x\").value;\n        }\n        if (b.g(\"y\")) {\n            d = b.item(\"y\").value;\n        }\n        return ((function () {\n            var $ret = new PointDescription();\n            $ret.x = c;\n            $ret.y = d;\n            return $ret;\n        })());\n    };\n    DescriptionSerializer.prototype.m = function (a, b) {\n        if (b == null) {\n            return null;\n        }\n        var c = NaN;\n        var d = NaN;\n        if (b.g(\"width\")) {\n            c = b.item(\"width\").value;\n        }\n        if (b.g(\"height\")) {\n            d = b.item(\"height\").value;\n        }\n        return ((function () {\n            var $ret = new SizeDescription();\n            $ret.width = c;\n            $ret.height = d;\n            return $ret;\n        })());\n    };\n    DescriptionSerializer.prototype.l = function (a, b) {\n        if (b == null) {\n            return null;\n        }\n        var c = NaN;\n        var d = NaN;\n        var e = NaN;\n        var f = NaN;\n        if (b.g(\"left\")) {\n            c = b.item(\"left\").value;\n        }\n        if (b.g(\"top\")) {\n            d = b.item(\"top\").value;\n        }\n        if (b.g(\"width\")) {\n            e = b.item(\"width\").value;\n        }\n        if (b.g(\"height\")) {\n            f = b.item(\"height\").value;\n        }\n        return ((function () {\n            var $ret = new RectDescription();\n            $ret.left = c;\n            $ret.top = d;\n            $ret.width = e;\n            $ret.height = f;\n            return $ret;\n        })());\n    };\n    DescriptionSerializer.prototype.a = function (a, b, c, d) {\n        var e = new Array(c.items.length);\n        for (var f = 0; f < c.items.length; f++) {\n            var g = c.items[f];\n            if (typeCast(JsonDictionaryObject.$, g) !== null) {\n                var h = g;\n                var i = this.b(b, h);\n                a.e(i);\n                e[f] = i.result;\n            }\n            else if (typeCast(JsonDictionaryArray.$, g) !== null) {\n                var j = g;\n                var k = this.a(a, b, j, d);\n                e[f] = k;\n            }\n            else {\n                var l = g;\n                var m = this.j(a, b, l, d);\n                e[f] = m;\n            }\n        }\n        return e;\n    };\n    DescriptionSerializer.prototype.j = function (a, b, c, d) {\n        switch (c.e) {\n            case 1: return c.value;\n            case 3: return c.value;\n            case 0: switch (d.toLowerCase()) {\n                case \"int\": return typeGetValue(c.value);\n                case \"double\": return c.value;\n                case \"timespan\": return c.value;\n                case \"short\": return typeGetValue(c.value);\n                case \"long\": return typeGetValue(c.value);\n                case \"float\": return c.value;\n                case \"byte\": return typeGetValue(c.value);\n                default:\n                    a.d(\"unexpected target type for number: \" + d);\n                    return c.value;\n            }\n            case 2:\n                if (d.toLowerCase() == \"datetime\") {\n                    var val_ = c.value;\n                    var e = (new Date(val_));\n                    return e;\n                }\n                return c.value;\n            default:\n                a.d(\"unexpected value type\");\n                return c.value;\n        }\n    };\n    DescriptionSerializer.prototype.p = function (a, b, c) {\n        c.f(\"{\");\n        c.i();\n        c.f(\"\\\"type\\\": \\\"\" + b.h + \"\\\"\");\n        var d = b.e();\n        for (var e = 0; e < d.count; e++) {\n            var f = d._inner[e];\n            if (e >= 0) {\n                c.f(\",\");\n            }\n            this.q(a, b, f, c);\n        }\n        c.h();\n        c.f(\"}\");\n    };\n    DescriptionSerializer.prototype.n = function (a) {\n        if (a == null) {\n            return null;\n        }\n        return a.substr(0, 1).toLowerCase() + a.substr(1);\n    };\n    DescriptionSerializer.prototype.q = function (a, b, c, d) {\n        if (c.c.toLowerCase() == \"type\") {\n            return;\n        }\n        d.e(\"\\\"\" + this.n(c.c) + \"\\\": \");\n        this.t(a, b, c, c.b, d);\n    };\n    DescriptionSerializer.prototype.t = function (a, b, c, d, e) {\n        var f = 2;\n        if (c.a != null) {\n            f = c.a.knownType;\n        }\n        switch (f) {\n            case 6:\n            case 16:\n            case 10:\n                {\n                    e.e(\"[\");\n                    var g = c.b;\n                    var h = c.a.specificType;\n                    if (c.a.knownType == 6 || c.a.knownType == 16) {\n                        h = \"String\";\n                    }\n                    for (var i = 0; i < g.length; i++) {\n                        if (i > 0) {\n                            e.e(\", \");\n                        }\n                        var j = h;\n                        if (typeCast(DescriptionTreeNode.$, g[i]) !== null) {\n                            this.p(a, g[i], e);\n                        }\n                        else {\n                            this.r(a, h, g[i], e);\n                        }\n                    }\n                    e.e(\"]\");\n                }\n                break;\n            case 7:\n                this.r(a, \"Boolean\", d, e);\n                break;\n            case 9:\n                {\n                    e.e(\"[\");\n                    var k = c.b;\n                    var l = c.a.collectionElementType;\n                    for (var m = 0; m < k.length; m++) {\n                        if (m > 0) {\n                            e.e(\", \");\n                        }\n                        var n = l;\n                        if (typeCast(DescriptionTreeNode.$, k[m]) !== null) {\n                            this.p(a, k[m], e);\n                        }\n                        else {\n                            this.r(a, l, k[m], e);\n                        }\n                    }\n                    e.e(\"]\");\n                }\n                break;\n            case 4:\n            case 18:\n            case 19:\n            case 20:\n            case 5:\n            case 2:\n                this.r(a, \"String\", d, e);\n                break;\n            case 3:\n                this.r(a, \"DateTime\", d, e);\n                break;\n            case 8:\n                if (c.a.specificExternalType.toLowerCase() == \"string\") {\n                    this.r(a, \"String\", d, e);\n                }\n                else {\n                    this.p(a, d, e);\n                }\n                break;\n            case 1:\n                this.r(a, \"Double\", d, e);\n                break;\n            case 14:\n            case 12:\n            case 11:\n                this.p(a, d, e);\n                break;\n            case 21:\n                this.r(a, \"TimeSpan\", d, e);\n                break;\n            case 17:\n            case 0:\n            case 15:\n            case 13: throw new NotImplementedException(0);\n        }\n    };\n    DescriptionSerializer.prototype.r = function (a, b, c, d) {\n        switch (b.toLowerCase()) {\n            case \"string\":\n                if (c == null) {\n                    d.e(\"null\");\n                }\n                else {\n                    d.e(\"\\\"\" + stringReplace(c, \"\\\"\", \"\\\\\\\"\") + \"\\\"\");\n                }\n                break;\n            case \"number\":\n            case \"double\":\n                if (c == null) {\n                    d.e(\"null\");\n                }\n                else {\n                    if (!(typeof c === 'number')) {\n                        c = Convert.toDouble3(c);\n                    }\n                    d.e(c.toString());\n                }\n                break;\n            case \"int\":\n                if (c == null) {\n                    d.e(\"null\");\n                }\n                else {\n                    d.e(c.toString());\n                }\n                break;\n            case \"float\":\n                if (c == null) {\n                    d.e(\"null\");\n                }\n                else {\n                    d.e(c.toString());\n                }\n                break;\n            case \"long\":\n                if (c == null) {\n                    d.e(\"null\");\n                }\n                else {\n                    d.e(c.toString());\n                }\n                break;\n            case \"decimal\":\n                if (c == null) {\n                    d.e(\"null\");\n                }\n                else {\n                    d.e(c.toString());\n                }\n                break;\n            case \"timespan\":\n                if (c == null) {\n                    d.e(\"null\");\n                }\n                else {\n                    d.e(c.toString());\n                }\n                break;\n            case \"boolean\":\n                d.e(c == null ? \"false\" : c.toString().toLowerCase());\n                break;\n            case \"datetime\":\n                if (c == null) {\n                    d.e(\"null\");\n                }\n                else {\n                    var v_ = c;\n                    d.e(\"\\\"\" + (v_.toJSON()) + \"\\\"\");\n                }\n                break;\n        }\n    };\n    DescriptionSerializer.$t = markType(DescriptionSerializer, 'DescriptionSerializer');\n    return DescriptionSerializer;\n}(Base));\nexport { DescriptionSerializer };\n//# sourceMappingURL=DescriptionSerializer.js.map\n"]},"metadata":{},"sourceType":"module"}