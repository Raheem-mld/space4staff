{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { CategoryAxisBaseDescriptionMetadata } from \"./CategoryAxisBaseDescriptionMetadata\";\nimport { CategoryYAxisDescription } from \"./CategoryYAxisDescription\";\n/**\n * @hidden\n */\n\nvar CategoryYAxisDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(CategoryYAxisDescriptionMetadata, _super);\n\n  function CategoryYAxisDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  CategoryYAxisDescriptionMetadata.b = function (a) {\n    if (CategoryYAxisDescriptionMetadata.a == null) {\n      CategoryYAxisDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      CategoryYAxisDescriptionMetadata.c(CategoryYAxisDescriptionMetadata.a);\n    }\n\n    if (a.g(CategoryYAxisDescriptionMetadata.a)) {\n      return;\n    }\n\n    a.s(CategoryYAxisDescriptionMetadata.a);\n  };\n\n  CategoryYAxisDescriptionMetadata.c = function (a) {\n    CategoryAxisBaseDescriptionMetadata.c(a);\n    a.item(\"Interval\", \"Number:double\");\n    a.item(\"ActualInterval\", \"Number:double\");\n    a.item(\"MinorInterval\", \"Number:double\");\n    a.item(\"ActualMinorInterval\", \"Number:double\");\n    a.item(\"ActualIntervalChangeRef\", \"EventRef::actualIntervalChange\");\n    a.item(\"ActualMinorIntervalChangeRef\", \"EventRef::actualMinorIntervalChange\");\n  };\n\n  CategoryYAxisDescriptionMetadata.d = function (a) {\n    CategoryYAxisDescriptionMetadata.b(a);\n    a.u(\"CategoryYAxis\", function () {\n      return new CategoryYAxisDescription();\n    });\n    a.t(\"CategoryYAxis\", CategoryYAxisDescriptionMetadata.a);\n  };\n\n  CategoryYAxisDescriptionMetadata.$t = markType(CategoryYAxisDescriptionMetadata, 'CategoryYAxisDescriptionMetadata');\n  CategoryYAxisDescriptionMetadata.a = null;\n  return CategoryYAxisDescriptionMetadata;\n}(Base);\n\nexport { CategoryYAxisDescriptionMetadata };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/CategoryYAxisDescriptionMetadata.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,IAAT,EAAe,YAAf,EAAmC,QAAnC,QAAmD,QAAnD;AAEA,SAAS,YAAT,QAA6B,gBAA7B;AACA,SAAS,mCAAT,QAAoD,uCAApD;AACA,SAAS,wBAAT,QAAyC,4BAAzC;AAEA;;AAEG;;AACH,IAAA,gCAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAsD,EAAA,SAAA,CAAA,gCAAA,EAAA,MAAA,CAAA;;AAAtD,WAAA,gCAAA,GAAA;;AA2BC;;AAxBe,EAAA,gCAAA,CAAA,CAAA,GAAf,UAAiB,CAAjB,EAA0C;AACzC,QAAI,gCAAgC,CAAC,CAAjC,IAAsC,IAA1C,EAAgD;AAC/C,MAAA,gCAAgC,CAAC,CAAjC,GAAqC,IAAI,YAAJ,CAAiC,YAAjC,EAA+C,YAA/C,EAA6D,CAA7D,CAArC;AACA,MAAA,gCAAgC,CAAC,CAAjC,CAAmC,gCAAgC,CAAC,CAApE;AACA;;AACD,QAAI,CAAC,CAAC,CAAF,CAAI,gCAAgC,CAAC,CAArC,CAAJ,EAA6C;AAC5C;AACA;;AACD,IAAA,CAAC,CAAC,CAAF,CAAI,gCAAgC,CAAC,CAArC;AACA,GATc;;AAUR,EAAA,gCAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAwC;AACvC,IAAA,mCAAmC,CAAC,CAApC,CAAsC,CAAtC;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,UAAP,EAAmB,eAAnB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,gBAAP,EAAyB,eAAzB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,eAAP,EAAwB,eAAxB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,qBAAP,EAA8B,eAA9B;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,yBAAP,EAAkC,gCAAlC;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,8BAAP,EAAuC,qCAAvC;AACA,GARM;;AASA,EAAA,gCAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAkC;AACjC,IAAA,gCAAgC,CAAC,CAAjC,CAAmC,CAAnC;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,eAAJ,EAAqB,YAAA;AAAM,aAAA,IAAA,wBAAA,EAAA;AAA8B,KAAzD;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,eAAJ,EAAqB,gCAAgC,CAAC,CAAtD;AACA,GAJM;;AArBA,EAAA,gCAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,gCAAD,EAAmC,kCAAnC,CAAnB;AACQ,EAAA,gCAAA,CAAA,CAAA,GAAkC,IAAlC;AAyBhB,SAAA,gCAAA;AAAC,CA3BD,CAAsD,IAAtD,CAAA;;SAAa,gC","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { CategoryAxisBaseDescriptionMetadata } from \"./CategoryAxisBaseDescriptionMetadata\";\nimport { CategoryYAxisDescription } from \"./CategoryYAxisDescription\";\n/**\n * @hidden\n */\nvar CategoryYAxisDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(CategoryYAxisDescriptionMetadata, _super);\n    function CategoryYAxisDescriptionMetadata() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    CategoryYAxisDescriptionMetadata.b = function (a) {\n        if (CategoryYAxisDescriptionMetadata.a == null) {\n            CategoryYAxisDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n            CategoryYAxisDescriptionMetadata.c(CategoryYAxisDescriptionMetadata.a);\n        }\n        if (a.g(CategoryYAxisDescriptionMetadata.a)) {\n            return;\n        }\n        a.s(CategoryYAxisDescriptionMetadata.a);\n    };\n    CategoryYAxisDescriptionMetadata.c = function (a) {\n        CategoryAxisBaseDescriptionMetadata.c(a);\n        a.item(\"Interval\", \"Number:double\");\n        a.item(\"ActualInterval\", \"Number:double\");\n        a.item(\"MinorInterval\", \"Number:double\");\n        a.item(\"ActualMinorInterval\", \"Number:double\");\n        a.item(\"ActualIntervalChangeRef\", \"EventRef::actualIntervalChange\");\n        a.item(\"ActualMinorIntervalChangeRef\", \"EventRef::actualMinorIntervalChange\");\n    };\n    CategoryYAxisDescriptionMetadata.d = function (a) {\n        CategoryYAxisDescriptionMetadata.b(a);\n        a.u(\"CategoryYAxis\", function () { return new CategoryYAxisDescription(); });\n        a.t(\"CategoryYAxis\", CategoryYAxisDescriptionMetadata.a);\n    };\n    CategoryYAxisDescriptionMetadata.$t = markType(CategoryYAxisDescriptionMetadata, 'CategoryYAxisDescriptionMetadata');\n    CategoryYAxisDescriptionMetadata.a = null;\n    return CategoryYAxisDescriptionMetadata;\n}(Base));\nexport { CategoryYAxisDescriptionMetadata };\n//# sourceMappingURL=CategoryYAxisDescriptionMetadata.js.map\n"]},"metadata":{},"sourceType":"module"}