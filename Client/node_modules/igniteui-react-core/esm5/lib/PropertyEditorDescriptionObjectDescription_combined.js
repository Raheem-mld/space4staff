/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
var PropertyEditorDescriptionObjectDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(PropertyEditorDescriptionObjectDescription, _super);
    function PropertyEditorDescriptionObjectDescription() {
        var _this = _super.call(this) || this;
        _this.h = null;
        _this.f = null;
        return _this;
    }
    PropertyEditorDescriptionObjectDescription.prototype.get_type = function () {
        return "PropertyEditorDescriptionObject";
    };
    Object.defineProperty(PropertyEditorDescriptionObjectDescription.prototype, "type", {
        get: function () {
            return this.get_type();
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PropertyEditorDescriptionObjectDescription.prototype, "descriptionType", {
        get: function () {
            return this.h;
        },
        set: function (a) {
            this.h = a;
            this.e("DescriptionType");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PropertyEditorDescriptionObjectDescription.prototype, "properties", {
        get: function () {
            return this.f;
        },
        set: function (a) {
            this.f = a;
            this.e("Properties");
        },
        enumerable: false,
        configurable: true
    });
    PropertyEditorDescriptionObjectDescription.$t = markType(PropertyEditorDescriptionObjectDescription, 'PropertyEditorDescriptionObjectDescription', Description.$);
    return PropertyEditorDescriptionObjectDescription;
}(Description));
export { PropertyEditorDescriptionObjectDescription };
/**
 * @hidden
 */
var PropertyEditorPropertyDescriptionDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(PropertyEditorPropertyDescriptionDescription, _super);
    function PropertyEditorPropertyDescriptionDescription() {
        var _this = _super.call(this) || this;
        _this.w = null;
        _this.u = null;
        _this.y = null;
        _this.v = null;
        _this.n = false;
        _this.t = null;
        _this.g = null;
        _this.h = null;
        _this.p = null;
        _this.l = null;
        _this.f = null;
        _this.r = null;
        _this.s = null;
        _this.x = null;
        return _this;
    }
    PropertyEditorPropertyDescriptionDescription.prototype.get_type = function () {
        return "PropertyEditorPropertyDescription";
    };
    Object.defineProperty(PropertyEditorPropertyDescriptionDescription.prototype, "type", {
        get: function () {
            return this.get_type();
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PropertyEditorPropertyDescriptionDescription.prototype, "propertyPath", {
        get: function () {
            return this.w;
        },
        set: function (a) {
            this.w = a;
            this.e("PropertyPath");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PropertyEditorPropertyDescriptionDescription.prototype, "label", {
        get: function () {
            return this.u;
        },
        set: function (a) {
            this.u = a;
            this.e("Label");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PropertyEditorPropertyDescriptionDescription.prototype, "valueType", {
        get: function () {
            return this.y;
        },
        set: function (a) {
            this.y = a;
            this.e("ValueType");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PropertyEditorPropertyDescriptionDescription.prototype, "propertyDescriptionType", {
        get: function () {
            return this.v;
        },
        set: function (a) {
            this.v = a;
            this.e("PropertyDescriptionType");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PropertyEditorPropertyDescriptionDescription.prototype, "shouldOverrideDefaultEditor", {
        get: function () {
            return this.n;
        },
        set: function (a) {
            this.n = a;
            this.e("ShouldOverrideDefaultEditor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PropertyEditorPropertyDescriptionDescription.prototype, "elementDescriptionType", {
        get: function () {
            return this.t;
        },
        set: function (a) {
            this.t = a;
            this.e("ElementDescriptionType");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PropertyEditorPropertyDescriptionDescription.prototype, "dropDownNames", {
        get: function () {
            return this.g;
        },
        set: function (a) {
            this.g = a;
            this.e("DropDownNames");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PropertyEditorPropertyDescriptionDescription.prototype, "dropDownValues", {
        get: function () {
            return this.h;
        },
        set: function (a) {
            this.h = a;
            this.e("DropDownValues");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PropertyEditorPropertyDescriptionDescription.prototype, "primitiveValue", {
        get: function () {
            return this.p;
        },
        set: function (a) {
            this.p = a;
            this.e("PrimitiveValue");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PropertyEditorPropertyDescriptionDescription.prototype, "complexValue", {
        get: function () {
            return this.l;
        },
        set: function (a) {
            this.l = a;
            this.e("ComplexValue");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PropertyEditorPropertyDescriptionDescription.prototype, "complexValues", {
        get: function () {
            return this.f;
        },
        set: function (a) {
            this.f = a;
            this.e("ComplexValues");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PropertyEditorPropertyDescriptionDescription.prototype, "buttonClickedRef", {
        get: function () {
            return this.r;
        },
        set: function (a) {
            this.r = a;
            this.e("ButtonClickedRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PropertyEditorPropertyDescriptionDescription.prototype, "changedRef", {
        get: function () {
            return this.s;
        },
        set: function (a) {
            this.s = a;
            this.e("ChangedRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PropertyEditorPropertyDescriptionDescription.prototype, "targetPropertyUpdatingRef", {
        get: function () {
            return this.x;
        },
        set: function (a) {
            this.x = a;
            this.e("TargetPropertyUpdatingRef");
        },
        enumerable: false,
        configurable: true
    });
    PropertyEditorPropertyDescriptionDescription.$t = markType(PropertyEditorPropertyDescriptionDescription, 'PropertyEditorPropertyDescriptionDescription', Description.$);
    return PropertyEditorPropertyDescriptionDescription;
}(Description));
export { PropertyEditorPropertyDescriptionDescription };
//# sourceMappingURL=PropertyEditorDescriptionObjectDescription_combined.js.map
