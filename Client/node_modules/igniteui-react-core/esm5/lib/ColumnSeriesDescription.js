/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { HorizontalAnchoredCategorySeriesDescription } from "./HorizontalAnchoredCategorySeriesDescription";
import { markType } from "./type";
/**
 * @hidden
 */
var ColumnSeriesDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(ColumnSeriesDescription, _super);
    function ColumnSeriesDescription() {
        var _this = _super.call(this) || this;
        _this.eh = 0;
        _this.ei = 0;
        _this.el = null;
        return _this;
    }
    ColumnSeriesDescription.prototype.get_type = function () {
        return "ColumnSeries";
    };
    Object.defineProperty(ColumnSeriesDescription.prototype, "radiusX", {
        get: function () {
            return this.eh;
        },
        set: function (a) {
            this.eh = a;
            this.e("RadiusX");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ColumnSeriesDescription.prototype, "radiusY", {
        get: function () {
            return this.ei;
        },
        set: function (a) {
            this.ei = a;
            this.e("RadiusY");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ColumnSeriesDescription.prototype, "consolidatedColumnVerticalPosition", {
        get: function () {
            return this.el;
        },
        set: function (a) {
            this.el = a;
            this.e("ConsolidatedColumnVerticalPosition");
        },
        enumerable: false,
        configurable: true
    });
    ColumnSeriesDescription.$t = markType(ColumnSeriesDescription, 'ColumnSeriesDescription', HorizontalAnchoredCategorySeriesDescription.$);
    return ColumnSeriesDescription;
}(HorizontalAnchoredCategorySeriesDescription));
export { ColumnSeriesDescription };
//# sourceMappingURL=ColumnSeriesDescription.js.map
