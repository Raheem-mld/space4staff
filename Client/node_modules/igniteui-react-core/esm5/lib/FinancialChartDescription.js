/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { XYChartDescription } from "./XYChartDescription";
import { markType } from "./type";
/**
 * @hidden
 */
var FinancialChartDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(FinancialChartDescription, _super);
    function FinancialChartDescription() {
        var _this = _super.call(this) || this;
        _this.l5 = null;
        _this.l7 = null;
        _this.l4 = null;
        _this.l2 = null;
        _this.k1 = 0;
        _this.kh = false;
        _this.k5 = 0;
        _this.kn = false;
        _this.lu = 0;
        _this.k7 = 0;
        _this.k9 = 0;
        _this.k8 = 0;
        _this.la = 0;
        _this.l6 = null;
        _this.l8 = null;
        _this.ma = null;
        _this.kj = false;
        _this.l3 = null;
        _this.l9 = null;
        _this.kl = false;
        _this.jt = null;
        _this.jy = null;
        _this.km = false;
        _this.k4 = 0;
        _this.mb = null;
        _this.ju = null;
        _this.jv = null;
        _this.jw = null;
        _this.jx = null;
        _this.j1 = null;
        _this.j0 = null;
        _this.js = null;
        _this.jq = null;
        _this.k6 = 0;
        _this.k3 = 0;
        _this.k2 = 0;
        _this.k0 = 0;
        _this.jr = null;
        _this.lq = 0;
        _this.kz = 0;
        _this.lt = 0;
        _this.lr = 0;
        _this.lp = 0;
        _this.ls = 0;
        _this.jz = null;
        _this.jp = null;
        _this.kk = false;
        _this.mc = null;
        _this.lb = 0;
        _this.ki = false;
        _this.kw = new Date();
        _this.kv = new Date();
        _this.j2 = null;
        _this.l1 = null;
        return _this;
    }
    Object.defineProperty(FinancialChartDescription.prototype, "tooltipTemplateRef", {
        get: function () {
            return this.l5;
        },
        set: function (a) {
            this.l5 = a;
            this.e("TooltipTemplateRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "width", {
        get: function () {
            return this.l7;
        },
        set: function (a) {
            this.l7 = a;
            this.e("Width");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "height", {
        get: function () {
            return this.l4;
        },
        set: function (a) {
            this.l4 = a;
            this.e("Height");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "background", {
        get: function () {
            return this.l2;
        },
        set: function (a) {
            this.l2 = a;
            this.e("Background");
        },
        enumerable: false,
        configurable: true
    });
    FinancialChartDescription.prototype.get_type = function () {
        return "FinancialChart";
    };
    Object.defineProperty(FinancialChartDescription.prototype, "leftMargin", {
        get: function () {
            return this.k1;
        },
        set: function (a) {
            this.k1 = a;
            this.e("LeftMargin");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "isHorizontalZoomEnabled", {
        get: function () {
            return this.kh;
        },
        set: function (a) {
            this.kh = a;
            this.e("IsHorizontalZoomEnabled");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "toolbarHeight", {
        get: function () {
            return this.k5;
        },
        set: function (a) {
            this.k5 = a;
            this.e("ToolbarHeight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "yAxisIsLogarithmic", {
        get: function () {
            return this.kn;
        },
        set: function (a) {
            this.kn = a;
            this.e("YAxisIsLogarithmic");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "yAxisLogarithmBase", {
        get: function () {
            return this.lu;
        },
        set: function (a) {
            this.lu = a;
            this.e("YAxisLogarithmBase");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "yAxisInterval", {
        get: function () {
            return this.k7;
        },
        set: function (a) {
            this.k7 = a;
            this.e("YAxisInterval");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "yAxisMinimumValue", {
        get: function () {
            return this.k9;
        },
        set: function (a) {
            this.k9 = a;
            this.e("YAxisMinimumValue");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "yAxisMaximumValue", {
        get: function () {
            return this.k8;
        },
        set: function (a) {
            this.k8 = a;
            this.e("YAxisMaximumValue");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "yAxisMinorInterval", {
        get: function () {
            return this.la;
        },
        set: function (a) {
            this.la = a;
            this.e("YAxisMinorInterval");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "volumeType", {
        get: function () {
            return this.l6;
        },
        set: function (a) {
            this.l6 = a;
            this.e("VolumeType");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "xAxisMode", {
        get: function () {
            return this.l8;
        },
        set: function (a) {
            this.l8 = a;
            this.e("XAxisMode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "yAxisMode", {
        get: function () {
            return this.ma;
        },
        set: function (a) {
            this.ma = a;
            this.e("YAxisMode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "isToolbarVisible", {
        get: function () {
            return this.kj;
        },
        set: function (a) {
            this.kj = a;
            this.e("IsToolbarVisible");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "chartType", {
        get: function () {
            return this.l3;
        },
        set: function (a) {
            this.l3 = a;
            this.e("ChartType");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "yAxisLabelHorizontalAlignment", {
        get: function () {
            return this.l9;
        },
        set: function (a) {
            this.l9 = a;
            this.e("YAxisLabelHorizontalAlignment");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "isWindowSyncedToVisibleRange", {
        get: function () {
            return this.kl;
        },
        set: function (a) {
            this.kl = a;
            this.e("IsWindowSyncedToVisibleRange");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "indicatorTypes", {
        get: function () {
            return this.jt;
        },
        set: function (a) {
            this.jt = a;
            this.e("IndicatorTypes");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "overlayTypes", {
        get: function () {
            return this.jy;
        },
        set: function (a) {
            this.jy = a;
            this.e("OverlayTypes");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "yAxisAbbreviateLargeNumbers", {
        get: function () {
            return this.km;
        },
        set: function (a) {
            this.km = a;
            this.e("YAxisAbbreviateLargeNumbers");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "resolution", {
        get: function () {
            return this.k4;
        },
        set: function (a) {
            this.k4 = a;
            this.e("Resolution");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "zoomSliderType", {
        get: function () {
            return this.mb;
        },
        set: function (a) {
            this.mb = a;
            this.e("ZoomSliderType");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "negativeBrushes", {
        get: function () {
            return this.ju;
        },
        set: function (a) {
            this.ju = a;
            this.e("NegativeBrushes");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "negativeOutlines", {
        get: function () {
            return this.jv;
        },
        set: function (a) {
            this.jv = a;
            this.e("NegativeOutlines");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "overlayBrushes", {
        get: function () {
            return this.jw;
        },
        set: function (a) {
            this.jw = a;
            this.e("OverlayBrushes");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "overlayOutlines", {
        get: function () {
            return this.jx;
        },
        set: function (a) {
            this.jx = a;
            this.e("OverlayOutlines");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "volumeOutlines", {
        get: function () {
            return this.j1;
        },
        set: function (a) {
            this.j1 = a;
            this.e("VolumeOutlines");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "volumeBrushes", {
        get: function () {
            return this.j0;
        },
        set: function (a) {
            this.j0 = a;
            this.e("VolumeBrushes");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "indicatorNegativeBrushes", {
        get: function () {
            return this.js;
        },
        set: function (a) {
            this.js = a;
            this.e("IndicatorNegativeBrushes");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "indicatorBrushes", {
        get: function () {
            return this.jq;
        },
        set: function (a) {
            this.jq = a;
            this.e("IndicatorBrushes");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "volumeThickness", {
        get: function () {
            return this.k6;
        },
        set: function (a) {
            this.k6 = a;
            this.e("VolumeThickness");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "overlayThickness", {
        get: function () {
            return this.k3;
        },
        set: function (a) {
            this.k3 = a;
            this.e("OverlayThickness");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "overlayMultiplier", {
        get: function () {
            return this.k2;
        },
        set: function (a) {
            this.k2 = a;
            this.e("OverlayMultiplier");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "indicatorThickness", {
        get: function () {
            return this.k0;
        },
        set: function (a) {
            this.k0 = a;
            this.e("IndicatorThickness");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "indicatorDisplayTypes", {
        get: function () {
            return this.jr;
        },
        set: function (a) {
            this.jr = a;
            this.e("IndicatorDisplayTypes");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "indicatorPeriod", {
        get: function () {
            return this.lq;
        },
        set: function (a) {
            this.lq = a;
            this.e("IndicatorPeriod");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "indicatorMultiplier", {
        get: function () {
            return this.kz;
        },
        set: function (a) {
            this.kz = a;
            this.e("IndicatorMultiplier");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "indicatorSmoothingPeriod", {
        get: function () {
            return this.lt;
        },
        set: function (a) {
            this.lt = a;
            this.e("IndicatorSmoothingPeriod");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "indicatorShortPeriod", {
        get: function () {
            return this.lr;
        },
        set: function (a) {
            this.lr = a;
            this.e("IndicatorShortPeriod");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "indicatorLongPeriod", {
        get: function () {
            return this.lp;
        },
        set: function (a) {
            this.lp = a;
            this.e("IndicatorLongPeriod");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "indicatorSignalPeriod", {
        get: function () {
            return this.ls;
        },
        set: function (a) {
            this.ls = a;
            this.e("IndicatorSignalPeriod");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "rangeSelectorOptions", {
        get: function () {
            return this.jz;
        },
        set: function (a) {
            this.jz = a;
            this.e("RangeSelectorOptions");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "customIndicatorNames", {
        get: function () {
            return this.jp;
        },
        set: function (a) {
            this.jp = a;
            this.e("CustomIndicatorNames");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "isVerticalZoomEnabled", {
        get: function () {
            return this.kk;
        },
        set: function (a) {
            this.kk = a;
            this.e("IsVerticalZoomEnabled");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "zoomSliderXAxisMajorStroke", {
        get: function () {
            return this.mc;
        },
        set: function (a) {
            this.mc = a;
            this.e("ZoomSliderXAxisMajorStroke");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "zoomSliderXAxisMajorStrokeThickness", {
        get: function () {
            return this.lb;
        },
        set: function (a) {
            this.lb = a;
            this.e("ZoomSliderXAxisMajorStrokeThickness");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "isLegendVisible", {
        get: function () {
            return this.ki;
        },
        set: function (a) {
            this.ki = a;
            this.e("IsLegendVisible");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "xAxisMinimumValue", {
        get: function () {
            return this.kw;
        },
        set: function (a) {
            this.kw = a;
            this.e("XAxisMinimumValue");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "xAxisMaximumValue", {
        get: function () {
            return this.kv;
        },
        set: function (a) {
            this.kv = a;
            this.e("XAxisMaximumValue");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "xAxisBreaks", {
        get: function () {
            return this.j2;
        },
        set: function (a) {
            this.j2 = a;
            this.e("XAxisBreaks");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "applyCustomIndicatorsRef", {
        get: function () {
            return this.l1;
        },
        set: function (a) {
            this.l1 = a;
            this.e("ApplyCustomIndicatorsRef");
        },
        enumerable: false,
        configurable: true
    });
    FinancialChartDescription.$t = markType(FinancialChartDescription, 'FinancialChartDescription', XYChartDescription.$);
    return FinancialChartDescription;
}(XYChartDescription));
export { FinancialChartDescription };
//# sourceMappingURL=FinancialChartDescription.js.map
