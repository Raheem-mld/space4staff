import { MarkerSeriesDescription } from "./MarkerSeriesDescription";
import { Type } from "./type";
/**
 * @hidden
 */
export declare abstract class ScatterBaseDescription extends MarkerSeriesDescription {
    static $t: Type;
    protected get_type(): string;
    constructor();
    private d5;
    get xAxisRef(): string;
    set xAxisRef(a: string);
    private d7;
    get yAxisRef(): string;
    set yAxisRef(a: string);
    private d6;
    get xMemberPath(): string;
    set xMemberPath(a: string);
    private d8;
    get yMemberPath(): string;
    set yMemberPath(a: string);
    private d4;
    get trendLineType(): string;
    set trendLineType(a: string);
    private d3;
    get trendLineBrush(): string;
    set trendLineBrush(a: string);
    private dy;
    get actualTrendLineBrush(): string;
    set actualTrendLineBrush(a: string);
    private dm;
    get trendLineThickness(): number;
    set trendLineThickness(a: number);
    private dr;
    get trendLinePeriod(): number;
    set trendLinePeriod(a: number);
    private d2;
    get markerCollisionAvoidance(): string;
    set markerCollisionAvoidance(a: string);
    private ds;
    get trendLineZIndex(): number;
    set trendLineZIndex(a: number);
    private dq;
    get maximumMarkers(): number;
    set maximumMarkers(a: number);
    private d1;
    get itemSearchMode(): string;
    set itemSearchMode(a: string);
    private dp;
    get itemSearchThreshold(): number;
    set itemSearchThreshold(a: number);
    private dx;
    get actualItemSearchMode(): string;
    set actualItemSearchMode(a: string);
    private dj;
    get isCustomScatterStyleAllowed(): boolean;
    set isCustomScatterStyleAllowed(a: boolean);
    private di;
    get isCustomScatterMarkerStyleAllowed(): boolean;
    set isCustomScatterMarkerStyleAllowed(a: boolean);
    private d0;
    get assigningScatterStyleRef(): string;
    set assigningScatterStyleRef(a: string);
    private dz;
    get assigningScatterMarkerStyleRef(): string;
    set assigningScatterMarkerStyleRef(a: string);
}
