import { EventProxy } from "./EventProxy";
import { DomWrapper, DomRenderer, NormalizedEvent } from "./dom";
import { Point, Type } from "./type";
import { Rect } from "./Rect";
import { Key } from "./Key";
import { List$1 } from "./List$1";
/**
 * @hidden
 */
export declare abstract class BaseDOMEventProxy extends EventProxy {
    static $t: Type;
    protected bz: DomWrapper;
    d(): EventProxy;
    static get bt(): boolean;
    bq: boolean;
    protected bs: boolean;
    bf(a: DomWrapper): Rect;
    bm(e_: NormalizedEvent): boolean;
    protected by: DomRenderer;
    protected cp(a: NormalizedEvent): void;
    private bl;
    static bo: boolean;
    static bp: boolean;
    private bj;
    protected cl(): void;
    protected static co(source_: any): void;
    protected static ci(source_: any): void;
    protected cj(): void;
    protected as(): void;
    static b7: number;
    static b4: number;
    protected b6(): number;
    protected b5(): number;
    static cn(e_: NormalizedEvent): void;
    static cz(a: DomWrapper): Rect;
    private bw;
    private bx;
    private bu;
    private bv;
    private b0;
    protected cy: Point;
    protected cx: Point;
    protected get b3(): number;
    protected set b3(a: number);
    protected cs(a: NormalizedEvent): void;
    protected ct(e_: NormalizedEvent): void;
    protected ch(e_: NormalizedEvent): void;
    protected cf(e_: NormalizedEvent): void;
    private bi;
    private b1;
    protected cm(): void;
    protected b8(): void;
    protected ck(): void;
    protected bn: boolean;
    private bk;
    protected get br(): boolean;
    protected set br(a: boolean);
    protected cd(a: NormalizedEvent): void;
    protected ce(a: NormalizedEvent): void;
    protected cq(a: NormalizedEvent): void;
    private bh;
    protected cc(a: NormalizedEvent): void;
    protected cu(a: NormalizedEvent): void;
    protected cg(a: NormalizedEvent): void;
    protected b9(a: NormalizedEvent): void;
    protected cb(a: NormalizedEvent): void;
    protected cw(a: NormalizedEvent): Key;
    static cv(a: NormalizedEvent): Key;
    protected ca(a: NormalizedEvent, b: boolean): void;
    protected cr(a: NormalizedEvent): void;
    be(): Point;
}
/**
 * @hidden
 */
export declare class DOMEventProxy extends BaseDOMEventProxy {
    static $t: Type;
    private static c8;
    private c9;
    private db;
    private c1;
    da: any;
    constructor(a: DomWrapper, b: DomRenderer, c: boolean);
    private c3;
    dc(a: any, b: string, c: List$1<() => void>): void;
    aq(a: any, b: string): void;
    private dl;
    private dg;
    private dh;
    private di;
    private dj;
    private dk;
    private df;
    private dd;
    private de;
    private dy;
    private dp;
    private c7;
    private dz;
    private c5;
    private c6;
    private c4;
    private du;
    private dr;
    private dv;
    ds(): void;
    private c0;
    private dx;
    private dn;
    private c2;
    private dm;
    private dt;
    private dw;
    private dq;
    bc(a: any, b: string): void;
    ar(): void;
}
