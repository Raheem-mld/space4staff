/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
export let WebButtonBaseDescription = /*@__PURE__*/ (() => {
    class WebButtonBaseDescription extends Description {
        constructor() {
            super();
            this.i = null;
            this.l = null;
            this.j = null;
            this.o = null;
            this.m = null;
            this.f = false;
            this.n = null;
            this.k = null;
            this.h = null;
        }
        get_type() {
            return "WebButtonBase";
        }
        get type() {
            return this.get_type();
        }
        get displayType() {
            return this.i;
        }
        set displayType(a) {
            this.i = a;
            this.e("DisplayType");
        }
        get href() {
            return this.l;
        }
        set href(a) {
            this.l = a;
            this.e("Href");
        }
        get download() {
            return this.j;
        }
        set download(a) {
            this.j = a;
            this.e("Download");
        }
        get target() {
            return this.o;
        }
        set target(a) {
            this.o = a;
            this.e("Target");
        }
        get rel() {
            return this.m;
        }
        set rel(a) {
            this.m = a;
            this.e("Rel");
        }
        get disabled() {
            return this.f;
        }
        set disabled(a) {
            this.f = a;
            this.e("Disabled");
        }
        get size() {
            return this.n;
        }
        set size(a) {
            this.n = a;
            this.e("Size");
        }
        get focusRef() {
            return this.k;
        }
        set focusRef(a) {
            this.k = a;
            this.e("FocusRef");
        }
        get blurRef() {
            return this.h;
        }
        set blurRef(a) {
            this.h = a;
            this.e("BlurRef");
        }
    }
    WebButtonBaseDescription.$t = /*@__PURE__*/ markType(WebButtonBaseDescription, 'WebButtonBaseDescription', Description.$);
    return WebButtonBaseDescription;
})();
//# sourceMappingURL=WebButtonBaseDescription.js.map
