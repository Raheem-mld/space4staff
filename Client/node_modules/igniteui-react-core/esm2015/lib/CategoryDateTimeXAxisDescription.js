/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { TimeAxisBaseDescription } from "./TimeAxisBaseDescription";
import { markType } from "./type";
/**
 * @hidden
 */
export let CategoryDateTimeXAxisDescription = /*@__PURE__*/ (() => {
    class CategoryDateTimeXAxisDescription extends TimeAxisBaseDescription {
        constructor() {
            super();
            this.ed = null;
            this.d5 = 0;
            this.d3 = 0;
            this.d6 = 0;
            this.d4 = 0;
            this.eb = null;
            this.ec = null;
        }
        get_type() {
            return "CategoryDateTimeXAxis";
        }
        get displayType() {
            return this.ed;
        }
        set displayType(a) {
            this.ed = a;
            this.e("DisplayType");
        }
        get interval() {
            return this.d5;
        }
        set interval(a) {
            this.d5 = a;
            this.e("Interval");
        }
        get actualInterval() {
            return this.d3;
        }
        set actualInterval(a) {
            this.d3 = a;
            this.e("ActualInterval");
        }
        get minorInterval() {
            return this.d6;
        }
        set minorInterval(a) {
            this.d6 = a;
            this.e("MinorInterval");
        }
        get actualMinorInterval() {
            return this.d4;
        }
        set actualMinorInterval(a) {
            this.d4 = a;
            this.e("ActualMinorInterval");
        }
        get actualIntervalChangeRef() {
            return this.eb;
        }
        set actualIntervalChangeRef(a) {
            this.eb = a;
            this.e("ActualIntervalChangeRef");
        }
        get actualMinorIntervalChangeRef() {
            return this.ec;
        }
        set actualMinorIntervalChangeRef(a) {
            this.ec = a;
            this.e("ActualMinorIntervalChangeRef");
        }
    }
    CategoryDateTimeXAxisDescription.$t = /*@__PURE__*/ markType(CategoryDateTimeXAxisDescription, 'CategoryDateTimeXAxisDescription', TimeAxisBaseDescription.$);
    return CategoryDateTimeXAxisDescription;
})();
//# sourceMappingURL=CategoryDateTimeXAxisDescription.js.map
