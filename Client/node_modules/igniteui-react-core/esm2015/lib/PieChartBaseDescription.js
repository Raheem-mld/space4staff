/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
export let PieChartBaseDescription = /*@__PURE__*/ (() => {
    class PieChartBaseDescription extends Description {
        constructor() {
            super();
            this.ch = null;
            this.bg = null;
            this.al = 0;
            this.bi = null;
            this.bh = null;
            this.bf = null;
            this.am = 0;
            this.ci = null;
            this.bo = null;
            this.bw = null;
            this.bq = null;
            this.bp = null;
            this.bn = null;
            this.be = null;
            this.bd = null;
            this.bs = null;
            this.br = null;
            this.ao = 0;
            this.ar = 0;
            this.b2 = null;
            this.b1 = null;
            this.ak = 0;
            this.at = 0;
            this.aa = false;
            this.z = false;
            this.i = null;
            this.by = null;
            this.an = 0;
            this.aw = 0;
            this.cf = null;
            this.bz = null;
            this.b0 = null;
            this.aq = 0;
            this.ap = 0;
            this.b8 = null;
            this.b9 = null;
            this.av = 0;
            this.au = 0;
            this.h = null;
            this.f = null;
            this.n = null;
            this.g = null;
            this.bm = null;
            this.j = null;
            this.b3 = null;
            this.m = null;
            this.bv = null;
            this.k = null;
            this.bx = null;
            this.l = null;
            this.bu = null;
            this.bt = null;
            this.ab = false;
            this.ac = false;
            this.ad = false;
            this.bj = null;
            this.bk = null;
            this.as = 0;
            this.aj = 0;
            this.ca = null;
            this.bb = null;
            this.o = null;
            this.cg = null;
            this.bl = null;
            this.b5 = null;
            this.b7 = null;
            this.b4 = null;
            this.b6 = null;
            this.cb = null;
            this.cc = null;
            this.ce = null;
            this.cd = null;
        }
        get tooltipTemplateRef() {
            return this.ch;
        }
        set tooltipTemplateRef(a) {
            this.ch = a;
            this.e("TooltipTemplateRef");
        }
        get fontFamily() {
            return this.bg;
        }
        set fontFamily(a) {
            this.bg = a;
            this.e("FontFamily");
        }
        get fontSize() {
            return this.al;
        }
        set fontSize(a) {
            this.al = a;
            this.e("FontSize");
        }
        get fontWeight() {
            return this.bi;
        }
        set fontWeight(a) {
            this.bi = a;
            this.e("FontWeight");
        }
        get fontStyle() {
            return this.bh;
        }
        set fontStyle(a) {
            this.bh = a;
            this.e("FontStyle");
        }
        get_type() {
            return "PieChartBase";
        }
        get type() {
            return this.get_type();
        }
        get dataSourceRef() {
            return this.bf;
        }
        set dataSourceRef(a) {
            this.bf = a;
            this.e("DataSourceRef");
        }
        get innerExtent() {
            return this.am;
        }
        set innerExtent(a) {
            this.am = a;
            this.e("InnerExtent");
        }
        get valueMemberPath() {
            return this.ci;
        }
        set valueMemberPath(a) {
            this.ci = a;
            this.e("ValueMemberPath");
        }
        get labelMemberPath() {
            return this.bo;
        }
        set labelMemberPath(a) {
            this.bo = a;
            this.e("LabelMemberPath");
        }
        get legendLabelMemberPath() {
            return this.bw;
        }
        set legendLabelMemberPath(a) {
            this.bw = a;
            this.e("LegendLabelMemberPath");
        }
        get labelsPosition() {
            return this.bq;
        }
        set labelsPosition(a) {
            this.bq = a;
            this.e("LabelsPosition");
        }
        get labelOuterColor() {
            return this.bp;
        }
        set labelOuterColor(a) {
            this.bp = a;
            this.e("LabelOuterColor");
        }
        get labelInnerColor() {
            return this.bn;
        }
        set labelInnerColor(a) {
            this.bn = a;
            this.e("LabelInnerColor");
        }
        get actualLabelOuterColor() {
            return this.be;
        }
        set actualLabelOuterColor(a) {
            this.be = a;
            this.e("ActualLabelOuterColor");
        }
        get actualLabelInnerColor() {
            return this.bd;
        }
        set actualLabelInnerColor(a) {
            this.bd = a;
            this.e("ActualLabelInnerColor");
        }
        get leaderLineVisibility() {
            return this.bs;
        }
        set leaderLineVisibility(a) {
            this.bs = a;
            this.e("LeaderLineVisibility");
        }
        get leaderLineType() {
            return this.br;
        }
        set leaderLineType(a) {
            this.br = a;
            this.e("LeaderLineType");
        }
        get leaderLineMargin() {
            return this.ao;
        }
        set leaderLineMargin(a) {
            this.ao = a;
            this.e("LeaderLineMargin");
        }
        get othersCategoryThreshold() {
            return this.ar;
        }
        set othersCategoryThreshold(a) {
            this.ar = a;
            this.e("OthersCategoryThreshold");
        }
        get othersCategoryType() {
            return this.b2;
        }
        set othersCategoryType(a) {
            this.b2 = a;
            this.e("OthersCategoryType");
        }
        get othersCategoryText() {
            return this.b1;
        }
        set othersCategoryText(a) {
            this.b1 = a;
            this.e("OthersCategoryText");
        }
        get explodedRadius() {
            return this.ak;
        }
        set explodedRadius(a) {
            this.ak = a;
            this.e("ExplodedRadius");
        }
        get radiusFactor() {
            return this.at;
        }
        set radiusFactor(a) {
            this.at = a;
            this.e("RadiusFactor");
        }
        get allowSliceSelection() {
            return this.aa;
        }
        set allowSliceSelection(a) {
            this.aa = a;
            this.e("AllowSliceSelection");
        }
        get allowSliceExplosion() {
            return this.z;
        }
        set allowSliceExplosion(a) {
            this.z = a;
            this.e("AllowSliceExplosion");
        }
        get explodedSlices() {
            return this.i;
        }
        set explodedSlices(a) {
            this.i = a;
            this.e("ExplodedSlices");
        }
        get legendRef() {
            return this.by;
        }
        set legendRef(a) {
            this.by = a;
            this.e("LegendRef");
        }
        get labelExtent() {
            return this.an;
        }
        set labelExtent(a) {
            this.an = a;
            this.e("LabelExtent");
        }
        get startAngle() {
            return this.aw;
        }
        set startAngle(a) {
            this.aw = a;
            this.e("StartAngle");
        }
        get sweepDirection() {
            return this.cf;
        }
        set sweepDirection(a) {
            this.cf = a;
            this.e("SweepDirection");
        }
        get othersCategoryFill() {
            return this.bz;
        }
        set othersCategoryFill(a) {
            this.bz = a;
            this.e("OthersCategoryFill");
        }
        get othersCategoryStroke() {
            return this.b0;
        }
        set othersCategoryStroke(a) {
            this.b0 = a;
            this.e("OthersCategoryStroke");
        }
        get othersCategoryStrokeThickness() {
            return this.aq;
        }
        set othersCategoryStrokeThickness(a) {
            this.aq = a;
            this.e("OthersCategoryStrokeThickness");
        }
        get othersCategoryOpacity() {
            return this.ap;
        }
        set othersCategoryOpacity(a) {
            this.ap = a;
            this.e("OthersCategoryOpacity");
        }
        get selectedSliceFill() {
            return this.b8;
        }
        set selectedSliceFill(a) {
            this.b8 = a;
            this.e("SelectedSliceFill");
        }
        get selectedSliceStroke() {
            return this.b9;
        }
        set selectedSliceStroke(a) {
            this.b9 = a;
            this.e("SelectedSliceStroke");
        }
        get selectedSliceStrokeThickness() {
            return this.av;
        }
        set selectedSliceStrokeThickness(a) {
            this.av = a;
            this.e("SelectedSliceStrokeThickness");
        }
        get selectedSliceOpacity() {
            return this.au;
        }
        set selectedSliceOpacity(a) {
            this.au = a;
            this.e("SelectedSliceOpacity");
        }
        get brushes() {
            return this.h;
        }
        set brushes(a) {
            this.h = a;
            this.e("Brushes");
        }
        get actualBrushes() {
            return this.f;
        }
        set actualBrushes(a) {
            this.f = a;
            this.e("ActualBrushes");
        }
        get outlines() {
            return this.n;
        }
        set outlines(a) {
            this.n = a;
            this.e("Outlines");
        }
        get actualOutlines() {
            return this.g;
        }
        set actualOutlines(a) {
            this.g = a;
            this.e("ActualOutlines");
        }
        get labelFormat() {
            return this.bm;
        }
        set labelFormat(a) {
            this.bm = a;
            this.e("LabelFormat");
        }
        get labelFormatSpecifiers() {
            return this.j;
        }
        set labelFormatSpecifiers(a) {
            this.j = a;
            this.e("LabelFormatSpecifiers");
        }
        get othersLabelFormat() {
            return this.b3;
        }
        set othersLabelFormat(a) {
            this.b3 = a;
            this.e("OthersLabelFormat");
        }
        get othersLabelFormatSpecifiers() {
            return this.m;
        }
        set othersLabelFormatSpecifiers(a) {
            this.m = a;
            this.e("OthersLabelFormatSpecifiers");
        }
        get legendLabelFormat() {
            return this.bv;
        }
        set legendLabelFormat(a) {
            this.bv = a;
            this.e("LegendLabelFormat");
        }
        get legendLabelFormatSpecifiers() {
            return this.k;
        }
        set legendLabelFormatSpecifiers(a) {
            this.k = a;
            this.e("LegendLabelFormatSpecifiers");
        }
        get legendOthersLabelFormat() {
            return this.bx;
        }
        set legendOthersLabelFormat(a) {
            this.bx = a;
            this.e("LegendOthersLabelFormat");
        }
        get legendOthersLabelFormatSpecifiers() {
            return this.l;
        }
        set legendOthersLabelFormatSpecifiers(a) {
            this.l = a;
            this.e("LegendOthersLabelFormatSpecifiers");
        }
        get legendItemTemplateRef() {
            return this.bu;
        }
        set legendItemTemplateRef(a) {
            this.bu = a;
            this.e("LegendItemTemplateRef");
        }
        get legendItemBadgeTemplateRef() {
            return this.bt;
        }
        set legendItemBadgeTemplateRef(a) {
            this.bt = a;
            this.e("LegendItemBadgeTemplateRef");
        }
        get isSurfaceInteractionDisabled() {
            return this.ab;
        }
        set isSurfaceInteractionDisabled(a) {
            this.ab = a;
            this.e("IsSurfaceInteractionDisabled");
        }
        get shouldDisplayMockData() {
            return this.ac;
        }
        set shouldDisplayMockData(a) {
            this.ac = a;
            this.e("ShouldDisplayMockData");
        }
        get shouldUseSkeletonStyleForMockData() {
            return this.ad;
        }
        set shouldUseSkeletonStyleForMockData(a) {
            this.ad = a;
            this.e("ShouldUseSkeletonStyleForMockData");
        }
        get formatLabelRef() {
            return this.bj;
        }
        set formatLabelRef(a) {
            this.bj = a;
            this.e("FormatLabelRef");
        }
        get formatLegendLabelRef() {
            return this.bk;
        }
        set formatLegendLabelRef(a) {
            this.bk = a;
            this.e("FormatLegendLabelRef");
        }
        get pixelScalingRatio() {
            return this.as;
        }
        set pixelScalingRatio(a) {
            this.as = a;
            this.e("PixelScalingRatio");
        }
        get actualPixelScalingRatio() {
            return this.aj;
        }
        set actualPixelScalingRatio(a) {
            this.aj = a;
            this.e("ActualPixelScalingRatio");
        }
        get selectionMode() {
            return this.ca;
        }
        set selectionMode(a) {
            this.ca = a;
            this.e("SelectionMode");
        }
        get selectedItem() {
            return this.bb;
        }
        set selectedItem(a) {
            this.bb = a;
            this.e("SelectedItem");
        }
        get selectedItems() {
            return this.o;
        }
        set selectedItems(a) {
            this.o = a;
            this.e("SelectedItems");
        }
        get textStyle() {
            return this.cg;
        }
        set textStyle(a) {
            this.cg = a;
            this.e("TextStyle");
        }
        get labelClickRef() {
            return this.bl;
        }
        set labelClickRef(a) {
            this.bl = a;
            this.e("LabelClickRef");
        }
        get selectedItemChangingRef() {
            return this.b5;
        }
        set selectedItemChangingRef(a) {
            this.b5 = a;
            this.e("SelectedItemChangingRef");
        }
        get selectedItemsChangingRef() {
            return this.b7;
        }
        set selectedItemsChangingRef(a) {
            this.b7 = a;
            this.e("SelectedItemsChangingRef");
        }
        get selectedItemChangedRef() {
            return this.b4;
        }
        set selectedItemChangedRef(a) {
            this.b4 = a;
            this.e("SelectedItemChangedRef");
        }
        get selectedItemsChangedRef() {
            return this.b6;
        }
        set selectedItemsChangedRef(a) {
            this.b6 = a;
            this.e("SelectedItemsChangedRef");
        }
        get sliceClickRef() {
            return this.cb;
        }
        set sliceClickRef(a) {
            this.cb = a;
            this.e("SliceClickRef");
        }
        get sliceEnterRef() {
            return this.cc;
        }
        set sliceEnterRef(a) {
            this.cc = a;
            this.e("SliceEnterRef");
        }
        get sliceLeaveRef() {
            return this.ce;
        }
        set sliceLeaveRef(a) {
            this.ce = a;
            this.e("SliceLeaveRef");
        }
        get sliceHoverRef() {
            return this.cd;
        }
        set sliceHoverRef(a) {
            this.cd = a;
            this.e("SliceHoverRef");
        }
    }
    PieChartBaseDescription.$t = /*@__PURE__*/ markType(PieChartBaseDescription, 'PieChartBaseDescription', Description.$);
    return PieChartBaseDescription;
})();
//# sourceMappingURL=PieChartBaseDescription.js.map
