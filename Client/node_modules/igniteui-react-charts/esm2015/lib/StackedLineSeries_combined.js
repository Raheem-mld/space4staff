/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { HorizontalStackedSeriesBase } from "./HorizontalStackedSeriesBase";
import { markType } from "igniteui-react-core";
import { AxisRange } from "./AxisRange";
import { StackedSeriesView } from "./StackedSeriesView";
import { Defaults } from "./Defaults";
/**
 * @hidden
 */
export let StackedLineSeries = /*@__PURE__*/ (() => {
    class StackedLineSeries extends HorizontalStackedSeriesBase {
        constructor() {
            super();
            this.ab = StackedLineSeries.$;
        }
        get_dv() {
            return true;
        }
        ac() {
            super.ac();
            this.l0(false);
        }
        bu() {
            return new StackedLineSeriesView(this);
        }
        lh(a) {
            super.lh(a);
            this.t0 = a;
        }
        ap(a) {
            if (this.itemsSource == null) {
                return null;
            }
            if (a == this.xAxis) {
                return new AxisRange(0, this.ch.count - 1);
            }
            if (a == this.yAxis) {
                this.tj();
                return new AxisRange(this.ta, this.s9);
            }
            return null;
        }
        preferredCategoryMode(a) {
            return 0;
        }
        get useHighMarkerFidelity() {
            return this.ry;
        }
    }
    StackedLineSeries.$t = /*@__PURE__*/ markType(StackedLineSeries, 'StackedLineSeries', HorizontalStackedSeriesBase.$);
    return StackedLineSeries;
})();
/**
 * @hidden
 */
export let StackedLineSeriesView = /*@__PURE__*/ (() => {
    class StackedLineSeriesView extends StackedSeriesView {
        constructor(a) {
            super(a);
        }
        as() {
            super.as();
            if (!this.q) {
                this.c0.pr = Defaults.e;
            }
        }
    }
    StackedLineSeriesView.$t = /*@__PURE__*/ markType(StackedLineSeriesView, 'StackedLineSeriesView', StackedSeriesView.$);
    return StackedLineSeriesView;
})();
//# sourceMappingURL=StackedLineSeries_combined.js.map
