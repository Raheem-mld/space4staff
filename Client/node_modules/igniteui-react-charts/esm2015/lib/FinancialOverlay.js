/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { FinancialSeries } from "./FinancialSeries";
import { DependencyProperty } from "igniteui-react-core";
import { ISortingAxis_$type } from "./ISortingAxis";
import { typeCast, markType, markDep } from "igniteui-react-core";
import { Rect } from "igniteui-react-core";
import { ScalerParams } from "./ScalerParams";
import { AxisRange } from "./AxisRange";
import { PropertyMetadata } from "igniteui-react-core";
import { isNaN_ } from "igniteui-react-core";
/**
 * @hidden
 */
export let FinancialOverlay = /*@__PURE__*/ (() => {
    class FinancialOverlay extends FinancialSeries {
        constructor() {
            super();
            this.s0 = false;
            this.s0 = false;
        }
        get_dk() {
            return true;
        }
        kk(a, b, c, d) {
            super.kk(a, b, c, d);
            if (this.pq != null && typeCast(ISortingAxis_$type, this.pq) !== null) {
                this.pq.i$i();
            }
            this.p7.bx.e(this.gh);
            this.s1();
            if (this.qc != null) {
                this.qc.cv();
            }
            this.l0(true);
        }
        get_e2() {
            return true;
        }
        lm(a, b, c, d) {
            switch (b) {
                case "FastItemsSource":
                    this.s0 = false;
                    break;
                case FinancialOverlay.$$p[0]:
                    this.s0 = false;
                    this.l0(false);
                    this.k7();
                    break;
                case "XAxis":
                    this.s0 = false;
                    break;
            }
            super.lm(a, b, c, d);
        }
        bo() {
            if (this.bp == 0) {
                return 1;
            }
            else {
                return super.bo();
            }
        }
        ep(a, b) {
            if (this.eo(a, b)) {
                return true;
            }
            return false;
        }
        ac() {
            super.ac();
            this.l0(false);
        }
        eh(a) {
            let b = this.ch != null ? this.ch.indexOf(a) : -1;
            let c = this.bx.bv;
            c = c.copy();
            let d = this.bx.bu;
            let e = new Rect(0, 0, 0, 1, 1);
            let f = this.o9(this.bx);
            let g = new ScalerParams(0, e, e, this.pq.cc, f);
            let h = new ScalerParams(0, e, e, this.qc.cc, f);
            h.b = this.f2();
            if (b >= 0 && Rect.l_op_Inequality(c, null) && Rect.l_op_Inequality(d, null)) {
                if (this.pq != null) {
                    let i = this.pq.d8(b, g);
                    if (i < c.left + 0.1 * c.width) {
                        i = i + 0.4 * c.width;
                    }
                    if (i > c.right - 0.1 * c.width) {
                        i = i - 0.4 * c.width;
                    }
                    c.x = i - 0.5 * c.width;
                }
                if (this.qc != null && this.ql != null && this.qk != null && b < this.ql.count && b < this.qk.count) {
                    let j = this.qc.d8(this.ql.item(b), h);
                    let k = this.qc.d8(this.qk.item(b), h);
                    if (!isNaN_(j) && !isNaN_(k)) {
                        let l = Math.abs(j - k);
                        if (c.height < l) {
                            c.height = l;
                            c.y = Math.min(j, k);
                        }
                        else {
                            if (j < c.top + 0.1 * c.height) {
                                j = j + 0.4 * c.height;
                            }
                            if (j > c.bottom - 0.1 * c.height) {
                                j = j - 0.4 * c.height;
                            }
                            c.y = j - 0.5 * c.height;
                        }
                    }
                }
                this.b5.ap(this.ca, c, true);
            }
            return b >= 0;
        }
        ap(a) {
            if (a != null && a == this.qc && this.ql != null && this.qk != null) {
                return new AxisRange(this.ql.minimum, this.qk.maximum);
            }
            return null;
        }
    }
    FinancialOverlay.$t = /*@__PURE__*/ markType(FinancialOverlay, 'FinancialOverlay', FinancialSeries.$);
    FinancialOverlay.$$p = /*@__PURE__*/ markDep(DependencyProperty, PropertyMetadata, FinancialOverlay, 'raisePropertyChanged', ['IgnoreFirst:s2:s4', [1, 0]]);
    return FinancialOverlay;
})();
//# sourceMappingURL=FinancialOverlay.js.map
