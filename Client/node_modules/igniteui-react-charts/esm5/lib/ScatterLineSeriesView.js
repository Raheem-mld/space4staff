/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { ScatterBaseView } from "./ScatterBaseView";
import { Path } from "igniteui-react-core";
import { Defaults } from "./Defaults";
import { markType } from "igniteui-react-core";
import { Color } from "igniteui-react-core";
/**
 * @hidden
 */
var ScatterLineSeriesView = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(ScatterLineSeriesView, _super);
    function ScatterLineSeriesView(a) {
        var _this = _super.call(this, a) || this;
        _this.dg = new Path();
        _this.df = new Path();
        return _this;
    }
    ScatterLineSeriesView.prototype.as = function () {
        _super.prototype.as.call(this);
        if (!this.q) {
            this.e.gh = Defaults.x;
            this.b1.pr = Defaults.e;
        }
    };
    ScatterLineSeriesView.prototype.bb = function () {
        _super.prototype.bb.call(this);
    };
    ScatterLineSeriesView.prototype.bc = function () {
        _super.prototype.bc.call(this);
        var a = this.bo();
        this.df.ak = this.dg.ak;
        this.df._stroke = a;
        this.df.ac = this.e.fl + 3;
    };
    ScatterLineSeriesView.prototype.a6 = function (a, b) {
        _super.prototype.a6.call(this, a, b);
        if (a.d) {
            if (b) {
                a.s(this.df);
            }
            else {
                a.s(this.dg);
            }
        }
    };
    ScatterLineSeriesView.prototype.c4 = function (a) {
        _super.prototype.c4.call(this, a);
        this.dg.ak = null;
        this.df.ak = null;
    };
    ScatterLineSeriesView.prototype.al = function (a) {
        _super.prototype.al.call(this, a);
        this.e.a6.exportPathData(a, this.dg, "shape", ["Main"]);
    };
    ScatterLineSeriesView.prototype.af = function () {
        var a = new Color();
        a.colorString = "rgba(95,95,95,0.5)";
        this.e.or = a;
        this.e.gj = 3;
        this.e.gk = 1;
        this.e.gl = 4;
        this.e.e1 = false;
    };
    ScatterLineSeriesView.$t = markType(ScatterLineSeriesView, 'ScatterLineSeriesView', ScatterBaseView.$);
    return ScatterLineSeriesView;
}(ScatterBaseView));
export { ScatterLineSeriesView };
//# sourceMappingURL=ScatterLineSeriesView.js.map
