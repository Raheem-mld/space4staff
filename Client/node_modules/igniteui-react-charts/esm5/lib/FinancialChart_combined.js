/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends, __read, __spreadArray, __values } from "tslib";
import { Brush } from "igniteui-react-core";
import { XYChart } from "./XYChart";
import { IndicatorPane } from "./IndicatorPane";
import { Base, BaseError, EventArgs, runOn, delegateRemove, delegateCombine, fromEnum, typeCast, EnumUtil, Number_$type, String_$type, enumGetBox, markType, TypeRegistrar, fromEn } from "igniteui-react-core";
import { List$1 } from "igniteui-react-core";
import { DataSeriesType_$type } from "igniteui-react-core";
import { IDataSeriesAdapterRule_$type } from "igniteui-react-core";
import { SimpleFinancialPriceSeriesRule } from "igniteui-react-core";
import { SubCollectionsRule } from "igniteui-react-core";
import { XamDataChart } from "./XamDataChart";
import { FinancialChartVolumeType_$type } from "./FinancialChartVolumeType";
import { FinancialChartXAxisMode_$type } from "./FinancialChartXAxisMode";
import { FinancialChartYAxisMode_$type } from "./FinancialChartYAxisMode";
import { FinancialChartType_$type } from "./FinancialChartType";
import { NumericYAxis } from "./NumericYAxis";
import { CategoryAxisBase } from "./CategoryAxisBase";
import { FinancialChartZoomSliderType_$type } from "./FinancialChartZoomSliderType";
import { BrushCollection } from "igniteui-react-core";
import { FinancialChartRangeSelectorOptionCollection } from "./FinancialChartRangeSelectorOptionCollection";
import { ObservableCollection$1 } from "igniteui-react-core";
import { TemplatedHtmlControl } from "./TemplatedHtmlControl";
import { FinancialChartContext } from "./FinancialChartContext";
import { FinancialChartToolbarContext } from "./FinancialChartToolbarContext";
import { FinancialChartViewModel } from "./FinancialChartViewModel";
import { FinancialChartToolbarViewModel } from "./FinancialChartToolbarViewModel";
import { AxisDefaults } from "./AxisDefaults";
import { Defaults } from "./Defaults";
import { BrushUtil } from "igniteui-react-core";
import { Series } from "./Series";
import { Rect } from "igniteui-react-core";
import { Axis } from "./Axis";
import { AxisLabelSettings } from "./AxisLabelSettings";
import { MarkerSeries } from "./MarkerSeries";
import { SyncSettings } from "./SyncSettings";
import { SyncManager } from "./SyncManager";
import { FinancialOverlayType_$type } from "./FinancialOverlayType";
import { ArrayExtension } from "igniteui-react-core";
import { FinancialIndicatorType_$type } from "./FinancialIndicatorType";
import { IndicatorDisplayType_$type } from "./IndicatorDisplayType";
import { ITimeRangeSelectorAxis_$type } from "./ITimeRangeSelectorAxis";
import { FinancialChartVisualData } from "./FinancialChartVisualData";
import { FinancialChartCustomIndicatorArgs } from "./FinancialChartCustomIndicatorArgs";
import { ScalerParams } from "./ScalerParams";
import { stringReplace, stringJoin, stringIsNullOrEmpty } from "igniteui-react-core";
import { timeSpanFromDays } from "igniteui-react-core";
import { dateMaxValue, dateMinValue } from "igniteui-react-core";
import { isNaN_, isInfinity } from "igniteui-react-core";
import { FinancialChartTypePicker } from "./FinancialChartTypePicker";
import { FinancialChartIndicatorMenu } from "./FinancialChartIndicatorMenu";
import { TrendLineType_$type } from "igniteui-react-core";
import { FinancialChartIndicatorMenuContext } from "./FinancialChartIndicatorMenuContext";
import { FinancialChartTypePickerContext } from "./FinancialChartTypePickerContext";
import { FinancialChartRangeSelectorContext } from "./FinancialChartRangeSelectorContext";
import { FinancialChartToolbarVisualData } from "./FinancialChartToolbarVisualData";
import { FinancialChartRangeSelectorViewModel } from "./FinancialChartRangeSelectorViewModel";
import { FinancialChartRangeSelectorView } from "./FinancialChartRangeSelectorView";
/**
 * @hidden
 */
var FinancialChart = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(FinancialChart, _super);
    function FinancialChart() {
        var _this = _super.call(this) || this;
        _this.un = null;
        _this.w7 = null;
        _this.w5 = null;
        _this.w2 = null;
        _this.w4 = null;
        _this.w6 = null;
        _this.w3 = null;
        _this.tt = null;
        _this.xp = null;
        _this.xq = null;
        _this.xm = null;
        _this.xr = null;
        _this.xs = null;
        _this.xn = null;
        _this.xo = null;
        _this.vb = null;
        _this.wh = 40;
        _this.uh = null;
        _this.uf = null;
        _this.uj = null;
        _this.uo = null;
        _this.x0 = null;
        _this.u7 = null;
        _this.vv = false;
        _this.vu = false;
        _this.v0 = false;
        _this.vh = false;
        _this.xd = 10;
        _this.wj = NaN;
        _this.wl = NaN;
        _this.wk = NaN;
        _this.wm = 0;
        _this.tz = 0;
        _this.t2 = 0;
        _this.t4 = 0;
        _this.ve = true;
        _this.tv = 0;
        _this.vf = false;
        _this.t9 = null;
        _this.ub = null;
        _this.v2 = null;
        _this.vg = true;
        _this.u8 = null;
        _this.t6 = 1;
        _this.sx = null;
        _this.sy = null;
        _this.sz = null;
        _this.s0 = null;
        _this.s2 = null;
        _this.s1 = null;
        _this.sw = null;
        _this.sv = null;
        _this.wi = 1;
        _this.wg = 1;
        _this.wf = 2;
        _this.we = 1;
        _this.ul = null;
        _this.w9 = -2147483648;
        _this.wd = 2;
        _this.xc = 3;
        _this.xa = 10;
        _this.w8 = 30;
        _this.xb = 9;
        _this.tq = null;
        _this.tr = null;
        _this.tm = null;
        _this.applyCustomIndicators = null;
        _this.abm = null;
        _this.wn = 1;
        _this.vd = false;
        _this.ud = null;
        _this.wa = dateMinValue();
        _this.v9 = dateMaxValue();
        _this.v7 = null;
        _this.i4();
        _this.v7 = new ObservableCollection$1(Base.$, 0);
        if (_this.xAxisBreaks != null) {
            var a = _this.xAxisBreaks;
            a.collectionChanged = delegateCombine(a.collectionChanged, function (a, b) { return _this.abb(); });
        }
        _this.aaw();
        return _this;
    }
    FinancialChart.prototype.j8 = function (a, b, c) {
        _super.prototype.j8.call(this, a, b, c);
        switch (a) {
            case "ToolbarTemplate":
            case "RangeSelectorTemplate":
                this.tu = new FinancialChartToolbar(this, this.xx);
                break;
            case "Toolbar":
                var d = b;
                if (d != null) {
                    d.chartTypeChanged = delegateRemove(d.chartTypeChanged, runOn(this, this.aak));
                    d.trendLineTypeChanged = delegateRemove(d.trendLineTypeChanged, runOn(this, this.aan));
                    d.volumeTypeChanged = delegateRemove(d.volumeTypeChanged, runOn(this, this.aao));
                    d.l(null);
                }
                if (this.tu != null) {
                    this.tu.ac = this.t1;
                    this.tu.ai = this.bm;
                    this.tu.y = this.tw;
                    this.tu.al = this.vs;
                    if (this.w4 != null) {
                        this.tu.l(this.w4);
                    }
                    var e = this.tu;
                    e.chartTypeChanged = delegateCombine(e.chartTypeChanged, runOn(this, this.aak));
                    ;
                    var f = this.tu;
                    f.trendLineTypeChanged = delegateCombine(f.trendLineTypeChanged, runOn(this, this.aan));
                    var g = this.tu;
                    g.volumeTypeChanged = delegateCombine(g.volumeTypeChanged, runOn(this, this.aao));
                }
                break;
            case "ChartType":
                if (this.tu != null) {
                    this.tu.y = this.tw;
                }
                break;
            case "VolumeType":
                if (this.tu != null) {
                    this.tu.ac = this.t1;
                }
                break;
            case "TrendLineType":
                if (this.tu != null) {
                    this.tu.ai = this.bm;
                }
                break;
            case "IsToolbarVisible":
                if (this.tu == null) {
                    break;
                }
                this.tu.al = this.vs;
                this.setGridRows();
                break;
        }
    };
    FinancialChart.prototype.aao = function (a, b) {
        this.t1 = this.tu.ac;
    };
    FinancialChart.prototype.aan = function (a, b) {
        this.bm = this.tu.ai;
    };
    FinancialChart.prototype.aak = function (a, b) {
        this.tw = this.tu.y;
    };
    FinancialChart.prototype.aaw = function () {
        this.un = new IndicatorPane();
        this.ue = TypeRegistrar.create("FinancialLegend");
    };
    FinancialChart.prototype.provideGrid = function (a) {
        this.w7 = a;
        this.abh();
        this.setGridRows();
        if (this.tu != null) {
            this.tu.bg(a);
        }
    };
    FinancialChart.prototype.onDocumentClick = function (a) {
        if (this.tu != null) {
            this.tu.bl(a);
        }
    };
    FinancialChart.prototype.getContext = function () {
        var a = this.tu.v();
        var b = new FinancialChartContext();
        b.vm = new FinancialChartViewModel();
        b.vm.toolbar = a;
        b.container = this.fd;
        b.toolbarContainer = this.w4;
        b.legendContainer = this.w3;
        b.indicatorsContainer = this.w2;
        b.volumeContainer = this.w5;
        b.zoomContainer = this.w6;
        return b;
    };
    FinancialChart.prototype.provideContainer = function (a) {
        var b = a;
        if (b != null) {
            var c = "financialChartMainGrid";
            var d = b.createElement("div");
            d.setStyleProperty("width", "100%");
            d.setStyleProperty("height", "100%");
            if (this.tu == null) {
                this.tu = new FinancialChartToolbar(this, this.xx);
            }
            this.tu.w.isIndicatorMenuVisible = this.vj && this.vk;
            this.w4 = b.getSubRenderer(d);
            this.tu.l(this.w4);
            var e = b.createElement("div");
            e.setStyleProperty("width", "100%");
            e.setStyleProperty("height", "100%");
            var f = b.createElement("div");
            f.setStyleProperty("width", "100%");
            f.setStyleProperty("height", "100%");
            this.w3 = b.getSubRenderer(f);
            var g = b.createElement("div");
            g.setStyleProperty("width", "100%");
            g.setStyleProperty("height", "100%");
            this.w2 = b.getSubRenderer(g);
            var h = b.createElement("div");
            h.setStyleProperty("width", "100%");
            h.setStyleProperty("height", "100%");
            this.w5 = b.getSubRenderer(h);
            var i = b.createElement("div");
            i.setStyleProperty("width", "100%");
            i.setStyleProperty("height", "100%");
            this.w6 = b.getSubRenderer(i);
            a = b.getSubRenderer(e);
        }
        else {
            this.w4 = null;
            if (this.tu != null) {
                this.tu.l(null);
            }
            if (this.vc != null) {
                this.vc.provideContainer(null);
                this.vc = null;
            }
            if (this.ue != null) {
                this.ue.provideContainer(null);
            }
        }
        _super.prototype.provideContainer.call(this, a);
        if (b != null) {
            if (this.volumeChart != null) {
                this.volumeChart.provideContainer(this.w5);
            }
            if (this.un != null) {
                this.un.h(this.w2);
            }
            if (this.zoomSliderChart != null) {
                this.zoomSliderChart.provideContainer(this.w6);
                if (a != null) {
                    this.z4();
                }
                else {
                    this.vc = null;
                }
            }
            if (this.ue != null) {
                this.ue.provideContainer(this.w3);
            }
            this.setGridRows();
        }
    };
    FinancialChart.prototype.aa7 = function (a, b, c) {
        if (a != null) {
            a.provideContainer(null);
        }
        if (b != null) {
            b.provideContainer(c);
        }
        this.setGridRows();
    };
    FinancialChart.prototype.abl = function (a, b) {
        this.aa7(a, b, this.w6);
        if (b == null) {
            return;
        }
        this.z4();
    };
    FinancialChart.prototype.z4 = function () {
        var _this = this;
        if (this.w6 == null) {
            return;
        }
        if (this.vc != null) {
            this.vc.provideContainer(null);
        }
        this.vc = TypeRegistrar.create("ZoomSlider");
        this.vc.provideContainer(this.w6);
        var a = this.vc;
        a.windowRectChanged = delegateCombine(a.windowRectChanged, function (a, b) {
            if (_this.dataChart != null) {
                _this.dataChart.pw = new Rect(0, _this.vc.windowRect.left, _this.dataChart.pg.top, _this.vc.windowRect.width, _this.dataChart.pg.height);
            }
        });
        this.z5();
    };
    FinancialChart.prototype.abj = function (a, b) {
        this.aa7(a, b, this.w5);
    };
    FinancialChart.prototype.setGridRows = function () {
        if (this.w7 == null) {
            return;
        }
        var a = new Array(6);
        a[0] = (this.vs ? this.wt : 0) + "px";
        a[1] = this.vo ? "min-content" : "0px";
        a[2] = "auto";
        a[3] = this.indicatorCharts == null || this.indicatorCharts.count == 0 ? "0px" : this.indicatorCharts.count * 150 + "px";
        a[4] = this.volumeChart == null ? "0px" : "100px";
        a[5] = this.zoomSliderChart == null ? "0px" : "100px";
        if (this.vc != null) {
            if (a[5] == "0px") {
                this.vc.hide();
            }
            else {
                this.vc.show();
            }
        }
        this.w7.setStyleProperty("-ms-grid-rows", stringReplace(stringJoin.apply(void 0, __spreadArray([" "], __read(a), false)), "auto", "1fr"));
        this.w7.setStyleProperty("grid-template-rows", stringJoin.apply(void 0, __spreadArray([" "], __read(a), false)));
        if (this.fd == null) {
            return;
        }
        if (this.dataChart != null) {
            this.dataChart.notifyContainerResized();
        }
        if (this.un != null) {
            this.un.f();
        }
        if (this.volumeChart != null) {
            this.volumeChart.notifyContainerResized();
        }
        if (this.zoomSliderChart != null) {
            this.zoomSliderChart.notifyContainerResized();
        }
        if (this.vc != null) {
            this.vc.notifySizeChanged();
        }
    };
    FinancialChart.prototype.jl = function () {
        var e_1, _a;
        _super.prototype.jl.call(this);
        this.l9 = 1;
        this.ro = 0;
        this.n6 = 0;
        this.si = null;
        this.sb = AxisDefaults.g;
        this.nq = AxisDefaults.e;
        this.np = AxisDefaults.f;
        this.sc = AxisDefaults.j;
        this.r8 = null;
        this.abn = AxisDefaults.h;
        this.w1 = AxisDefaults.b;
        this.cg = true;
        this.ce = true;
        this.cf = false;
        this.aa = 0;
        this.ea = Defaults.j;
        this.lg = Defaults.ae;
        this.lb = Defaults.af;
        this.lc = Defaults.ag;
        this.ej = NaN;
        this.eb = 30;
        this.cn = true;
        this.ct = false;
        if (this.dataChart != null) {
            var a = this.dataChart.cf.j.e();
            this.s5 = a.d;
            this.s6 = a.e;
            this.s4 = a.d;
            this.abn = this.dataChart.s1;
        }
        var b = new BrushCollection();
        b.add(((function () {
            var $ret = new Brush();
            $ret.fill = "#8BDC5C";
            return $ret;
        })()));
        b.add(((function () {
            var $ret = new Brush();
            $ret.fill = "#8961A9";
            return $ret;
        })()));
        b.add(((function () {
            var $ret = new Brush();
            $ret.fill = "#6DB1FF";
            return $ret;
        })()));
        b.add(((function () {
            var $ret = new Brush();
            $ret.fill = "#82E9D9";
            return $ret;
        })()));
        b.add(((function () {
            var $ret = new Brush();
            $ret.fill = "#EA3C63";
            return $ret;
        })()));
        b.add(((function () {
            var $ret = new Brush();
            $ret.fill = "#735656";
            return $ret;
        })()));
        b.add(((function () {
            var $ret = new Brush();
            $ret.fill = "#F8CE4F";
            return $ret;
        })()));
        b.add(((function () {
            var $ret = new Brush();
            $ret.fill = "#A8A8B7";
            return $ret;
        })()));
        b.add(((function () {
            var $ret = new Brush();
            $ret.fill = "#E051A9";
            return $ret;
        })()));
        b.add(((function () {
            var $ret = new Brush();
            $ret.fill = "#FF903B";
            return $ret;
        })()));
        var c = new BrushCollection();
        try {
            for (var _b = __values(fromEnum(b)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var d = _c.value;
                c.add(BrushUtil.m(d, 0.3));
            }
        }
        catch (e_1_1) {
            e_1 = { error: e_1_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_1)
                    throw e_1.error;
            }
        }
        this.s7 = c;
        this.s8 = b;
    };
    FinancialChart.prototype.aa3 = function () {
        if (this.un != null) {
            this.un.b = null;
            this.un.b = this.indicatorCharts;
        }
        this.setGridRows();
    };
    FinancialChart.prototype.aa4 = function () {
        this.setGridRows();
    };
    FinancialChart.prototype.abd = function () {
        this.aa3();
    };
    FinancialChart.prototype.z3 = function () {
        if (this.vc == null || this.zoomSliderChart == null || this.dataChart == null || this.dataChart.series.count == 0) {
            return;
        }
        var a = this.fd.rootWrapper.width();
        var b = this.dataChart.pv.left + this.dataChart.pv.width;
        var c = this.dataChart.pv.left;
        var d = a - b;
        this.vc.startInset = c - this.vc.trackStartInset;
        this.vc.endInset = d - this.vc.trackEndInset;
        if (this.vc.endInset < 0) {
            var e = this.vc.endInset;
            this.vc.endInset = 0;
            this.dataChart.ft += (e * -1);
        }
        if (this.vc.startInset < 0) {
            var f = this.vc.startInset;
            this.vc.startInset = 0;
            this.dataChart.fq += (f * -1);
        }
        this.zoomSliderChart.fq = c;
        this.zoomSliderChart.ft = d;
        this.zoomSliderChart.fm = this.vc.barExtent;
    };
    FinancialChart.prototype.aau = function () {
        this.z3();
    };
    FinancialChart.prototype.ji = function (a) {
        _super.prototype.ji.call(this, a);
        if (a != null) {
            a.fl = 0;
        }
    };
    FinancialChart.prototype.abo = function (a) {
        return a.o9();
    };
    FinancialChart.prototype.abr = function () {
        return this.w3 == null ? null : this.abq(this.w3.rootWrapper);
    };
    FinancialChart.prototype.abp = function (a) {
        if (a == null || a.d == null) {
            return null;
        }
        return this.abq(a.d.rootWrapper);
    };
    FinancialChart.prototype.abq = function (a) {
        if (a == null) {
            return null;
        }
        var b = a.getOffset();
        return new Rect(0, b.left, b.top, a.width(), a.height());
    };
    FinancialChart.prototype.wo = function () {
        if (this.w7 == null) {
            return NaN;
        }
        var a = this.w7.getOffset();
        return this.w7.width() + (a == null ? 0 : a.left);
    };
    FinancialChart.prototype.jt = function (source_, a, b) {
        _super.prototype.jt.call(this, source_, a, b);
        if (this.zoomSliderChart != null) {
            this.zoomSliderChart.jw(source_, a, b);
        }
    };
    FinancialChart.prototype.ju = function (source_, a, b) {
        _super.prototype.ju.call(this, source_, a, b);
        if (this.zoomSliderChart != null) {
            this.zoomSliderChart.jx(source_, a, b);
        }
    };
    FinancialChart.prototype.js = function (source_) {
        _super.prototype.js.call(this, source_);
        if (this.zoomSliderChart != null) {
            this.zoomSliderChart.jt(source_);
        }
    };
    FinancialChart.prototype.jw = function (source_, a, b, c) {
        _super.prototype.jw.call(this, source_, a, b, c);
        if (this.zoomSliderChart != null) {
            this.zoomSliderChart.jy(source_, a, b, c);
        }
    };
    FinancialChart.prototype.jo = function (a, b) {
        _super.prototype.jo.call(this, a, b);
        if (this.vp(a)) {
            a.toolTip = null;
        }
    };
    Object.defineProperty(FinancialChart.prototype, "tu", {
        get: function () {
            return this.tt;
        },
        set: function (a) {
            var b = this.tu;
            if (a != b) {
                this.tt = a;
                this.j6("Toolbar", b, this.tu);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "xw", {
        get: function () {
            return this.xp;
        },
        set: function (a) {
            var b = this.xw;
            if (a != b) {
                this.xp = a;
                this.j6("RangeSelectorTemplate", b, this.xw);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "xx", {
        get: function () {
            return this.xq;
        },
        set: function (a) {
            var b = this.xx;
            if (a != b) {
                this.xq = a;
                this.j6("ToolbarTemplate", b, this.xx);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "xt", {
        get: function () {
            return this.xm;
        },
        set: function (a) {
            var b = this.xt;
            if (a != b) {
                this.xm = a;
                this.j6("ChartTypePickerTemplate", b, this.xt);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "xy", {
        get: function () {
            return this.xr;
        },
        set: function (a) {
            var b = this.xy;
            if (a != b) {
                this.xr = a;
                this.j6("TrendLineTypePickerTemplate", b, this.xy);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "xz", {
        get: function () {
            return this.xs;
        },
        set: function (a) {
            var b = this.xz;
            if (a != b) {
                this.xs = a;
                this.j6("VolumeTypePickerTemplate", b, this.xz);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "xu", {
        get: function () {
            return this.xn;
        },
        set: function (a) {
            var b = this.xu;
            if (a != b) {
                this.xn = a;
                this.j6("IndicatorMenuTemplate", b, this.xu);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "xv", {
        get: function () {
            return this.xo;
        },
        set: function (a) {
            var b = this.xv;
            if (a != b) {
                this.xo = a;
                this.j6("OverlayPickerTemplate", b, this.xv);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "vc", {
        get: function () {
            return this.vb;
        },
        set: function (a) {
            var b = this.vc;
            if (a != b) {
                this.vb = a;
                this.j6("ZoomSlider", b, this.vc);
            }
        },
        enumerable: false,
        configurable: true
    });
    FinancialChart.prototype.get_eb = function () {
        return _super.prototype.get_eb.call(this);
    };
    FinancialChart.prototype.set_eb = function (a) {
        _super.prototype.set_eb.call(this, a);
    };
    FinancialChart.prototype.get_cn = function () {
        return _super.prototype.get_cn.call(this);
    };
    FinancialChart.prototype.set_cn = function (a) {
        _super.prototype.set_cn.call(this, a);
    };
    Object.defineProperty(FinancialChart.prototype, "wt", {
        get: function () {
            return this.wh;
        },
        set: function (a) {
            var b = this.wt;
            if (a != b) {
                this.wh = a;
                this.j6("ToolbarHeight", b, this.wt);
            }
        },
        enumerable: false,
        configurable: true
    });
    FinancialChart.prototype.ly = function () {
        return this.xAxis;
    };
    FinancialChart.prototype.lz = function () {
        return this.yAxis;
    };
    FinancialChart.prototype.onAttachedToUI = function () {
        _super.prototype.onAttachedToUI.call(this);
        if (this.vc != null) {
            this.vc.onAttachedToUI();
        }
    };
    FinancialChart.prototype.onDetachedFromUI = function () {
        _super.prototype.onDetachedFromUI.call(this);
        if (this.vc != null) {
            this.vc.onDetachedFromUI();
        }
    };
    FinancialChart.prototype.ab = function (a) {
        return 20;
    };
    FinancialChart.prototype.get_c5 = function () {
        return ((function () {
            var $ret = new List$1(DataSeriesType_$type, 0);
            $ret.add(20);
            return $ret;
        })());
    };
    Object.defineProperty(FinancialChart.prototype, "c5", {
        get: function () {
            return this.get_c5();
        },
        enumerable: false,
        configurable: true
    });
    FinancialChart.prototype.get_c4 = function () {
        return ((function () {
            var $ret = new List$1(IDataSeriesAdapterRule_$type, 0);
            $ret.add(new SimpleFinancialPriceSeriesRule());
            $ret.add(new SubCollectionsRule());
            return $ret;
        })());
    };
    Object.defineProperty(FinancialChart.prototype, "c4", {
        get: function () {
            return this.get_c4();
        },
        enumerable: false,
        configurable: true
    });
    FinancialChart.prototype.tg = function (a) {
        return this.th(a);
    };
    FinancialChart.prototype.uu = function (a) {
        return this.uv(a);
    };
    FinancialChart.prototype.tf = function (a) {
        var b = this.tg(0);
        b.name = a;
        return b;
    };
    FinancialChart.prototype.i1 = function () {
        this.xAxis = this.tf("xAxis");
        this.yAxis = this.uu(0);
        this.yAxis.name = "yAxis";
        this.volumeAxis = this.uu(0);
        this.volumeAxis.name = "volumeAxis";
        this.volumeXAxis = this.tf("volumeXAxis");
        this.v4 = new List$1(NumericYAxis.$, 0);
        this.v6 = new List$1(CategoryAxisBase.$, 0);
        this.indicatorAxis = this.uu(0);
        this.indicatorAxis.name = "indicatorAxis";
        this.indicatorXAxis = this.tf("indicatorXAxis_0");
        this.v4.add(this.indicatorAxis);
        this.v6.add(this.indicatorXAxis);
        if (this.xAxis.ay == null) {
            this.xAxis.ay = new AxisLabelSettings();
        }
        if (this.yAxis.ay == null) {
            this.yAxis.ay = new AxisLabelSettings();
        }
        if (this.volumeAxis.ay == null) {
            this.volumeAxis.ay = new AxisLabelSettings();
        }
        if (this.volumeXAxis.ay == null) {
            this.volumeAxis.ay = new AxisLabelSettings();
        }
        if (this.indicatorAxis.ay == null) {
            this.indicatorAxis.ay = new AxisLabelSettings();
        }
        if (this.indicatorXAxis.ay == null) {
            this.indicatorXAxis.ay = new AxisLabelSettings();
        }
        this.zoomSliderAxis = this.uu(0);
        this.zoomSliderAxis.name = "zoomSliderAxis";
        this.zoomSliderXAxis = this.tf("zoomSliderXAxis");
        if (this.zoomSliderAxis.ay == null) {
            this.zoomSliderAxis.ay = new AxisLabelSettings();
        }
        if (this.zoomSliderXAxis.ay == null) {
            this.zoomSliderXAxis.ay = new AxisLabelSettings();
        }
    };
    FinancialChart.prototype.iz = function (a, b) {
        var c = typeCast(MarkerSeries.$, a);
        if (c != null) {
            c.pr = this.a3(a, b);
        }
    };
    FinancialChart.prototype.a2 = function (a) {
        if (a != null) {
            return 1;
        }
        return _super.prototype.a2.call(this, a);
    };
    FinancialChart.prototype.kn = function (a) {
        if (a.suggestedSecondaryAxis == 2) {
            this.yAxis.kk = true;
            this.yAxis.k7 = 10;
        }
    };
    FinancialChart.prototype.kq = function () {
        this.yAxis.kk = this.vx;
        this.yAxis.k7 = this.xl;
    };
    FinancialChart.prototype.ty = function (a) {
        var b;
        if (this.tw == 0) {
            if (a == null || a.index > 0 || stringIsNullOrEmpty(a.getMemberPathFor(12))) {
                b = 4;
            }
            else {
                b = 2;
            }
        }
        else {
            b = this.tw;
        }
        b = this.tx(b);
        return b;
    };
    FinancialChart.prototype.tx = function (a) {
        if ((a == 1 || a == 2)) {
            if (TypeRegistrar.isRegistered("FinancialPriceSeries")) {
                return a;
            }
            a = 4;
        }
        if (a == 4) {
            if (TypeRegistrar.isRegistered("LineSeries")) {
                return a;
            }
            a = 3;
        }
        if (a == 3) {
            if (TypeRegistrar.isRegistered("ColumnSeries")) {
                return a;
            }
        }
        return a;
    };
    FinancialChart.prototype.t7 = function (a) {
        if ((a == 2 || a == 3)) {
            if (TypeRegistrar.isRegistered("FinancialPriceSeries")) {
                return a;
            }
            a = 5;
        }
        if (a == 5) {
            if (TypeRegistrar.isRegistered("LineSeries")) {
                return a;
            }
            a = 6;
        }
        if (a == 6) {
            if (TypeRegistrar.isRegistered("AreaSeries")) {
                return a;
            }
            a = 4;
        }
        if (a == 4) {
            if (TypeRegistrar.isRegistered("ColumnSeries")) {
                return a;
            }
        }
        return a;
    };
    FinancialChart.prototype.t0 = function (a) {
        if (a == 2) {
            if (TypeRegistrar.isRegistered("LineSeries")) {
                return a;
            }
            a = 3;
        }
        if (a == 3) {
            if (TypeRegistrar.isRegistered("AreaSeries")) {
                return a;
            }
            a = 1;
        }
        if (a == 1) {
            if (TypeRegistrar.isRegistered("ColumnSeries")) {
                return a;
            }
        }
        return a;
    };
    FinancialChart.prototype.x8 = function (a) {
        var b = a.getMemberPathFor(14);
        if (stringIsNullOrEmpty(b)) {
            b = a.getMemberPathFor(11);
        }
        return b;
    };
    FinancialChart.prototype.th = function (axisType_) {
        if ((this.externalObject)) {
            return (this.externalObject.createXAxis(axisType_).i);
        }
        else {
            var a = void 0;
            switch (axisType_) {
                case 0:
                    if (TypeRegistrar.isRegistered("OrdinalTimeXAxis")) {
                        a = TypeRegistrar.create("OrdinalTimeXAxis");
                    }
                    else if (TypeRegistrar.isRegistered("TimeXAxis")) {
                        a = TypeRegistrar.create("TimeXAxis");
                    }
                    else {
                        throw new BaseError(1, "no valid axes loaded");
                    }
                    return a;
                case 1:
                    if (TypeRegistrar.isRegistered("TimeXAxis")) {
                        a = TypeRegistrar.create("TimeXAxis");
                    }
                    else if (TypeRegistrar.isRegistered("OrdinalTimeXAxis")) {
                        a = TypeRegistrar.create("OrdinalTimeXAxis");
                    }
                    else {
                        throw new BaseError(1, "no valid axes loaded");
                    }
                    return a;
            }
            return null;
        }
    };
    FinancialChart.prototype.uv = function (axisType_) {
        if ((this.externalObject)) {
            return (this.externalObject.createYAxis(axisType_).i);
        }
        else {
            var a = void 0;
            switch (axisType_) {
                case 0:
                    if (TypeRegistrar.isRegistered("NumericYAxis")) {
                        a = TypeRegistrar.create("NumericYAxis");
                    }
                    else if (TypeRegistrar.isRegistered("PercentChangeYAxis")) {
                        a = TypeRegistrar.create("PercentChangeYAxis");
                    }
                    else {
                        throw new BaseError(1, "no valid axes loaded");
                    }
                    return a;
                case 1:
                    if (TypeRegistrar.isRegistered("PercentChangeYAxis")) {
                        a = TypeRegistrar.create("PercentChangeYAxis");
                    }
                    else if (TypeRegistrar.isRegistered("NumericYAxis")) {
                        a = TypeRegistrar.create("NumericYAxis");
                    }
                    else {
                        throw new BaseError(1, "no valid axes loaded");
                    }
                    return a;
            }
            return null;
        }
    };
    FinancialChart.prototype.u1 = function () {
        return this.bc(1);
    };
    FinancialChart.prototype.u2 = function () {
        return this.bc(0);
    };
    FinancialChart.prototype.u0 = function () {
        return this.bc(2);
    };
    FinancialChart.prototype.u3 = function () {
        return this.bc(20);
    };
    Object.defineProperty(FinancialChart.prototype, "vi", {
        get: function () {
            return (TypeRegistrar.isRegistered("HorizontalAnchoredCategorySeriesProxy"));
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "ui", {
        get: function () {
            if (TypeRegistrar.isRegistered("HorizontalAnchoredCategorySeriesProxy")) {
                return TypeRegistrar.create("HorizontalAnchoredCategorySeriesProxy");
            }
            else {
                throw new BaseError(1, "horizontal series module is not loaded, but is required.");
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "vl", {
        get: function () {
            return (TypeRegistrar.isRegistered("FinancialPriceSeriesProxy"));
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "ug", {
        get: function () {
            if (TypeRegistrar.isRegistered("FinancialPriceSeriesProxy")) {
                return TypeRegistrar.create("FinancialPriceSeriesProxy");
            }
            else {
                throw new BaseError(1, "financial series module is not loaded, but is required.");
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "vj", {
        get: function () {
            return (TypeRegistrar.isRegistered("IndicatorProxy"));
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "uk", {
        get: function () {
            if (TypeRegistrar.isRegistered("IndicatorProxy")) {
                return TypeRegistrar.create("IndicatorProxy");
            }
            else {
                throw new BaseError(1, "financial series module is not loaded, but is required.");
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "vk", {
        get: function () {
            return (TypeRegistrar.isRegistered("OverlayProxy"));
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "up", {
        get: function () {
            if (TypeRegistrar.isRegistered("OverlayProxy")) {
                return TypeRegistrar.create("OverlayProxy");
            }
            else {
                throw new BaseError(1, "overlay series module is not loaded, but is required.");
            }
        },
        enumerable: false,
        configurable: true
    });
    FinancialChart.prototype.bb = function (a, b) {
        var c = this.x8(a);
        switch (this.ty(a)) {
            case 3:
                var d = this.u1();
                this.ui.setValueMemberPath(d, c);
                this.ui.setXAxis(d, this.xAxis);
                this.ui.setYAxis(d, this.yAxis);
                this.ui.setCategoryMode(d, 1);
                return d;
            case 4:
                var e = this.u2();
                this.ui.setValueMemberPath(e, c);
                this.ui.setXAxis(e, this.xAxis);
                this.ui.setYAxis(e, this.yAxis);
                this.ui.setCategoryMode(e, 1);
                return e;
            default:
            case 1:
            case 2:
                var f = this.u3();
                this.ug.setOpenMemberPath(f, a.getMemberPathFor(11));
                this.ug.setHighMemberPath(f, a.getMemberPathFor(12));
                this.ug.setLowMemberPath(f, a.getMemberPathFor(13));
                this.ug.setCloseMemberPath(f, a.getMemberPathFor(14));
                this.ug.setVolumeMemberPath(f, a.getMemberPathFor(15));
                this.ug.setXAxis(f, this.xAxis);
                this.ug.setYAxis(f, this.yAxis);
                this.ug.setDisplayType(f, this.tw == 1 ? 1 : 0);
                this.ug.setCategoryMode(f, 1);
                return f;
        }
    };
    FinancialChart.prototype.kp = function () {
        _super.prototype.kp.call(this);
        this.aas(this.xAxis);
        this.abf(false);
        if (this.t1 != 0 && this.volumeChart != null) {
            this.aay();
        }
        this.aas(this.volumeXAxis);
        this.aas(this.indicatorXAxis);
        this.abc();
        this.abe();
        if (this.t8 != 0) {
            this.aaz();
            this.aas(this.zoomSliderXAxis);
        }
    };
    FinancialChart.prototype.ra = function (a, b) {
        var e_2, _a;
        _super.prototype.ra.call(this, a, b);
        a(this.volumeXAxis);
        if (this.v6 != null) {
            try {
                for (var _b = __values(fromEnum(this.v6)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var c = _c.value;
                    a(c);
                }
            }
            catch (e_2_1) {
                e_2 = { error: e_2_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_2)
                        throw e_2.error;
                }
            }
        }
        var d = true;
        switch (b) {
            case "XAxisMajorStroke":
            case "XAxisMajorStrokeThickness":
                d = false;
                break;
        }
        if (d) {
            a(this.zoomSliderXAxis);
        }
    };
    FinancialChart.prototype.rf = function (a, b) {
        var e_3, _a;
        _super.prototype.rf.call(this, a, b);
        if (b) {
            a(this.volumeAxis);
            if (this.v4 != null) {
                try {
                    for (var _b = __values(fromEnum(this.v4)), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var c = _c.value;
                        a(c);
                    }
                }
                catch (e_3_1) {
                    e_3 = { error: e_3_1 };
                }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return))
                            _a.call(_b);
                    }
                    finally {
                        if (e_3)
                            throw e_3.error;
                    }
                }
            }
            a(this.zoomSliderAxis);
        }
    };
    FinancialChart.prototype.rd = function (a) {
        _super.prototype.rd.call(this, a);
        this.q4(this.volumeXAxis, a);
        this.q4(this.indicatorXAxis, a);
        this.q4(this.zoomSliderXAxis, a);
    };
    FinancialChart.prototype.ri = function (a) {
        _super.prototype.ri.call(this, a);
        this.q4(this.volumeAxis, a);
        this.q4(this.indicatorAxis, a);
        this.q4(this.zoomSliderAxis, a);
    };
    FinancialChart.prototype.rg = function (a) {
        _super.prototype.rg.call(this, a);
        this.q3(this.volumeAxis, a);
        this.q3(this.indicatorAxis, a);
        this.q3(this.zoomSliderAxis, a);
    };
    FinancialChart.prototype.rb = function (a) {
        _super.prototype.rb.call(this, a);
        this.q3(this.volumeXAxis, a);
        this.q3(this.indicatorXAxis, a);
        this.q3(this.zoomSliderXAxis, a);
    };
    FinancialChart.prototype.jh = function (a) {
        var _this = this;
        _super.prototype.jh.call(this, a);
        if (a == null) {
            return;
        }
        if (a == this.zoomSliderChart) {
            a.qi = a.ql = false;
            a.legend = null;
            if (this.dataChart != null) {
                a.ag = this.dataChart.ag;
                a.aj = this.dataChart.aj;
            }
        }
        else {
            SyncManager.d(a, ((function () {
                var $ret = new SyncSettings();
                $ret.syncChannel = _this.y3();
                $ret.synchronizeHorizontally = true;
                $ret.synchronizeVertically = false;
                return $ret;
            })()));
            SyncManager.c(a);
        }
        a.b3 = 2;
    };
    FinancialChart.prototype.y3 = function () {
        if (this.x0 == null) {
            FinancialChart.xk++;
            this.x0 = FinancialChart.xk.toString();
        }
        return this.x0;
    };
    FinancialChart.prototype.aae = function (a, b) {
        this.z0();
        this.aau();
    };
    FinancialChart.prototype.z0 = function () {
        var e_4, _a;
        if (this.yAxis.b3()) {
            return;
        }
        var a = this.yAxis.av.a9;
        if (this.t1 != 0) {
            a = Math.max(a, this.volumeAxis.av.a9);
        }
        try {
            for (var _b = __values(fromEnum(this.v4)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var b = _c.value;
                a = Math.max(a, b.av.a9);
            }
        }
        catch (e_4_1) {
            e_4 = { error: e_4_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_4)
                    throw e_4.error;
            }
        }
        this.z1(a);
    };
    FinancialChart.prototype.z1 = function (a) {
        var e_5, _a;
        if (this.yAxis.b3()) {
            return;
        }
        this.yAxis.eg = this.volumeAxis.eg = a;
        try {
            for (var _b = __values(fromEnum(this.v4)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var b = _c.value;
                b.eg = a;
            }
        }
        catch (e_5_1) {
            e_5 = { error: e_5_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_5)
                    throw e_5.error;
            }
        }
        this.zoomSliderAxis.eg = this.yAxis.eg;
    };
    FinancialChart.prototype.z6 = function (a) {
        if (this.indicatorCharts == null) {
            return;
        }
        for (var b = 0; b < this.indicatorCharts.count; b++) {
            var c = this.indicatorCharts._inner[b];
            for (var d = 0; d < c.series.count; d++) {
                var e = c.series._inner[d];
                if (!(this.vn(e))) {
                    continue;
                }
                a(c.series._inner[d], b);
            }
        }
    };
    FinancialChart.prototype.z9 = function (a) {
        if (this.volumeChart == null) {
            return;
        }
        for (var b = 0; b < this.volumeChart.series.count; b++) {
            var c = this.volumeChart.series._inner[b];
            if (c.c6) {
                continue;
            }
            a(this.volumeChart.series._inner[b], b);
        }
    };
    FinancialChart.prototype.z7 = function (a) {
        if (this.dataChart == null) {
            return;
        }
        for (var b = 0; b < this.dataChart.series.count; b++) {
            var c = this.dataChart.series._inner[b];
            if (!this.vp(c)) {
                continue;
            }
            a(c, b);
        }
    };
    FinancialChart.prototype.z8 = function (a, b) {
        if (this.dataChart == null) {
            return;
        }
        for (var c = 0; c < this.dataChart.series.count; c++) {
            var d = this.dataChart.series._inner[c];
            if (this.vp(d)) {
                continue;
            }
            var e = this.xe(d, c);
            a(d, e);
        }
        if (b) {
            this.aaa(a);
        }
    };
    FinancialChart.prototype.aaa = function (a) {
        if (this.zoomSliderChart == null) {
            return;
        }
        for (var b = 0; b < this.zoomSliderChart.series.count; b++) {
            var c = this.zoomSliderChart.series._inner[b];
            if (c.c6) {
                continue;
            }
            a(this.zoomSliderChart.series._inner[b], b);
        }
    };
    FinancialChart.prototype.xe = function (a, b) {
        if (a.b8 != this.dataChart) {
            return b;
        }
        var c = this.ac == null || this.ac.dataSeries == null ? 0 : this.ac.dataSeries.count;
        var d = this.uc == null ? 0 : this.uc.count;
        return b - (c * d);
    };
    FinancialChart.prototype.i7 = function (a) {
        _super.prototype.i7.call(this, a);
        this.z9(a);
        this.z6(a);
        this.aaa(a);
    };
    Object.defineProperty(FinancialChart.prototype, "volumeChart", {
        get: function () {
            return this.u7;
        },
        set: function (a) {
            var b = this.volumeChart;
            if (a != b) {
                this.u7 = a;
                this.j6("VolumeChart", b, this.volumeChart);
            }
        },
        enumerable: false,
        configurable: true
    });
    FinancialChart.prototype.aay = function () {
        if (this.dataChart == null) {
            return;
        }
        this.volumeChart.series.clear();
        var a = new List$1(Series.$, 0);
        var b = -1;
        for (var c = 0; c < this.dataChart.series.count; c++) {
            var d = this.dataChart.series._inner[c];
            if (this.vp(d) || d.c6) {
                continue;
            }
            b++;
            var e = void 0;
            var f = this.t1;
            f = this.t0(f);
            switch (f) {
                case 2:
                    e = this.u2();
                    break;
                case 3:
                    e = this.u0();
                    break;
                default:
                case 1:
                    e = this.u1();
                    break;
            }
            this.ui.setCategoryMode(e, 1);
            e.name = "volumeSeries_" + b;
            e.itemsSource = d.itemsSource;
            this.ui.setXAxis(e, this.volumeXAxis);
            this.ui.setYAxis(e, this.volumeAxis);
            this.ui.setValueMemberPath(e, this.ac != null && this.ac.dataSeries != null && this.ac.dataSeries.count > b ? this.ac.dataSeries._inner[b].getMemberPathFor(15) : null);
            e.hp = d.hp + " Volume";
            e.oj = ArrayExtension.getModulus$1(Brush.$, this.s9, b);
            e.oo = ArrayExtension.getModulus$1(Brush.$, this.ta, b);
            e.gm = this.wu;
            a.add(e);
        }
        var g = this.c1("volume", false);
        if (g != null) {
            a.o(g);
        }
        for (var h = 0; h < a.count; h++) {
            var i = a._inner[h];
            this.volumeChart.series.add(i);
            this.jm(i, h);
        }
    };
    FinancialChart.prototype.vm = function (a) {
        if (!this.vi) {
            return false;
        }
        return this.ui.matchesType(a);
    };
    FinancialChart.prototype.vq = function (a) {
        if (!this.vl) {
            return false;
        }
        return this.ug.matchesType(a);
    };
    FinancialChart.prototype.vn = function (a) {
        if (!this.vj) {
            return false;
        }
        return this.uk.matchesType(a);
    };
    FinancialChart.prototype.vp = function (a) {
        if (!this.vk) {
            return false;
        }
        return this.up.matchesType(a);
    };
    FinancialChart.prototype.aax = function () {
        if (this.dataChart == null) {
            return;
        }
        var a = 0;
        var b = this.ua == null ? 0 : this.ua.count;
        var c = this.customIndicatorNames == null ? 0 : this.customIndicatorNames.count;
        var d = b + c;
        for (var e = 0; e < d; e++) {
            var f = new List$1(Series.$, 0);
            var g = this.indicatorCharts._inner[e];
            var h = e >= b;
            var i = h ? this.customIndicatorNames._inner[e - b] : EnumUtil.getName(FinancialIndicatorType_$type, this.ua._inner[e]);
            var j = -1;
            for (var k = 0; k < this.dataChart.series.count; k++) {
                var l = this.dataChart.series._inner[k];
                if (this.vp(l) || l.c6) {
                    continue;
                }
                j++;
                var m = void 0;
                if (h) {
                    var n = this.u4("Custom");
                    this.uk.handleCustomIndicatorEvent(n, runOn(this, this.aac));
                    m = n;
                }
                else {
                    m = this.u6(this.ua._inner[e]);
                }
                if (m == null) {
                    continue;
                }
                m.name = "indicator_" + a++;
                this.uk.setXAxis(m, this.v6._inner[e]);
                this.uk.setYAxis(m, this.v4._inner[e]);
                m.itemsSource = l.itemsSource;
                this.uk.setOpenMemberPath(m, this.ac.dataSeries._inner[j].getMemberPathFor(11));
                this.uk.setHighMemberPath(m, this.ac.dataSeries._inner[j].getMemberPathFor(12));
                this.uk.setLowMemberPath(m, this.ac.dataSeries._inner[j].getMemberPathFor(13));
                this.uk.setCloseMemberPath(m, this.ac.dataSeries._inner[j].getMemberPathFor(14));
                this.uk.setVolumeMemberPath(m, this.ac.dataSeries._inner[j].getMemberPathFor(15));
                m.hp = l.hp + " " + i;
                m.oj = ArrayExtension.getModulus$1(Brush.$, this.s3, e);
                m.gm = this.wq;
                if (this.vn(m)) {
                    this.uk.setNegativeBrush(m, ArrayExtension.getModulus$1(Brush.$, this.s4, e));
                    this.uk.setDisplayType(m, ArrayExtension.getModulus$1(IndicatorDisplayType_$type, this.um, e));
                }
                if (this.xg != -2147483648 && this.vn(m)) {
                    this.uk.setPeriodOverride(m, this.xg);
                }
                if (this.vn(m)) {
                    this.uk.setSmoothingPeriod(m, this.xj);
                }
                if (this.vn(m)) {
                    this.uk.setSignalPeriod(m, this.xi);
                }
                if (this.vn(m)) {
                    this.uk.setShortPeriod(m, this.xh);
                    this.uk.setLongPeriod(m, this.xf);
                }
                this.jm(m, e);
                f.add(m);
            }
            var o = this.c1(i, false);
            for (var p = 0; p < f.count; p++) {
                var q = f._inner[p];
                g.series.add(q);
            }
            if (o != null) {
                for (var r = 0; r < o.count; r++) {
                    var s = o._inner[r];
                    g.series.add(s);
                    this.jm(s, r);
                }
            }
        }
    };
    FinancialChart.prototype.u4 = function (indicatorName_) {
        return (this.externalObject.createIndicator(indicatorName_ + 'Indicator').i);
    };
    FinancialChart.prototype.u6 = function (a) {
        return this.u4(EnumUtil.getName(FinancialIndicatorType_$type, a));
    };
    FinancialChart.prototype.abf = function (a) {
        if (this.tu == null) {
            return;
        }
        var b = this.xAxis;
        if (b.actualMinimumValue > b.actualMaximumValue) {
            return;
        }
        this.tu.as = b.actualMinimumValue;
        this.tu.ar = b.actualMaximumValue;
        if (a) {
            this.tu.au = b.visibleMinimum;
            this.tu.at = b.visibleMaximum;
        }
        this.tu.bn();
    };
    FinancialChart.prototype.fe = function () {
        var e_6, _a, e_7, _b;
        var _this = this;
        var a = ((function () {
            var $ret = new FinancialChartVisualData();
            $ret.mainChart = _super.prototype.fe.call(_this);
            $ret.volumeChart = _this.volumeChart == null ? null : _this.volumeChart.rm();
            $ret.toolbar = _this.tu == null ? null : _this.tu.aj();
            $ret.zoomChart = _this.zoomSliderChart == null ? null : _this.zoomSliderChart.rm();
            return $ret;
        })());
        if (this.indicatorCharts != null) {
            a.indicatorCharts = new List$1(Base.$, 0);
            try {
                for (var _c = __values(fromEnum(this.indicatorCharts)), _d = _c.next(); !_d.done; _d = _c.next()) {
                    var b = _d.value;
                    a.indicatorCharts.add1(b.rm());
                }
            }
            catch (e_6_1) {
                e_6 = { error: e_6_1 };
            }
            finally {
                try {
                    if (_d && !_d.done && (_a = _c.return))
                        _a.call(_c);
                }
                finally {
                    if (e_6)
                        throw e_6.error;
                }
            }
        }
        if (this.dataChart != null) {
            a.mainChartLeft = this.abo(this.dataChart).x;
            a.mainChartTop = this.abo(this.dataChart).y;
        }
        if (this.volumeChart != null) {
            a.volumeChartLeft = this.abo(this.volumeChart).x;
            a.volumeChartTop = this.abo(this.volumeChart).y;
        }
        if (this.zoomSliderChart != null) {
            a.zoomChartLeft = this.abo(this.zoomSliderChart).x;
            a.zoomChartTop = this.abo(this.zoomSliderChart).y;
        }
        if (this.tu != null) {
            var c = this.abp(this.tu);
            a.toolbarLeft = c.left;
            a.toolbarTop = c.top;
            a.toolbarWidth = c.width;
            a.toolbarHeight = c.height;
        }
        if (this.indicatorCharts != null) {
            a.indicatorChartLefts = new List$1(Number_$type, 0);
            a.indicatorChartTops = new List$1(Number_$type, 0);
            try {
                for (var _e = __values(fromEnum(this.indicatorCharts)), _f = _e.next(); !_f.done; _f = _e.next()) {
                    var d = _f.value;
                    a.indicatorChartLefts.add(this.abo(d).x);
                    a.indicatorChartTops.add(this.abo(d).y);
                }
            }
            catch (e_7_1) {
                e_7 = { error: e_7_1 };
            }
            finally {
                try {
                    if (_f && !_f.done && (_b = _e.return))
                        _b.call(_e);
                }
                finally {
                    if (e_7)
                        throw e_7.error;
                }
            }
        }
        var e = this.abr();
        a.legendLeft = e.left;
        a.legendTop = e.top;
        a.legendWidth = e.width;
        a.legendHeight = e.height;
        a.legend = this.ue == null ? null : this.ue.exportVisualData();
        return a;
    };
    FinancialChart.prototype.x5 = function () {
        var a = this.fe();
        a.scaleByViewport();
        return a.serialize();
    };
    FinancialChart.prototype.u5 = function (overlayName_) {
        return (this.externalObject.createOverlay(overlayName_ + 'Overlay').i);
    };
    FinancialChart.prototype.abe = function () {
        var e_8, _a, e_9, _b;
        if (this.dataChart == null) {
            return;
        }
        var a = new List$1(Series.$, 0);
        try {
            for (var _c = __values(fromEnum(this.dataChart.series)), _d = _c.next(); !_d.done; _d = _c.next()) {
                var b = _d.value;
                if (this.vp(b)) {
                    a.add(b);
                }
            }
        }
        catch (e_8_1) {
            e_8 = { error: e_8_1 };
        }
        finally {
            try {
                if (_d && !_d.done && (_a = _c.return))
                    _a.call(_c);
            }
            finally {
                if (e_8)
                    throw e_8.error;
            }
        }
        try {
            for (var _e = __values(fromEnum(a)), _f = _e.next(); !_f.done; _f = _e.next()) {
                var c = _f.value;
                this.dataChart.series.remove(c);
            }
        }
        catch (e_9_1) {
            e_9 = { error: e_9_1 };
        }
        finally {
            try {
                if (_f && !_f.done && (_b = _e.return))
                    _b.call(_e);
            }
            finally {
                if (e_9)
                    throw e_9.error;
            }
        }
        if (this.uc == null) {
            return;
        }
        var d = new List$1(Series.$, 0);
        var e = -1;
        for (var f = 0; f < this.dataChart.series.count; f++) {
            var g = this.dataChart.series._inner[f];
            if (this.vp(g) || g.c6) {
                continue;
            }
            e++;
            for (var h = 0; h < this.uc.count; h++) {
                var i = this.uc._inner[h];
                var j = void 0;
                switch (i) {
                    case 1:
                        j = this.u5(EnumUtil.getName(FinancialOverlayType_$type, i));
                        break;
                    default:
                    case 0:
                        j = this.u5(EnumUtil.getName(FinancialOverlayType_$type, i));
                        break;
                }
                j.name = g.name + "_" + EnumUtil.getName(FinancialOverlayType_$type, i);
                this.up.setXAxis(j, this.xAxis);
                this.up.setYAxis(j, this.yAxis);
                j.itemsSource = g.itemsSource;
                var k = e * this.uc.count + h;
                j.oj = ArrayExtension.getModulus$1(Brush.$, this.s7, k);
                j.oo = ArrayExtension.getModulus$1(Brush.$, this.s8, k);
                j.gm = this.ws;
                j.hp = g.hp + " " + EnumUtil.getName(FinancialOverlayType_$type, i);
                var l = g;
                if (l == null) {
                    continue;
                }
                var m = this.ac.dataSeries._inner[e];
                this.up.setOpenMemberPath(j, m.getMemberPathFor(11));
                this.up.setHighMemberPath(j, m.getMemberPathFor(12));
                this.up.setLowMemberPath(j, m.getMemberPathFor(13));
                this.up.setCloseMemberPath(j, m.getMemberPathFor(14));
                this.up.setVolumeMemberPath(j, m.getMemberPathFor(15));
                d.add(j);
            }
        }
        var n = new Array(this.dataChart.series.count);
        this.dataChart.series.copyTo(n, 0);
        this.dataChart.skipDataCleanup = true;
        this.dataChart.series.clear();
        this.dataChart.skipDataCleanup = false;
        for (var o = 0; o < n.length; o++) {
            n[o].g9 = -1;
        }
        d.o(n);
        for (var p = 0; p < d.count; p++) {
            var q = d._inner[p];
            this.dataChart.series.add(q);
            this.jm(q, p);
        }
    };
    FinancialChart.prototype.abc = function () {
        var e_10, _a;
        if (this.vv) {
            return;
        }
        this.vv = true;
        if (this.indicatorCharts != null) {
            var a = this.indicatorCharts;
            this.indicatorCharts = null;
            try {
                for (var _b = __values(fromEnum(a)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var b = _c.value;
                    this.aat(b);
                }
            }
            catch (e_10_1) {
                e_10 = { error: e_10_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_10)
                        throw e_10.error;
                }
            }
        }
        if ((this.ua == null || this.ua.count == 0) && (this.customIndicatorNames == null || this.customIndicatorNames.count == 0)) {
            this.indicatorCharts = null;
            if (this.v4 != null) {
                this.v4.clear();
            }
            if (this.v6 != null) {
                this.v6.clear();
            }
            this.aa3();
            this.abd();
            this.vv = false;
            return;
        }
        if (this.indicatorCharts == null) {
            this.indicatorCharts = new List$1(XamDataChart.$, 0);
        }
        this.indicatorCharts.clear();
        this.v4.clear();
        this.v6.clear();
        var c = this.ua == null ? 0 : this.ua.count;
        var d = this.customIndicatorNames == null ? 0 : this.customIndicatorNames.count;
        var e = c + d;
        for (var f = 0; f < e; f++) {
            var g = new XamDataChart();
            this.indicatorCharts.add(g);
            this.aar(g);
            var h = f >= c;
            if (h) {
                g.ie = this.customIndicatorNames._inner[f - c];
            }
            else {
                g.ie = this.x7(this.ua._inner[f]);
            }
            if (this.indicatorAxis != null) {
                var i = void 0;
                var j = void 0;
                if (f == 0) {
                    i = this.indicatorAxis;
                    j = this.indicatorXAxis;
                }
                else {
                    i = new NumericYAxis();
                    if (!this.indicatorXAxis.b9) {
                        j = this.tg(0);
                    }
                    else {
                        j = this.tg(1);
                    }
                }
                j.name = "indicatorXAxis_" + f;
                i.name = "indicatorAxis_" + f;
                g.axes.add(i);
                g.axes.add(j);
                this.v4.add(i);
                this.v6.add(j);
                if (this.cb) {
                    this.q7(i);
                }
                if (this.cb) {
                    this.q5(j);
                }
            }
        }
        this.aax();
        this.aa3();
        if (this.tu != null) {
            this.tu.ae = this.ua;
        }
        this.z2();
        this.abd();
        this.vv = false;
    };
    FinancialChart.prototype.je = function () {
        var e_11, _a, e_12, _b;
        _super.prototype.je.call(this);
        this.q5(this.xAxis);
        this.q5(this.volumeXAxis);
        if (this.v6 != null) {
            try {
                for (var _c = __values(fromEnum(this.v6)), _d = _c.next(); !_d.done; _d = _c.next()) {
                    var a = _d.value;
                    this.q5(a);
                }
            }
            catch (e_11_1) {
                e_11 = { error: e_11_1 };
            }
            finally {
                try {
                    if (_d && !_d.done && (_a = _c.return))
                        _a.call(_c);
                }
                finally {
                    if (e_11)
                        throw e_11.error;
                }
            }
        }
        this.q7(this.yAxis);
        this.q7(this.volumeAxis);
        if (this.v4 != null) {
            try {
                for (var _e = __values(fromEnum(this.v4)), _f = _e.next(); !_f.done; _f = _e.next()) {
                    var b = _f.value;
                    this.q7(b);
                }
            }
            catch (e_12_1) {
                e_12 = { error: e_12_1 };
            }
            finally {
                try {
                    if (_f && !_f.done && (_b = _e.return))
                        _b.call(_e);
                }
                finally {
                    if (e_12)
                        throw e_12.error;
                }
            }
        }
        this.q5(this.zoomSliderXAxis);
        this.q7(this.zoomSliderAxis);
    };
    FinancialChart.prototype.get_cs = function () {
        return !this.vt;
    };
    Object.defineProperty(FinancialChart.prototype, "vz", {
        get: function () {
            return (this.externalObject._dynamicContent);
        },
        enumerable: false,
        configurable: true
    });
    FinancialChart.prototype.abk = function (a, b) {
        this.aa6(a, b);
        this.z2();
        if (this.zoomSliderChart != null) {
            this.zoomSliderChart.axes.add(this.zoomSliderAxis);
            this.zoomSliderChart.axes.add(this.zoomSliderXAxis);
        }
        this.aaz();
        this.zoomSliderXAxis.itemsSource = this.xAxis.itemsSource;
        this.aa4();
        this.abl(a, b);
    };
    FinancialChart.prototype.aaz = function () {
        if (this.dataChart == null || this.zoomSliderChart == null) {
            return;
        }
        this.zoomSliderChart.series.clear();
        var a = new List$1(Series.$, 0);
        for (var b = 0; b < this.dataChart.series.count; b++) {
            var c = this.dataChart.series._inner[b];
            if (this.vp(c) || c.c6) {
                continue;
            }
            var d = void 0;
            var e = this.t8;
            e = this.t7(e);
            var f = this.xe(c, b);
            if (e == 1) {
                switch (this.ty(this.ac != null && this.ac.dataSeries != null && this.ac.dataSeries.count > f ? this.ac.dataSeries._inner[f] : null)) {
                    case 1:
                        e = 2;
                        break;
                    case 2:
                        e = 3;
                        break;
                    case 3:
                        e = 4;
                        break;
                    case 4:
                        e = 5;
                        break;
                }
            }
            switch (e) {
                case 2:
                    d = this.u3();
                    this.ug.setDisplayType(d, 1);
                    break;
                case 3:
                    d = this.u3();
                    this.ug.setDisplayType(d, 0);
                    break;
                case 5:
                    d = this.u2();
                    break;
                case 6:
                    d = this.u0();
                    break;
                default:
                case 4:
                    d = this.u1();
                    break;
            }
            var g = this.ac != null && this.ac.dataSeries != null && this.ac.dataSeries.count > f ? this.ac.dataSeries._inner[f] : null;
            if (d.da && !d.di) {
                this.ui.setCategoryMode(d, 1);
                this.ui.setXAxis(d, this.zoomSliderXAxis);
                this.ui.setYAxis(d, this.zoomSliderAxis);
                this.ui.setValueMemberPath(d, g == null ? null : this.x8(g));
            }
            else if (d.di) {
                this.ug.setCategoryMode(d, 1);
                this.ug.setXAxis(d, this.zoomSliderXAxis);
                this.ug.setYAxis(d, this.zoomSliderAxis);
                if (g != null) {
                    this.ug.setOpenMemberPath(d, g.getMemberPathFor(11));
                    this.ug.setHighMemberPath(d, g.getMemberPathFor(12));
                    this.ug.setLowMemberPath(d, g.getMemberPathFor(13));
                    this.ug.setCloseMemberPath(d, g.getMemberPathFor(14));
                    this.ug.setVolumeMemberPath(d, g.getMemberPathFor(15));
                }
            }
            d.name = "zoomSliderSeries_" + f;
            d.itemsSource = c.itemsSource;
            d.hp = c.hp;
            d.gm = this.ep;
            a.add(d);
        }
        for (var h = 0; h < a.count; h++) {
            var i = a._inner[h];
            this.zoomSliderChart.series.add(i);
            this.jm(i, h);
        }
    };
    FinancialChart.prototype.j1 = function (a, b, c) {
        var e_13, _a;
        _super.prototype.j1.call(this, a, b, c);
        if (a == null || !b) {
            return;
        }
        var d = true;
        var e = true;
        switch (c) {
            case "Brushes":
            case "Outlines":
                d = e = false;
                break;
        }
        if (this.indicatorCharts != null && d) {
            try {
                for (var _b = __values(fromEnum(this.indicatorCharts)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var f = _c.value;
                    a(f);
                }
            }
            catch (e_13_1) {
                e_13 = { error: e_13_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_13)
                        throw e_13.error;
                }
            }
        }
        if (this.volumeChart != null && e) {
            a(this.volumeChart);
        }
        if (this.zoomSliderChart != null) {
            a(this.zoomSliderChart);
        }
    };
    FinancialChart.prototype.aac = function (a, b) {
        var c = b;
        var d = a;
        var e = -1;
        if (this.indicatorCharts != null) {
            e = this.indicatorCharts.indexOf(d.b8);
        }
        e -= this.ua == null ? 0 : this.ua.count;
        if (this.applyCustomIndicators != null) {
            this.applyCustomIndicators(this, new FinancialChartCustomIndicatorArgs(c, d, e));
        }
    };
    FinancialChart.prototype.aa8 = function (a, b, c) {
        if (a != null) {
            if (b != null) {
                a.axes.remove(b);
            }
            a.axes.add(c);
        }
        if (this.cb) {
            this.q5(c);
        }
    };
    Object.defineProperty(FinancialChart.prototype, "vy", {
        get: function () {
            return TypeRegistrar.isRegistered("IgxZoomSliderComponent");
        },
        enumerable: false,
        configurable: true
    });
    FinancialChart.prototype.aad = function (a, b) {
        this.abc();
    };
    FinancialChart.prototype.vr = function (a, b) {
        if (b <= (0)) {
            return false;
        }
        switch (a) {
            case 5: return true;
            case 4:
            case 3: return b >= timeSpanFromDays(365);
            case 2: return b >= timeSpanFromDays(180);
            case 1: return b >= timeSpanFromDays(90);
            case 0: return b >= timeSpanFromDays(30);
        }
        return false;
    };
    FinancialChart.prototype.aa2 = function () {
        var e_14, _a;
        var a = this.ts != null ? this.ts : new FinancialChartRangeSelectorOptionCollection(1, [5, 4, 3, 2, 1, 0]);
        var b = new FinancialChartRangeSelectorOptionCollection(0);
        var c = this.xAxis;
        var d = +(c.actualMaximumValue) - +(c.actualMinimumValue);
        try {
            for (var _b = __values(fromEnum(a)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var e = _c.value;
                if (this.vr(e, d)) {
                    b.add(e);
                }
            }
        }
        catch (e_14_1) {
            e_14 = { error: e_14_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_14)
                    throw e_14.error;
            }
        }
        this.tr = b;
        if (this.tu != null) {
            this.tu.u = this.tr;
        }
    };
    FinancialChart.prototype.aah = function (a, b) {
        this.aa2();
    };
    FinancialChart.prototype.aam = function (a, b) {
        this.uc = this.tu.ag;
    };
    FinancialChart.prototype.aal = function (a, b) {
        this.ua = this.tu.ae;
    };
    FinancialChart.prototype.aaf = function (a, b) {
        this.abc();
    };
    FinancialChart.prototype.aag = function (a, b) {
        this.abe();
    };
    FinancialChart.prototype.aaq = function (a, b) {
        var c = a;
        if (c.bf == null) {
            return;
        }
        if (this.vt) {
            this.aa1(c.bf);
        }
    };
    FinancialChart.prototype.aat = function (a) {
        SyncManager.e(a);
        a.axes.clear();
        a.series.clear();
        a.gridAreaRectChanged = delegateRemove(a.gridAreaRectChanged, runOn(this, this.aae));
        a.provideContainer(null);
        if (this.volumeChart == null && this.indicatorCharts == null) {
            this.yAxis.eg = this.volumeAxis.eg = this.indicatorAxis.eg = 0;
            this.xAxis.ay.visibility = this.st;
        }
    };
    FinancialChart.prototype.aar = function (a) {
        var b = a != this.zoomSliderChart;
        if (b) {
            if (this.dataChart != null) {
                a.pw = new Rect(0, this.dataChart.pg.x, a.pw.y, this.dataChart.pg.width, a.pw.height);
            }
            var c = ((function () {
                var $ret = new SyncSettings();
                $ret.syncChannel = "one";
                $ret.synchronizeHorizontally = true;
                $ret.synchronizeVertically = false;
                return $ret;
            })());
            SyncManager.d(a, c);
            SyncManager.c(a);
        }
        a.gridAreaRectChanged = delegateCombine(a.gridAreaRectChanged, runOn(this, this.aae));
        this.jg(a);
    };
    FinancialChart.prototype.z2 = function () {
        if (this.indicatorCharts != null || this.volumeChart != null) {
            this.q3(this.xAxis, function (a) { return a.visibility = 1; });
        }
        var _loop_1 = function (a) {
            var b = this_1.v6._inner[a];
            var c = a < this_1.v6.count - 1 || this_1.volumeChart != null;
            this_1.q3(b, function (d) { return d.visibility = c ? 1 : 0; });
        };
        var this_1 = this;
        for (var a = 0; a < this.v6.count; a++) {
            _loop_1(a);
        }
    };
    FinancialChart.prototype.aa6 = function (a, b) {
        if (a != null) {
            this.aat(a);
        }
        if (b != null) {
            this.aar(b);
        }
    };
    FinancialChart.prototype.abi = function (a, b) {
        this.aa6(a, b);
        this.z2();
        if (this.volumeChart != null) {
            if (this.volumeAxis != null) {
                this.volumeChart.axes.add(this.volumeAxis);
                this.volumeChart.axes.add(this.volumeXAxis);
            }
            this.aay();
            this.volumeXAxis.itemsSource = this.xAxis.itemsSource;
        }
        this.abj(a, b);
    };
    FinancialChart.prototype.aai = function (a, b) {
        this.abg();
    };
    FinancialChart.prototype.abg = function () {
        if (this.tu == null || +(this.tu.au) == +(dateMaxValue()) || +(this.tu.at) == +(dateMinValue()) || this.dataChart == null) {
            return;
        }
        var a = this.xAxis;
        var b = a.getWindowRectForSelection(this.tu.au, this.tu.at);
        if (b.width == 0 || isNaN_(b.width) || isInfinity(b.width)) {
            return;
        }
        this.vu = true;
        this.dataChart.pw = new Rect(0, b.left, this.dataChart.pw.top, b.width, this.dataChart.pw.height);
        if (this.vc != null) {
            this.vc.windowRect = this.dataChart.pg;
        }
        if (this.vt) {
            this.aa1(this.dataChart);
        }
        this.vu = false;
    };
    FinancialChart.prototype.aap = function (a, b) {
        this.aa2();
        this.abf(!this.vu);
    };
    FinancialChart.prototype.aab = function (a, b) {
        var _this = this;
        if (!this.vu) {
            if (this.vt) {
                this.aa1(a);
            }
            var c = false;
            var d = this.kb(function () { return _this.abf(true); }, c);
            c = d.p1;
            if (this.vc != null) {
                this.vc.windowRect = this.dataChart.pg;
            }
        }
    };
    FinancialChart.prototype.aba = function (a, b, c, d) {
        var e_15, _a;
        if (a == null || b == null) {
            return;
        }
        if (c != -1) {
            this.vu = true;
            a.pw = new Rect(0, d, a.pg.top, c, a.pg.height);
            this.vu = false;
        }
        var e = 1.7976931348623157E+308;
        var f = -1.7976931348623157E+308;
        var g = new Rect(0, 0, 0, 1, 1);
        var h = new ScalerParams(0, g, g, this.yAxis.cc, a.pk);
        try {
            for (var _b = __values(fromEnum(a.series)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var i = _c.value;
                h.b = i.f2();
                var j = i.aq(a.pg);
                var k = j == null || j.c == 1.7976931348623157E+308 || isNaN_(j.c);
                if (k) {
                    continue;
                }
                var l = b.d8(j.c, h);
                var m = b.d8(j.b, h);
                f = Math.max(f, l);
                e = Math.min(e, m);
            }
        }
        catch (e_15_1) {
            e_15 = { error: e_15_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_15)
                    throw e_15.error;
            }
        }
        var n = a.pg.width;
        if (c != -1) {
            n = c;
        }
        var o = a.pg.left;
        if (d != -1) {
            o = d;
        }
        if (e == 1.7976931348623157E+308 || f == -1.7976931348623157E+308 || isNaN_(e) || isNaN_(f)) {
            return;
        }
        this.vu = true;
        var p = new Rect(0, o, e, n, f - e);
        a.pw = p;
        this.vu = false;
    };
    FinancialChart.prototype.aa9 = function (a) {
        if (a == null) {
            return;
        }
        if (a == this.dataChart) {
            this.aba(this.dataChart, this.yAxis, -1, -1);
            if (this.volumeChart != null) {
                this.aba(this.volumeChart, this.volumeAxis, this.dataChart.pg.width, this.dataChart.pg.left);
            }
        }
        else if (a == this.volumeChart) {
            this.aba(this.volumeChart, this.volumeAxis, -1, -1);
            this.aba(this.dataChart, this.yAxis, this.volumeChart.pg.width, this.volumeChart.pg.left);
        }
    };
    FinancialChart.prototype.aa1 = function (a) {
        var _this = this;
        this.ka(function () { return _this.aa9(a); });
    };
    FinancialChart.prototype.aaj = function (a, b) {
        if (this.vt) {
            this.aa1(a);
        }
    };
    FinancialChart.prototype.abh = function () {
        if (!this.vz) {
            return;
        }
        this.z5();
        if (this.t8 == 0) {
            this.zoomSliderChart = null;
        }
        else if (this.zoomSliderChart == null) {
            this.zoomSliderChart = ((function () {
                var $ret = new XamDataChart();
                $ret.name = "ZoomSliderChart";
                return $ret;
            })());
        }
        else {
            this.aaz();
        }
    };
    FinancialChart.prototype.z5 = function () {
        var container_ = this.w6.rootWrapper.getNativeElement();
        var containerParent_ = container_.parentElement;
        if (this.vc != null && containerParent_ != null && !this.v0) {
            this.v0 = true;
            if (TypeRegistrar.isRegistered("IgxZoomSliderComponent")) {
                var z_ = this.vc;
                var f_ = this.externalObject;
                var sliderComponent_ = TypeRegistrar.get("IgxZoomSliderComponent");
                var sliderInstance_ = TypeRegistrar.create("IgxZoomSliderComponent");
                sliderInstance_._implementation = z_;
                sliderComponent_._staticStyling(container_, sliderInstance_, f_);
            }
        }
    };
    FinancialChart.prototype.abb = function () {
        var _this = this;
        if (this.t3 != 1) {
            return;
        }
        this.q9(function (a) {
            var e_16, _a;
            var b;
            b = a.breaks;
            b.clear();
            if (_this.xAxisBreaks == null) {
                return;
            }
            try {
                for (var _b = __values(fromEnum(_this.xAxisBreaks)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var c = _c.value;
                    b.add(c);
                }
            }
            catch (e_16_1) {
                e_16 = { error: e_16_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_16)
                        throw e_16.error;
                }
            }
        });
    };
    FinancialChart.prototype.ku = function (a, b, c) {
        _super.prototype.ku.call(this, a, b, c);
        if (this.ac.dataSeries.count > 0) {
            if (this.t3 == 1 && stringIsNullOrEmpty(this.gb)) {
                this.ak.setXMemberPath(a, c.getMemberPathFor(17));
            }
            if (stringIsNullOrEmpty(this.gd)) {
                this.ak.setYMemberPath(a, this.x8(c));
            }
            if (stringIsNullOrEmpty(this.f7)) {
                this.ak.setLabelMemberPath(a, this.x8(c));
            }
            if (stringIsNullOrEmpty(this.f4)) {
                this.ak.setContentMemberPath(a, this.x8(c));
            }
        }
    };
    FinancialChart.prototype.x7 = function (a) {
        switch (a) {
            case 0: return "Absolute Volume Oscillator";
            case 1: return "Accumulation/Distribution Indicator";
            case 2: return "Average Directional Index";
            case 3: return "Average True Range Indicator";
            case 4: return "Bollinger Bandwidth";
            case 5: return "Chaikin Oscillator";
            case 6: return "Chaikin Volatility Indicator";
            case 7: return "Commodity Channel Index";
            case 8: return "Detrended Price Oscillator";
            case 9: return "Ease of Movement Indicator";
            case 10: return "Fast Stochastic Oscillator";
            case 11: return "Force Index Indicator";
            case 12: return "Full Stochastic Oscillator";
            case 13: return "Market Facilitation Index";
            case 14: return "Mass Index Indicator";
            case 15: return "Median Price Indicator";
            case 16: return "Money Flow Index";
            case 17: return "MACD Indicator";
            case 18: return "Negative Volume Index";
            case 19: return "On Balance Volume Indicator";
            case 20: return "Percentage Price Oscillator";
            case 21: return "Percentage Volume Oscillator";
            case 22: return "Positive Volume Index";
            case 23: return "Price Volume Trend";
            case 24: return "ROC - Rate of Change Indicator";
            case 25: return "RSI - Relative Strength Index";
            case 26: return "Slow Stochastic Oscillator";
            case 27: return "Standard Deviation Indicator";
            case 28: return "Stoch RSI";
            case 29: return "TRIX Indicator";
            case 30: return "Typical Price Indicator";
            case 31: return "Ultimate Oscillator";
            case 32: return "Weighted Close Indicator";
            case 33: return "Williams %R Indicator";
            default: return "Unknown";
        }
    };
    FinancialChart.prototype.q5 = function (a) {
        var e_17, _a;
        _super.prototype.q5.call(this, a);
        var b = a;
        this.aas(b);
        if (a.bf != null) {
            try {
                for (var _b = __values(fromEnum(a.bf.series)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var c = _c.value;
                    if (this.vm(c)) {
                        this.ui.setXAxis(c, b);
                    }
                    else if (this.vq(c)) {
                        this.ug.setXAxis(c, b);
                    }
                    else if (this.vn(c)) {
                        this.uk.setXAxis(c, b);
                    }
                    else if (this.vp(c)) {
                        this.up.setXAxis(c, b);
                    }
                }
            }
            catch (e_17_1) {
                e_17 = { error: e_17_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_17)
                        throw e_17.error;
                }
            }
        }
        var d = a == this.zoomSliderXAxis;
        if (d) {
            a.jb = this.abn;
            a.ef = this.w1;
            this.q3(a, function (e) { return e.visibility = 1; });
        }
        var e = a;
        e.minimumValue = this.wc;
        e.maximumValue = this.wb;
    };
    FinancialChart.prototype.q7 = function (a) {
        var e_18, _a;
        _super.prototype.q7.call(this, a);
        if (a.bf != null && a == this.yAxis) {
            try {
                for (var _b = __values(fromEnum(a.bf.series)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var b = _c.value;
                    if (this.vm(b)) {
                        this.ui.setYAxis(b, this.yAxis);
                    }
                    else if (this.vq(b)) {
                        this.ug.setYAxis(b, this.yAxis);
                    }
                    else if (this.vn(b)) {
                        this.uk.setYAxis(b, this.yAxis);
                    }
                    else if (this.vp(b)) {
                        this.up.setYAxis(b, this.yAxis);
                    }
                }
            }
            catch (e_18_1) {
                e_18 = { error: e_18_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_18)
                        throw e_18.error;
                }
            }
        }
        a.kf = this.vw;
        a.k3 = this.wz;
        a.k2 = this.wy;
        if (a == this.yAxis) {
            a.kz = this.wx;
        }
        var c = a == this.zoomSliderAxis;
        if (c) {
            this.q3(a, function (d) { return d.visibility = 1; });
        }
    };
    FinancialChart.prototype.aas = function (a) {
        a.itemsSource = this.dataChart != null && this.dataChart.series.count > 0 ? this.dataChart.series._inner[0].itemsSource : null;
        a.fj = XYChart.os(a, this.ac.dataSeries);
        if (this.ac.dataSeries.count > 0) {
            var b = this.ac.dataSeries._inner[0].getMemberPathFor(17);
            a.hg(b);
        }
    };
    FinancialChart.prototype.jm = function (a, b) {
        _super.prototype.jm.call(this, a, b);
        if (a == null) {
            return;
        }
        var c = this.zoomSliderChart == a.b8;
        var d = this.dataChart != null && this.dataChart.series.contains(a);
        if ((d || c) && a.dx) {
            a.l5(this.s5 != null ? ArrayExtension.getModulus$1(Brush.$, this.s5, b) : null, this.s6 != null ? ArrayExtension.getModulus$1(Brush.$, this.s6, b) : null);
        }
        var e = this.vn(a);
        if (this.vp(a)) {
            a.oj = this.s7 != null ? ArrayExtension.getModulus$1(Brush.$, this.s7, b) : null;
            a.oo = this.s8 != null ? ArrayExtension.getModulus$1(Brush.$, this.s8, b) : null;
            a.gm = this.ws;
        }
        else if (e) {
            a.oj = this.s3 != null ? ArrayExtension.getModulus$1(Brush.$, this.s3, b) : null;
            a.gm = this.wq;
        }
        else if (!a.c6 && (d || c)) {
            a.oj = this.n != null ? ArrayExtension.getModulus$1(Brush.$, this.n, b) : null;
            a.oo = this.r != null ? ArrayExtension.getModulus$1(Brush.$, this.r, b) : null;
        }
        var f = this.volumeChart != null && this.volumeChart == a.b8;
        if (f) {
            a.gm = this.wu;
        }
        a.legend = c || f || e || !a.isUsableInLegend ? null : this.legend != null ? this.legend : this.vo ? this.ue : null;
    };
    FinancialChart.prototype.j6 = function (a, b, c) {
        var e_19, _a, e_20, _b;
        var _this = this;
        _super.prototype.j6.call(this, a, b, c);
        switch (a) {
            case "YAxisIsLogarithmic":
                this.yAxis.kk = this.vx;
                if (this.volumeAxis != null) {
                    this.volumeAxis.kk = this.vx;
                }
                if (this.zoomSliderAxis != null) {
                    this.zoomSliderAxis.kk = this.vx;
                }
                break;
            case "YAxisLogarithmBase":
                this.yAxis.k7 = this.xl;
                if (this.volumeAxis != null) {
                    this.volumeAxis.k7 = this.xl;
                }
                if (this.zoomSliderAxis != null) {
                    this.zoomSliderAxis.k7 = this.xl;
                }
                break;
            case "VolumeType":
                var d = EnumUtil.getEnumValue(FinancialChartVolumeType_$type, b);
                if (this.t1 == 0) {
                    this.volumeChart = null;
                }
                else if (this.volumeChart == null) {
                    this.volumeChart = ((function () {
                        var $ret = new XamDataChart();
                        $ret.name = "VolumeChart";
                        return $ret;
                    })());
                }
                else {
                    this.aay();
                }
                break;
            case "VolumeChart":
                this.abi(typeCast(XamDataChart.$, b), typeCast(XamDataChart.$, c));
                break;
            case "DataChart":
                if (typeCast(XamDataChart.$, b) !== null) {
                    var e = b;
                    e.gridAreaRectChanged = delegateRemove(e.gridAreaRectChanged, runOn(this, this.aae));
                    e.actualWindowRectChanged = delegateRemove(e.actualWindowRectChanged, runOn(this, this.aab));
                    e.seriesDataUpdated = delegateRemove(e.seriesDataUpdated, runOn(this, this.aaj));
                }
                if (this.dataChart != null) {
                    var f = this.dataChart;
                    f.gridAreaRectChanged = delegateCombine(f.gridAreaRectChanged, runOn(this, this.aae));
                    var g = this.dataChart;
                    g.actualWindowRectChanged = delegateCombine(g.actualWindowRectChanged, runOn(this, this.aab));
                    var h = this.dataChart;
                    h.seriesDataUpdated = delegateCombine(h.seriesDataUpdated, runOn(this, this.aaj));
                }
                this.abh();
                break;
            case "XAxisMode":
                this.xAxis = this.tg(this.t3);
                this.xAxis.name = "xAxis";
                this.volumeXAxis = this.tg(this.t3);
                this.volumeXAxis.name = "volumeXAxis";
                this.indicatorXAxis = this.tg(this.t3);
                this.indicatorXAxis.name = "indicatorXAxis_0";
                this.zoomSliderXAxis = this.tg(this.t3);
                this.zoomSliderXAxis.name = "zoomSliderXAxis";
                this.q3(this.zoomSliderXAxis, function (i) { return i.visibility = 1; });
                this.z2();
                if (this.t3 == 1) {
                    this.abb();
                }
                break;
            case "YAxisMode":
                this.yAxis = this.uu(this.t5);
                this.yAxis.name = "yAxis";
                this.zoomSliderAxis = this.uu(this.t5);
                this.zoomSliderAxis.name = "zoomSliderAxis";
                this.volumeAxis = this.uu(this.t5);
                this.volumeAxis.name = "volumeAxis";
                break;
            case "Toolbar":
                var i = typeCast(FinancialChartToolbar.$, b);
                if (i != null) {
                    i.rangeChanged = delegateRemove(i.rangeChanged, runOn(this, this.aai));
                    i.indicatorTypesChanged = delegateRemove(i.indicatorTypesChanged, runOn(this, this.aal));
                    i.overlayTypesChanged = delegateRemove(i.overlayTypesChanged, runOn(this, this.aam));
                }
                if (this.tu != null) {
                    this.tu.ae = this.ua;
                    this.tu.ag = this.uc;
                    this.tu.u = this.tr;
                    this.abf(true);
                    var j = this.tu;
                    j.rangeChanged = delegateCombine(j.rangeChanged, runOn(this, this.aai));
                    var k = this.tu;
                    k.indicatorTypesChanged = delegateCombine(k.indicatorTypesChanged, runOn(this, this.aal));
                    var l = this.tu;
                    l.overlayTypesChanged = delegateCombine(l.overlayTypesChanged, runOn(this, this.aam));
                }
                break;
            case "XAxis":
                var m = typeCast(CategoryAxisBase.$, b);
                if (m != null) {
                    if (this.dataChart != null) {
                        this.dataChart.axes.remove(m);
                    }
                }
                var n = typeCast(ITimeRangeSelectorAxis_$type, b);
                if (n != null) {
                    n.visibleRangeChanged = delegateRemove(n.visibleRangeChanged, runOn(this, this.aap));
                }
                if (this.dataChart != null) {
                    this.dataChart.axes.add(this.xAxis);
                }
                if (this.cb) {
                    this.q5(this.xAxis);
                    this.i5();
                }
                this.abf(false);
                this.abg();
                this.aa2();
                var o = this.xAxis;
                o.visibleRangeChanged = delegateCombine(o.visibleRangeChanged, runOn(this, this.aap));
                break;
            case "ChartType":
                this.kp();
                break;
            case "VolumeXAxis":
                this.aa8(this.volumeChart, typeCast(Axis.$, b), this.volumeXAxis);
                break;
            case "ZoomSliderXAxis":
                this.aa8(this.zoomSliderChart, typeCast(Axis.$, b), this.zoomSliderXAxis);
                break;
            case "IndicatorXAxis":
                this.abc();
                break;
            case "YAxis":
                var p = typeCast(NumericYAxis.$, b);
                if (p != null) {
                    if (this.dataChart != null) {
                        this.dataChart.axes.remove(p);
                    }
                }
                if (this.dataChart != null) {
                    this.dataChart.axes.add(this.yAxis);
                }
                if (this.cb) {
                    this.q7(this.yAxis);
                    this.q7(this.yAxis);
                }
                var q = this.yAxis;
                q.rangeChanged = delegateCombine(q.rangeChanged, runOn(this, this.aaq));
                break;
            case "VolumeAxis":
                var r = typeCast(Axis.$, b);
                if (this.volumeChart != null && r != null) {
                    this.volumeChart.axes.remove(r);
                }
                if (this.volumeChart != null && this.volumeAxis != null) {
                    this.volumeChart.axes.add(this.volumeAxis);
                    this.aay();
                }
                if (this.cb) {
                    this.q7(this.volumeAxis);
                }
                var s = this.volumeAxis;
                s.rangeChanged = delegateCombine(s.rangeChanged, runOn(this, this.aaq));
                break;
            case "IndicatorAxis":
                if (this.indicatorCharts != null) {
                    for (var t = 0; t < this.indicatorCharts.count; t++) {
                        var u = this.indicatorCharts._inner[t];
                        var v = new List$1(Axis.$, 0);
                        try {
                            for (var _c = (e_19 = void 0, __values(fromEnum(u.axes))), _d = _c.next(); !_d.done; _d = _c.next()) {
                                var w = _d.value;
                                if (typeCast(NumericYAxis.$, w) !== null) {
                                    v.add(w);
                                }
                            }
                        }
                        catch (e_19_1) {
                            e_19 = { error: e_19_1 };
                        }
                        finally {
                            try {
                                if (_d && !_d.done && (_a = _c.return))
                                    _a.call(_c);
                            }
                            finally {
                                if (e_19)
                                    throw e_19.error;
                            }
                        }
                        try {
                            for (var _e = (e_20 = void 0, __values(fromEnum(v))), _f = _e.next(); !_f.done; _f = _e.next()) {
                                var x = _f.value;
                                u.axes.remove(x);
                            }
                        }
                        catch (e_20_1) {
                            e_20 = { error: e_20_1 };
                        }
                        finally {
                            try {
                                if (_f && !_f.done && (_b = _e.return))
                                    _b.call(_e);
                            }
                            finally {
                                if (e_20)
                                    throw e_20.error;
                            }
                        }
                        var y = null;
                        if (t == 0) {
                            y = this.indicatorAxis;
                        }
                        else if (this.t5 == 1) {
                            y = this.uu(this.t5);
                        }
                        else if (typeCast(NumericYAxis.$, this.indicatorAxis) !== null) {
                            y = new NumericYAxis();
                        }
                        if (y != null) {
                            u.axes.add(y);
                        }
                        if (this.cb) {
                            this.q7(y);
                        }
                    }
                }
                break;
            case "IsWindowSyncedToVisibleRange":
                if (this.dataChart != null) {
                    this.dataChart.ql = this.ct && this.cs;
                }
                if (this.volumeChart != null) {
                    this.volumeChart.ql = this.ct && this.cs;
                }
                if (this.vt) {
                    this.aa9(this.dataChart);
                }
                else {
                    this.volumeChart.rk = 1;
                }
                break;
            case "IndicatorTypes":
                var z = typeCast(ObservableCollection$1.$.specialize(FinancialIndicatorType_$type), b);
                if (z != null) {
                    z.collectionChanged = delegateRemove(z.collectionChanged, runOn(this, this.aaf));
                }
                var aa = typeCast(ObservableCollection$1.$.specialize(FinancialIndicatorType_$type), c);
                if (aa != null) {
                    aa.collectionChanged = delegateCombine(aa.collectionChanged, runOn(this, this.aaf));
                }
                this.abc();
                break;
            case "OverlayTypes":
                var ab = typeCast(ObservableCollection$1.$.specialize(FinancialOverlayType_$type), b);
                if (ab != null) {
                    ab.collectionChanged = delegateRemove(ab.collectionChanged, runOn(this, this.aag));
                }
                var ac = typeCast(ObservableCollection$1.$.specialize(FinancialOverlayType_$type), c);
                if (ac != null) {
                    ac.collectionChanged = delegateCombine(ac.collectionChanged, runOn(this, this.aag));
                }
                this.abe();
                break;
            case "YAxisAbbreviateLargeNumbers":
                this.re(function (ad) { return ad.kf = _this.vw; });
                break;
            case "YAxisMinimumValue":
                this.rf(function (ad) { return ad.k3 = _this.wz; }, false);
                break;
            case "YAxisMaximumValue":
                this.rf(function (ad) { return ad.k2 = _this.wy; }, false);
                break;
            case "YAxisInterval":
                this.rf(function (ad) { return ad.kz = _this.wx; }, false);
                break;
            case "Thickness":
            case "ZoomSliderType":
                this.abh();
                break;
            case "ZoomSliderChart":
                if (!this.vy) {
                    return;
                }
                this.abk(typeCast(XamDataChart.$, b), typeCast(XamDataChart.$, c));
                break;
            case "NegativeBrushes":
            case "NegativeOutlines":
                this.z8(function (ad, ae) {
                    if (ad.dx) {
                        ad.l5(_this.s5 != null ? ArrayExtension.getModulus$1(Brush.$, _this.s5, ae) : null, _this.s6 != null ? ArrayExtension.getModulus$1(Brush.$, _this.s6, ae) : null);
                    }
                }, true);
                break;
            case "OverlayBrushes":
                this.z7(function (ad, ae) { return ad.oj = _this.s7 != null ? ArrayExtension.getModulus$1(Brush.$, _this.s7, ae) : null; });
                break;
            case "OverlayOutlines":
                this.z7(function (ad, ae) { return ad.oo = _this.s8 != null ? ArrayExtension.getModulus$1(Brush.$, _this.s8, ae) : null; });
                break;
            case "OverlayThickness":
                this.z7(function (ad, ae) { return ad.gm = _this.ws; });
                break;
            case "OverlayMultiplier":
                this.z7(function (ad, ae) { return _this.up.setMultiplier(ad, _this.wr); });
                break;
            case "VolumeBrushes":
                this.z9(function (ad, ae) { return ad.oj = ArrayExtension.getModulus$1(Brush.$, _this.s9, ae); });
                break;
            case "VolumeOutlines":
                this.z9(function (ad, ae) { return ad.oo = ArrayExtension.getModulus$1(Brush.$, _this.ta, ae); });
                break;
            case "VolumeThickness":
                this.z9(function (ad, ae) { return ad.gm = _this.wu; });
                break;
            case "IndicatorNegativeBrushes":
                this.z6(function (ad, ae) { return _this.uk.setNegativeBrush(ad, ArrayExtension.getModulus$1(Brush.$, _this.s4, ae)); });
                break;
            case "IndicatorBrushes":
                this.z6(function (ad, ae) { return ad.oj = ArrayExtension.getModulus$1(Brush.$, _this.s3, ae); });
                break;
            case "IndicatorThickness":
                this.z6(function (ad, ae) { return ad.gm = _this.wq; });
                break;
            case "IndicatorDisplayTypes":
                this.z6(function (ad, ae) { return _this.uk.setDisplayType(ad, ArrayExtension.getModulus$1(IndicatorDisplayType_$type, _this.um, ae)); });
                break;
            case "IndicatorPeriod":
                this.z6(function (ad, ae) {
                    if (_this.xg == -2147483648) {
                        return;
                    }
                    _this.uk.setPeriodOverride(ad, _this.xg);
                });
                break;
            case "IndicatorMultiplier":
                this.z6(function (ad, ae) { return _this.uk.setMultiplier(ad, _this.wp); });
                break;
            case "IndicatorSmoothingPeriod":
                this.z6(function (ad, ae) { return _this.uk.setSmoothingPeriod(ad, _this.xj); });
                break;
            case "IndicatorShortPeriod":
                this.z6(function (ad, ae) { return _this.uk.setShortPeriod(ad, _this.xh); });
                break;
            case "IndicatorLongPeriod":
                this.z6(function (ad, ae) { return _this.uk.setLongPeriod(ad, _this.xf); });
                break;
            case "IndicatorSignalPeriod":
                this.z6(function (ad, ae) { return _this.uk.setSignalPeriod(ad, _this.xi); });
                break;
            case "RangeSelectorOptions":
                var ad = typeCast(FinancialChartRangeSelectorOptionCollection.$, b);
                if (ad != null) {
                    ad.collectionChanged = delegateRemove(ad.collectionChanged, runOn(this, this.aah));
                }
                if (this.ts != null) {
                    var ae = this.ts;
                    ae.collectionChanged = delegateCombine(ae.collectionChanged, runOn(this, this.aah));
                }
                this.aa2();
                break;
            case "CustomIndicatorNames":
                var af = typeCast(ObservableCollection$1.$.specialize(String_$type), b);
                if (af != null) {
                    af.collectionChanged = delegateRemove(af.collectionChanged, runOn(this, this.aad));
                }
                if (this.customIndicatorNames != null) {
                    var ag = this.customIndicatorNames;
                    ag.collectionChanged = delegateCombine(ag.collectionChanged, runOn(this, this.aad));
                }
                this.abc();
                break;
            case "Legend":
                if (this.zoomSliderChart != null) {
                    this.zoomSliderChart.legend = null;
                }
                break;
            case "Brushes":
                this.z8(function (ah, ai) { return ah.oj = _this.n != null ? ArrayExtension.getModulus$1(Brush.$, _this.n, ai) : null; }, true);
                break;
            case "Outlines":
                this.z8(function (ah, ai) { return ah.oo = _this.r != null ? ArrayExtension.getModulus$1(Brush.$, _this.r, ai) : null; }, true);
                break;
            case "XAxisLabelVisibility":
                if (this.st == 0 && this.zoomSliderXAxis != null) {
                    this.q3(this.zoomSliderXAxis, function (ah) { return ah.visibility = 1; });
                }
                this.z2();
                break;
            case "YAxisLabelVisibility":
                if (this.su != 0 || this.zoomSliderAxis == null) {
                    break;
                }
                this.q3(this.zoomSliderAxis, function (ah) { return ah.visibility = 1; });
                break;
            case "ZoomSliderXAxisMajorStroke":
                this.zoomSliderXAxis.jb = this.abn;
                break;
            case "ZoomSliderXAxisMajorStrokeThickness":
                this.zoomSliderXAxis.ef = this.w1;
                break;
            case "FinancialChartLegend":
            case "IsLegendVisible":
                var ah_1 = this.vo && this.legend == null;
                {
                    var ai = function (aj, ak) {
                        if (aj.isUsableInLegend) {
                            aj.legend = ah_1 ? _this.ue : null;
                        }
                    };
                    this.z8(ai, false);
                    this.z7(ai);
                }
                break;
            case "ZoomSliderAxis":
                var aj = typeCast(Axis.$, b);
                if (aj != null && this.zoomSliderChart != null) {
                    this.zoomSliderChart.axes.remove(aj);
                }
                if (this.zoomSliderAxis != null) {
                    if (this.zoomSliderChart != null) {
                        this.zoomSliderChart.axes.add(this.zoomSliderAxis);
                        this.aaz();
                        this.zoomSliderXAxis.itemsSource = this.xAxis.itemsSource;
                    }
                    if (this.cb) {
                        this.q7(this.zoomSliderAxis);
                    }
                    this.q3(this.zoomSliderAxis, function (ak) { return ak.visibility = 1; });
                }
                break;
            case "XAxisMinimumValue":
                this.q9(function (ak) {
                    var al = typeCast(ITimeRangeSelectorAxis_$type, ak);
                    if (al != null) {
                        al.minimumValue = _this.wc;
                    }
                });
                break;
            case "XAxisMaximumValue":
                this.q9(function (ak) {
                    var al = typeCast(ITimeRangeSelectorAxis_$type, ak);
                    if (al != null) {
                        al.maximumValue = _this.wb;
                    }
                });
                break;
        }
    };
    FinancialChart.prototype.get_ai = function () {
        return 1;
    };
    Object.defineProperty(FinancialChart.prototype, "ai", {
        get: function () {
            return this.get_ai();
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "vx", {
        get: function () {
            return this.vh;
        },
        set: function (a) {
            var b = this.vx;
            if (a != b) {
                this.vh = a;
                this.j6("YAxisIsLogarithmic", b, this.vx);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "xl", {
        get: function () {
            return this.xd;
        },
        set: function (a) {
            var b = this.xl;
            if (a != b) {
                this.xd = a;
                this.j6("YAxisLogarithmBase", b, this.xl);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "wx", {
        get: function () {
            return this.wj;
        },
        set: function (a) {
            var b = this.wx;
            if (a != b) {
                this.wj = a;
                this.j6("YAxisInterval", b, this.wx);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "wz", {
        get: function () {
            return this.wl;
        },
        set: function (a) {
            var b = this.wz;
            if (a != b) {
                this.wl = a;
                this.j6("YAxisMinimumValue", b, this.wz);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "wy", {
        get: function () {
            return this.wk;
        },
        set: function (a) {
            var b = this.wy;
            if (a != b) {
                this.wk = a;
                this.j6("YAxisMaximumValue", b, this.wy);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "w0", {
        get: function () {
            return this.wm;
        },
        set: function (a) {
            var b = this.w0;
            if (a != b) {
                this.wm = a;
                this.j6("YAxisMinorInterval", b, this.w0);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "ww", {
        get: function () {
            return this.yAxis.kv;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "wv", {
        get: function () {
            return this.yAxis.ku;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "t1", {
        get: function () {
            return this.tz;
        },
        set: function (a) {
            var b = this.t1;
            if (a != b) {
                this.tz = a;
                this.j6("VolumeType", enumGetBox(FinancialChartVolumeType_$type, b), enumGetBox(FinancialChartVolumeType_$type, this.t1));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "t3", {
        get: function () {
            return this.t2;
        },
        set: function (a) {
            var b = this.t3;
            if (a != b) {
                this.t2 = a;
                this.j6("XAxisMode", enumGetBox(FinancialChartXAxisMode_$type, b), enumGetBox(FinancialChartXAxisMode_$type, this.t3));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "t5", {
        get: function () {
            return this.t4;
        },
        set: function (a) {
            var b = this.t5;
            if (a != b) {
                this.t4 = a;
                this.j6("YAxisMode", enumGetBox(FinancialChartYAxisMode_$type, b), enumGetBox(FinancialChartYAxisMode_$type, this.t5));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "vs", {
        get: function () {
            return this.ve;
        },
        set: function (a) {
            var b = this.vs;
            if (a != b) {
                this.ve = a;
                this.j6("IsToolbarVisible", b, this.vs);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "tw", {
        get: function () {
            return this.tv;
        },
        set: function (a) {
            var b = this.tw;
            if (a != b) {
                this.tv = a;
                this.j6("ChartType", enumGetBox(FinancialChartType_$type, b), enumGetBox(FinancialChartType_$type, this.tw));
            }
        },
        enumerable: false,
        configurable: true
    });
    FinancialChart.prototype.get_ro = function () {
        return _super.prototype.get_ro.call(this);
    };
    FinancialChart.prototype.set_ro = function (a) {
        _super.prototype.set_ro.call(this, a);
    };
    Object.defineProperty(FinancialChart.prototype, "vt", {
        get: function () {
            return this.vf;
        },
        set: function (a) {
            var b = this.vt;
            if (a != b) {
                this.vf = a;
                this.j6("IsWindowSyncedToVisibleRange", b, this.vt);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "ua", {
        get: function () {
            return this.t9;
        },
        set: function (a) {
            var b = this.ua;
            if (a != b) {
                this.t9 = a;
                this.j6("IndicatorTypes", b, this.ua);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "uc", {
        get: function () {
            return this.ub;
        },
        set: function (a) {
            var b = this.uc;
            if (a != b) {
                this.ub = a;
                this.j6("OverlayTypes", b, this.uc);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "indicatorCharts", {
        get: function () {
            return this.v2;
        },
        set: function (a) {
            var b = this.indicatorCharts;
            if (a != b) {
                this.v2 = a;
                this.j6("IndicatorCharts", b, this.indicatorCharts);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "vw", {
        get: function () {
            return this.vg;
        },
        set: function (a) {
            var b = this.vw;
            if (a != b) {
                this.vg = a;
                this.j6("YAxisAbbreviateLargeNumbers", b, this.vw);
            }
        },
        enumerable: false,
        configurable: true
    });
    FinancialChart.prototype.get_ej = function () {
        return _super.prototype.get_ej.call(this);
    };
    FinancialChart.prototype.set_ej = function (a) {
        _super.prototype.set_ej.call(this, a);
    };
    Object.defineProperty(FinancialChart.prototype, "zoomSliderChart", {
        get: function () {
            return this.u8;
        },
        set: function (a) {
            var b = this.zoomSliderChart;
            if (a != b) {
                this.u8 = a;
                this.j6("ZoomSliderChart", b, this.zoomSliderChart);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "zoomSliderAxis", {
        get: function () {
            return this.ut;
        },
        set: function (a) {
            var b = this.zoomSliderAxis;
            if (a != b) {
                this.ut = a;
                this.j6("ZoomSliderAxis", b, this.zoomSliderAxis);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "zoomSliderXAxis", {
        get: function () {
            return this.te;
        },
        set: function (a) {
            var b = this.zoomSliderXAxis;
            if (a != b) {
                this.te = a;
                this.j6("ZoomSliderXAxis", b, this.zoomSliderXAxis);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "t8", {
        get: function () {
            return this.t6;
        },
        set: function (a) {
            var b = this.t8;
            if (a != b) {
                this.t6 = a;
                this.j6("ZoomSliderType", enumGetBox(FinancialChartZoomSliderType_$type, b), enumGetBox(FinancialChartZoomSliderType_$type, this.t8));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "s5", {
        get: function () {
            return this.sx;
        },
        set: function (a) {
            var b = this.s5;
            if (a != b) {
                this.sx = a;
                this.j6("NegativeBrushes", b, this.s5);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "s6", {
        get: function () {
            return this.sy;
        },
        set: function (a) {
            var b = this.s6;
            if (a != b) {
                this.sy = a;
                this.j6("NegativeOutlines", b, this.s6);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "s7", {
        get: function () {
            return this.sz;
        },
        set: function (a) {
            var b = this.s7;
            if (a != b) {
                this.sz = a;
                this.j6("OverlayBrushes", b, this.s7);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "s8", {
        get: function () {
            return this.s0;
        },
        set: function (a) {
            var b = this.s8;
            if (a != b) {
                this.s0 = a;
                this.j6("OverlayOutlines", b, this.s8);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "ta", {
        get: function () {
            return this.s2;
        },
        set: function (a) {
            var b = this.ta;
            if (a != b) {
                this.s2 = a;
                this.j6("VolumeOutlines", b, this.ta);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "s9", {
        get: function () {
            return this.s1;
        },
        set: function (a) {
            var b = this.s9;
            if (a != b) {
                this.s1 = a;
                this.j6("VolumeBrushes", b, this.s9);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "s4", {
        get: function () {
            return this.sw;
        },
        set: function (a) {
            var b = this.s4;
            if (a != b) {
                this.sw = a;
                this.j6("IndicatorNegativeBrushes", b, this.s4);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "s3", {
        get: function () {
            return this.sv;
        },
        set: function (a) {
            var b = this.s3;
            if (a != b) {
                this.sv = a;
                this.j6("IndicatorBrushes", b, this.s3);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "wu", {
        get: function () {
            return this.wi;
        },
        set: function (a) {
            var b = this.wu;
            if (a != b) {
                this.wi = a;
                this.j6("VolumeThickness", b, this.wu);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "ws", {
        get: function () {
            return this.wg;
        },
        set: function (a) {
            var b = this.ws;
            if (a != b) {
                this.wg = a;
                this.j6("OverlayThickness", b, this.ws);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "wr", {
        get: function () {
            return this.wf;
        },
        set: function (a) {
            var b = this.wr;
            if (a != b) {
                this.wf = a;
                this.j6("OverlayMultiplier", b, this.wr);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "wq", {
        get: function () {
            return this.we;
        },
        set: function (a) {
            var b = this.wq;
            if (a != b) {
                this.we = a;
                this.j6("IndicatorThickness", b, this.wq);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "um", {
        get: function () {
            return this.ul;
        },
        set: function (a) {
            var b = this.um;
            if (a != b) {
                this.ul = a;
                this.j6("IndicatorDisplayTypes", b, this.um);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "xg", {
        get: function () {
            return this.w9;
        },
        set: function (a) {
            var b = this.xg;
            if (a != b) {
                this.w9 = a;
                this.j6("IndicatorPeriod", b, this.xg);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "wp", {
        get: function () {
            return this.wd;
        },
        set: function (a) {
            var b = this.wp;
            if (a != b) {
                this.wd = a;
                this.j6("IndicatorMultiplier", b, this.wp);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "xj", {
        get: function () {
            return this.xc;
        },
        set: function (a) {
            var b = this.xj;
            if (a != b) {
                this.xc = a;
                this.j6("IndicatorSmoothingPeriod", b, this.xj);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "xh", {
        get: function () {
            return this.xa;
        },
        set: function (a) {
            var b = this.xh;
            if (a != b) {
                this.xa = a;
                this.j6("IndicatorShortPeriod", b, this.xh);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "xf", {
        get: function () {
            return this.w8;
        },
        set: function (a) {
            var b = this.xf;
            if (a != b) {
                this.w8 = a;
                this.j6("IndicatorLongPeriod", b, this.xf);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "xi", {
        get: function () {
            return this.xb;
        },
        set: function (a) {
            var b = this.xi;
            if (a != b) {
                this.xb = a;
                this.j6("IndicatorSignalPeriod", b, this.xi);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "ts", {
        get: function () {
            return this.tq;
        },
        set: function (a) {
            var b = this.ts;
            if (a != b) {
                this.tq = a;
                this.j6("RangeSelectorOptions", b, this.ts);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "customIndicatorNames", {
        get: function () {
            return this.tm;
        },
        set: function (a) {
            var b = this.tm;
            if (a != b) {
                this.tm = a;
                this.j6("CustomIndicatorNames", b, this.customIndicatorNames);
            }
        },
        enumerable: false,
        configurable: true
    });
    FinancialChart.prototype.get_ct = function () {
        return _super.prototype.get_ct.call(this);
    };
    FinancialChart.prototype.set_ct = function (a) {
        _super.prototype.set_ct.call(this, a);
    };
    Object.defineProperty(FinancialChart.prototype, "abn", {
        get: function () {
            return this.abm;
        },
        set: function (a) {
            var b = this.abn;
            if (a != b) {
                this.abm = a;
                this.j6("ZoomSliderXAxisMajorStroke", b, this.abn);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "w1", {
        get: function () {
            return this.wn;
        },
        set: function (a) {
            var b = this.w1;
            if (a != b) {
                this.wn = a;
                this.j6("ZoomSliderXAxisMajorStrokeThickness", b, this.w1);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "vo", {
        get: function () {
            return this.vd;
        },
        set: function (a) {
            var b = this.vo;
            if (a != b) {
                this.vd = a;
                this.j6("IsLegendVisible", b, this.vo);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "ue", {
        get: function () {
            return this.ud;
        },
        set: function (a) {
            var b = this.ue;
            if (a != b) {
                this.ud = a;
                this.j6("FinancialChartLegend", b, this.ue);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "xAxis", {
        get: function () {
            return this.td;
        },
        set: function (a) {
            var b = this.xAxis;
            if (a != b) {
                this.td = a;
                this.j6("XAxis", b, this.xAxis);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "yAxis", {
        get: function () {
            return this.us;
        },
        set: function (a) {
            var b = this.yAxis;
            if (a != b) {
                this.us = a;
                this.j6("YAxis", b, this.yAxis);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "volumeAxis", {
        get: function () {
            return this.ur;
        },
        set: function (a) {
            var b = this.volumeAxis;
            if (a != b) {
                this.ur = a;
                this.j6("VolumeAxis", b, this.volumeAxis);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "volumeXAxis", {
        get: function () {
            return this.tc;
        },
        set: function (a) {
            var b = this.volumeXAxis;
            if (a != b) {
                this.tc = a;
                this.j6("VolumeXAxis", b, this.volumeXAxis);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "indicatorAxis", {
        get: function () {
            return this.uq;
        },
        set: function (a) {
            var b = this.indicatorAxis;
            if (a != b) {
                this.uq = a;
                this.j6("IndicatorAxis", b, this.indicatorAxis);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "indicatorXAxis", {
        get: function () {
            return this.tb;
        },
        set: function (a) {
            var b = this.indicatorXAxis;
            if (a != b) {
                this.tb = a;
                this.j6("IndicatorXAxis", b, this.indicatorXAxis);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "v4", {
        get: function () {
            return this.v1;
        },
        set: function (a) {
            var b = this.v4;
            if (a != b) {
                this.v1 = a;
                this.j6("IndicatorAxes", b, this.v4);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "v6", {
        get: function () {
            return this.v3;
        },
        set: function (a) {
            var b = this.v6;
            if (a != b) {
                this.v3 = a;
                this.j6("IndicatorXAxes", b, this.v6);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "wc", {
        get: function () {
            return this.wa;
        },
        set: function (a) {
            var b = this.wc;
            if (+a != +b) {
                this.wa = a;
                this.j6("XAxisMinimumValue", b, this.wc);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "wb", {
        get: function () {
            return this.v9;
        },
        set: function (a) {
            var b = this.wb;
            if (+a != +b) {
                this.v9 = a;
                this.j6("XAxisMaximumValue", b, this.wb);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "xAxisBreaks", {
        get: function () {
            return this.v7;
        },
        enumerable: false,
        configurable: true
    });
    FinancialChart.$t = markType(FinancialChart, 'FinancialChart', XYChart.$);
    FinancialChart.xk = 0;
    return FinancialChart;
}(XYChart));
export { FinancialChart };
/**
 * @hidden
 */
var FinancialChartToolbar = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(FinancialChartToolbar, _super);
    function FinancialChartToolbar(a, b) {
        var _this = _super.call(this, "financialChartToolbar", b, "") || this;
        _this.o = null;
        _this.r = null;
        _this.z = null;
        _this.p = null;
        _this.w = null;
        _this.aq = dateMaxValue();
        _this.ap = dateMinValue();
        _this.ao = dateMaxValue();
        _this.an = dateMinValue();
        _this.rangeChanged = null;
        _this.chartTypeChanged = null;
        _this.trendLineTypeChanged = null;
        _this.volumeTypeChanged = null;
        _this.indicatorTypesChanged = null;
        _this.overlayTypesChanged = null;
        _this.x = 0;
        _this.ah = 0;
        _this.ab = 0;
        _this.ad = null;
        _this.af = null;
        _this.t = null;
        _this.ak = false;
        _this.o = a;
        _this.w = new FinancialChartToolbarViewModel();
        _this.s = new FinancialChartRangeSelector(a != null ? a.xw : null);
        _this.aa = new FinancialChartTypePicker(a != null ? a.xt : null);
        _this.q = new FinancialChartIndicatorMenu(1, a != null ? a.xu : null);
        return _this;
    }
    FinancialChartToolbar.prototype.bg = function (a) {
        var b = a.querySelectorAll(".financialChartToolbarArea");
        if (b != null && b.length > 0) {
            this.g = b[0];
            if (!this.al) {
                this.g.hide();
            }
        }
        var c = a.querySelectorAll(".financialChartIndicatorMenu");
        if (c != null && c.length > 0) {
            this.q.g = c[0];
        }
        var d = a.querySelectorAll(".financialChartRangeSelector");
        if (d != null && d.length > 0) {
            this.s.g = d[0];
        }
        var e = a.querySelectorAll(".financialChartTypePicker");
        if (e != null && e.length > 0) {
            this.aa.g = e[0];
        }
    };
    FinancialChartToolbar.prototype.bl = function (a) {
        this.q.u(a);
        this.aa.u(a);
    };
    Object.defineProperty(FinancialChartToolbar.prototype, "s", {
        get: function () {
            return this.r;
        },
        set: function (a) {
            var b = this.s;
            if (a != b) {
                this.r = a;
                this.bm("RangeSelector", b, this.s);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartToolbar.prototype, "aa", {
        get: function () {
            return this.z;
        },
        set: function (a) {
            var b = this.aa;
            if (a != b) {
                this.z = a;
                this.bm("ChartTypePicker", b, this.aa);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartToolbar.prototype, "q", {
        get: function () {
            return this.p;
        },
        set: function (a) {
            var b = this.q;
            if (a != b) {
                this.p = a;
                this.bm("IndicatorMenu", b, this.q);
            }
        },
        enumerable: false,
        configurable: true
    });
    FinancialChartToolbar.prototype.bm = function (a, b, c) {
        switch (a) {
            case "RangeStart":
                if (this.s != null) {
                    this.s.t = this.as;
                }
                break;
            case "RangeEnd":
                if (this.s != null) {
                    this.s.s = this.ar;
                }
                break;
            case "SelectionStart":
                if (this.s != null) {
                    this.s.v = this.au;
                }
                break;
            case "SelectionEnd":
                if (this.s != null) {
                    this.s.u = this.at;
                }
                break;
            case "RangeSelector":
                var d = b;
                if (d != null) {
                    d.rangeChanged = delegateRemove(d.rangeChanged, runOn(this, this.bj));
                }
                if (this.s != null) {
                    this.s.t = this.as;
                    this.s.s = this.ar;
                    this.s.o = this.u;
                    this.s.v = this.au;
                    this.s.u = this.at;
                    var e = this.s;
                    e.rangeChanged = delegateCombine(e.rangeChanged, runOn(this, this.bj));
                }
                break;
            case "ChartTypePicker":
                var f = b;
                if (f != null) {
                    f.selectionChanged = delegateRemove(f.selectionChanged, runOn(this, this.bi));
                }
                if (this.aa != null) {
                    this.aa.w = this.y;
                    var g = this.aa;
                    g.selectionChanged = delegateCombine(g.selectionChanged, runOn(this, this.bi));
                }
                break;
            case "ChartType":
                if (this.aa != null) {
                    this.aa.w = this.y;
                }
                break;
            case "RangeSelectorOptions":
                if (this.s != null) {
                    this.s.o = this.u;
                }
                break;
            case "IsToolbarVisible":
                if (this.g == null) {
                    break;
                }
                if (this.al) {
                    this.g.show();
                }
                else {
                    this.g.hide();
                }
                break;
            case "IndicatorMenu":
                var h = typeCast(FinancialChartIndicatorMenu.$, b);
                if (h != null) {
                    h.selectionChanged = delegateRemove(h.selectionChanged, runOn(this, this.bh));
                }
                if (this.q != null) {
                    var i = this.q;
                    i.selectionChanged = delegateCombine(i.selectionChanged, runOn(this, this.bh));
                }
                break;
            case "IndicatorTypes":
                if (this.indicatorTypesChanged != null) {
                    this.indicatorTypesChanged(this, EventArgs.empty);
                }
                break;
            case "OverlayTypes":
                if (this.overlayTypesChanged != null) {
                    this.overlayTypesChanged(this, EventArgs.empty);
                }
                break;
            case "TrendLineType":
                if (this.trendLineTypeChanged != null) {
                    this.trendLineTypeChanged(this, EventArgs.empty);
                }
                break;
            case "VolumeType":
                if (this.volumeTypeChanged != null) {
                    this.volumeTypeChanged(this, EventArgs.empty);
                }
                break;
        }
    };
    FinancialChartToolbar.prototype.bh = function (a, b) {
        this.ag = this.q.z;
        this.ae = this.q.y;
        this.ai = this.q.aa;
        this.ac = this.q.x;
    };
    FinancialChartToolbar.prototype.bi = function (a, b) {
        this.y = this.aa.w;
        if (this.chartTypeChanged != null) {
            this.chartTypeChanged(this, b);
        }
    };
    FinancialChartToolbar.prototype.bj = function (a, b) {
        this.au = this.s.v;
        this.at = this.s.u;
        if (this.rangeChanged != null) {
            this.rangeChanged(this, b);
        }
    };
    FinancialChartToolbar.prototype.v = function () {
        var _this = this;
        var a = new FinancialChartToolbarContext();
        a.container = this.d;
        a.vm = this.w;
        a.vm.financialChartIndicatorMenu = ((function () {
            var $ret = new FinancialChartIndicatorMenuContext();
            $ret.vm = _this.q.p;
            return $ret;
        })());
        a.vm.financialChartTypePicker = ((function () {
            var $ret = new FinancialChartTypePickerContext();
            $ret.vm = _this.aa.p;
            return $ret;
        })());
        a.vm.financialChartRangeSelector = ((function () {
            var $ret = new FinancialChartRangeSelectorContext();
            $ret.vm = _this.s.q;
            return $ret;
        })());
        return a;
    };
    FinancialChartToolbar.prototype.l = function (a) {
        _super.prototype.l.call(this, a);
        if (a == null) {
            return;
        }
        this.s.l(a);
        this.aa.l(a);
        this.q.l(a);
        this.bk();
    };
    FinancialChartToolbar.prototype.bk = function () {
    };
    Object.defineProperty(FinancialChartToolbar.prototype, "au", {
        get: function () {
            return this.aq;
        },
        set: function (a) {
            var b = this.au;
            if (+a != +b) {
                this.aq = a;
                this.bm("SelectionStart", b, this.au);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartToolbar.prototype, "at", {
        get: function () {
            return this.ap;
        },
        set: function (a) {
            var b = this.at;
            if (+a != +b) {
                this.ap = a;
                this.bm("SelectionEnd", b, this.at);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartToolbar.prototype, "as", {
        get: function () {
            return this.ao;
        },
        set: function (a) {
            var b = this.as;
            if (+a != +b) {
                this.ao = a;
                this.bm("RangeStart", b, this.as);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartToolbar.prototype, "ar", {
        get: function () {
            return this.an;
        },
        set: function (a) {
            var b = this.ar;
            if (+a != +b) {
                this.an = a;
                this.bm("RangeEnd", b, this.ar);
            }
        },
        enumerable: false,
        configurable: true
    });
    FinancialChartToolbar.prototype.bn = function () {
        if (this.s != null) {
            this.s.ab();
        }
    };
    Object.defineProperty(FinancialChartToolbar.prototype, "y", {
        get: function () {
            return this.x;
        },
        set: function (a) {
            var b = this.y;
            if (a != b) {
                this.x = a;
                this.bm("ChartType", enumGetBox(FinancialChartType_$type, b), enumGetBox(FinancialChartType_$type, this.y));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartToolbar.prototype, "ai", {
        get: function () {
            return this.ah;
        },
        set: function (a) {
            var b = this.ai;
            if (a != b) {
                this.ah = a;
                this.bm("TrendLineType", enumGetBox(TrendLineType_$type, b), enumGetBox(TrendLineType_$type, this.ai));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartToolbar.prototype, "ac", {
        get: function () {
            return this.ab;
        },
        set: function (a) {
            var b = this.ac;
            if (a != b) {
                this.ab = a;
                this.bm("VolumeType", enumGetBox(FinancialChartVolumeType_$type, b), enumGetBox(FinancialChartVolumeType_$type, this.ac));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartToolbar.prototype, "ae", {
        get: function () {
            return this.ad;
        },
        set: function (a) {
            var b = this.ae;
            if (!FinancialChartToolbar.am(b, a)) {
                this.ad = a;
                this.bm("IndicatorTypes", b, this.ae);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartToolbar.prototype, "ag", {
        get: function () {
            return this.af;
        },
        set: function (a) {
            var b = this.ag;
            if (!FinancialChartToolbar.am(b, a)) {
                this.af = a;
                this.bm("OverlayTypes", b, this.ag);
            }
        },
        enumerable: false,
        configurable: true
    });
    FinancialChartToolbar.am = function (a, b) {
        var e_21, _a;
        if (a == b) {
            return true;
        }
        if ((a == null && b != null) || (a != null && b == null)) {
            return false;
        }
        if (a.count != b.count) {
            return false;
        }
        try {
            for (var _b = __values(fromEn(a)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var c = _c.value;
                if (!b.contains(c)) {
                    return false;
                }
            }
        }
        catch (e_21_1) {
            e_21 = { error: e_21_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_21)
                    throw e_21.error;
            }
        }
        return true;
    };
    FinancialChartToolbar.prototype.aj = function () {
        var _this = this;
        return ((function () {
            var $ret = new FinancialChartToolbarVisualData();
            $ret.rangeSelector = _this.s == null ? null : _this.s.r();
            return $ret;
        })());
    };
    Object.defineProperty(FinancialChartToolbar.prototype, "u", {
        get: function () {
            return this.t;
        },
        set: function (a) {
            var b = this.u;
            if (a != b) {
                this.t = a;
                this.bm("RangeSelectorOptions", b, this.u);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartToolbar.prototype, "al", {
        get: function () {
            return this.ak;
        },
        set: function (a) {
            var b = this.al;
            if (a != b) {
                this.ak = a;
                this.bm("IsToolbarVisible", b, this.al);
            }
        },
        enumerable: false,
        configurable: true
    });
    FinancialChartToolbar.$t = markType(FinancialChartToolbar, 'FinancialChartToolbar', TemplatedHtmlControl.$);
    return FinancialChartToolbar;
}(TemplatedHtmlControl));
export { FinancialChartToolbar };
/**
 * @hidden
 */
var FinancialChartRangeSelector = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(FinancialChartRangeSelector, _super);
    function FinancialChartRangeSelector(a) {
        var _this = _super.call(this, "financialChartRangeSelector", a, "") || this;
        _this.q = null;
        _this.rangeChanged = null;
        _this.p = null;
        _this.p = new FinancialChartRangeSelectorView();
        _this.q = new FinancialChartRangeSelectorViewModel();
        _this.q.onRangeChanged = runOn(_this, _this.z);
        _this.p.c = _this.q;
        return _this;
    }
    Object.defineProperty(FinancialChartRangeSelector.prototype, "v", {
        get: function () {
            return this.q.selectionStart;
        },
        set: function (a) {
            this.q.selectionStart = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartRangeSelector.prototype, "u", {
        get: function () {
            return this.q.selectionEnd;
        },
        set: function (a) {
            this.q.selectionEnd = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartRangeSelector.prototype, "t", {
        get: function () {
            return this.q.rangeStart;
        },
        set: function (a) {
            this.q.rangeStart = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartRangeSelector.prototype, "s", {
        get: function () {
            return this.q.rangeEnd;
        },
        set: function (a) {
            this.q.rangeEnd = a;
        },
        enumerable: false,
        configurable: true
    });
    FinancialChartRangeSelector.prototype.ab = function () {
        if (this.q.onPropertiesChanged()) {
            this.p.g(this.q);
        }
    };
    FinancialChartRangeSelector.prototype.l = function (a) {
        _super.prototype.l.call(this, a);
        this.p.f(this.d, this.q);
    };
    FinancialChartRangeSelector.prototype.z = function () {
        if (this.rangeChanged != null) {
            this.rangeChanged(this, EventArgs.empty);
        }
    };
    FinancialChartRangeSelector.prototype.r = function () {
        return this.p.d(this.g);
    };
    Object.defineProperty(FinancialChartRangeSelector.prototype, "o", {
        get: function () {
            return this.q.options;
        },
        set: function (a) {
            var b = !FinancialChartToolbar.am(this.q.options, a);
            if (b) {
                this.q.options = a;
                this.aa();
            }
        },
        enumerable: false,
        configurable: true
    });
    FinancialChartRangeSelector.prototype.aa = function () {
        if (this.q != null) {
            this.q.ao();
        }
        if (this.p != null) {
            this.p.i(this.o);
        }
    };
    FinancialChartRangeSelector.$t = markType(FinancialChartRangeSelector, 'FinancialChartRangeSelector', TemplatedHtmlControl.$);
    FinancialChartRangeSelector.x = 0;
    return FinancialChartRangeSelector;
}(TemplatedHtmlControl));
export { FinancialChartRangeSelector };
//# sourceMappingURL=FinancialChart_combined.js.map
