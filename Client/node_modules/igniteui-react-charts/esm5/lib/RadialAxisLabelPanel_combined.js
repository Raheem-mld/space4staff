/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends, __values } from "tslib";
import { HorizontalAxisLabelPanelBase } from "./HorizontalAxisLabelPanelBase";
import { Number_$type, fromEnum, Boolean_$type, markType } from "igniteui-react-core";
import { Size } from "igniteui-react-core";
import { List$1 } from "igniteui-react-core";
import { Rect } from "igniteui-react-core";
import { HorizontalAxisLabelPanelBaseView } from "./HorizontalAxisLabelPanelBaseView";
import { TransformGroup } from "igniteui-react-core";
import { RotateTransform } from "igniteui-react-core";
import { TranslateTransform } from "igniteui-react-core";
import { ViewportUtils } from "./ViewportUtils";
/**
 * @hidden
 */
var RadialAxisLabelPanel = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(RadialAxisLabelPanel, _super);
    function RadialAxisLabelPanel() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.dq = null;
        _this.dm = 0;
        _this.dl = new List$1(Number_$type, 0);
        return _this;
    }
    RadialAxisLabelPanel.prototype.ad = function () {
        return new RadialAxisLabelPanelView(this);
    };
    RadialAxisLabelPanel.prototype.cc = function (a) {
        _super.prototype.cc.call(this, a);
        this.dj = a;
    };
    Object.defineProperty(RadialAxisLabelPanel.prototype, "dk", {
        get: function () {
            return !this.al;
        },
        enumerable: false,
        configurable: true
    });
    RadialAxisLabelPanel.prototype.c4 = function () {
        return this.an && (!this.ar || this.bh() == -180);
    };
    RadialAxisLabelPanel.prototype.c5 = function () {
        return !this.as;
    };
    RadialAxisLabelPanel.prototype.bx = function (a) {
        _super.prototype.bx.call(this, a);
        if (this.dm % 360 == 0 || this.al) {
            this.dj.a3();
        }
        else {
            this.dj.a2(a);
        }
    };
    RadialAxisLabelPanel.prototype.bh = function () {
        var a = _super.prototype.bh.call(this);
        if (this.dk) {
            a -= (this.dm * 180) / Math.PI;
        }
        return a;
    };
    RadialAxisLabelPanel.prototype.c3 = function () {
        return this.bh() % 360 != 0;
    };
    RadialAxisLabelPanel.prototype.c2 = function () {
        if (this.al) {
            return true;
        }
        var a = this.dm * 180 / Math.PI;
        if (a < 30 || a > 330 || (a > 150 && a < 210)) {
            return true;
        }
        return false;
    };
    RadialAxisLabelPanel.prototype.cg = function (a, b) {
        var c = b * Math.PI / 180;
        var d = Math.abs(Math.sin(c));
        if (this.ac.ay != null && this.ac.ay.c == 4) {
            d = d * -1;
        }
        this.dj.a4(a, b, d);
    };
    RadialAxisLabelPanel.prototype.dp = function () {
        var e_1, _a;
        var a = 1.7976931348623157E+308;
        try {
            for (var _b = __values(fromEnum(this.a6)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var b = _c.value;
                a = Math.min(b.c, a);
            }
        }
        catch (e_1_1) {
            e_1 = { error: e_1_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_1)
                    throw e_1.error;
            }
        }
        return a;
    };
    RadialAxisLabelPanel.prototype.dn = function () {
        var e_2, _a;
        var a = -1.7976931348623157E+308;
        try {
            for (var _b = __values(fromEnum(this.a6)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var b = _c.value;
                a = Math.max(b.c, a);
            }
        }
        catch (e_2_1) {
            e_2 = { error: e_2_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_2)
                    throw e_2.error;
            }
        }
        return a;
    };
    RadialAxisLabelPanel.prototype.dh = function (a, b) {
        var c;
        if (this.ac.cc) {
            c = this.dp();
        }
        else {
            c = this.dn();
        }
        var d = new List$1(Number_$type, 0);
        var e = new List$1(Boolean_$type, 0);
        for (var f = 0; f < this.a6.count; f++) {
            var g = this.a6._inner[f];
            if (g.c == c && !g.a) {
                d.add(this.a6.indexOf(g));
            }
        }
        this.dl = d;
        var h = new List$1(Rect.$, 0);
        for (var i = 0; i < a.count; i++) {
            var j = a._inner[i];
            var k = this.a6._inner[i].a;
            if (!this.dl.contains(i)) {
                h.add(j);
                e.add(k);
            }
        }
        this.an = this.am(h, e);
    };
    RadialAxisLabelPanel.prototype.aq = function (a, b) {
        if (this.dl.contains(a)) {
            return false;
        }
        else {
            return _super.prototype.aq.call(this, a, b);
        }
    };
    RadialAxisLabelPanel.prototype.di = function () {
        this.dl = new List$1(Number_$type, 0);
        _super.prototype.di.call(this);
    };
    RadialAxisLabelPanel.prototype.ah = function () {
        return 5;
    };
    RadialAxisLabelPanel.prototype.au = function (a) {
        return a == 5 || a == 4 || a == 1 || a == 0;
    };
    RadialAxisLabelPanel.prototype.b4 = function () {
    };
    RadialAxisLabelPanel.$t = markType(RadialAxisLabelPanel, 'RadialAxisLabelPanel', HorizontalAxisLabelPanelBase.$);
    return RadialAxisLabelPanel;
}(HorizontalAxisLabelPanelBase));
export { RadialAxisLabelPanel };
/**
 * @hidden
 */
var RadialAxisLabelPanelView = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(RadialAxisLabelPanelView, _super);
    function RadialAxisLabelPanelView(a) {
        var _this = _super.call(this, a) || this;
        _this.a1 = null;
        _this.a1 = a;
        return _this;
    }
    RadialAxisLabelPanelView.prototype.a4 = function (a, b, c) {
        var d = this.m(a);
        var e = this.l(a);
        var f = new TransformGroup();
        f.j.add(((function () {
            var $ret = new RotateTransform();
            $ret.j = b;
            $ret.k = d / 2;
            $ret.l = e / 2;
            return $ret;
        })()));
        f.j.add(((function () {
            var $ret = new TranslateTransform();
            $ret.j = d / -2;
            $ret.k = d / 2 * c;
            return $ret;
        })()));
        a.j = f;
    };
    RadialAxisLabelPanelView.prototype.a3 = function () {
        this.a.j = null;
    };
    RadialAxisLabelPanelView.prototype.a2 = function (a) {
        var _this = this;
        var b = ViewportUtils.f(0.5, this.a.cx, this.a.cw);
        this.a.j = ((function () {
            var $ret = new RotateTransform();
            $ret.j = (_this.a1.dm * 180) / Math.PI;
            $ret.k = _this.a1.dq.x;
            $ret.l = (_this.a1.dq.y * a.height) + b;
            return $ret;
        })());
    };
    RadialAxisLabelPanelView.prototype.al = function () {
        _super.prototype.al.call(this);
        this.a.cy(new Size(1, this.a.cu.width, this.a.cu.height));
    };
    RadialAxisLabelPanelView.$t = markType(RadialAxisLabelPanelView, 'RadialAxisLabelPanelView', HorizontalAxisLabelPanelBaseView.$);
    return RadialAxisLabelPanelView;
}(HorizontalAxisLabelPanelBaseView));
export { RadialAxisLabelPanelView };
//# sourceMappingURL=RadialAxisLabelPanel_combined.js.map
