/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { RadialBucketCalculator } from "./RadialBucketCalculator";
import { markType, Point_$type, enumGetBox, typeCast, runOn, markDep } from "igniteui-react-core";
import { isNaN_, intDivide, isInfinity } from "igniteui-react-core";
import { RadialBase } from "./RadialBase";
import { CategoryLineRasterizer } from "./CategoryLineRasterizer";
import { DependencyProperty } from "igniteui-react-core";
import { TrendLineType_$type } from "igniteui-react-core";
import { Brush } from "igniteui-react-core";
import { PenLineCap_$type } from "igniteui-react-core";
import { DoubleCollection } from "igniteui-react-core";
import { RadialFrame } from "./RadialFrame";
import { ScalerParams } from "./ScalerParams";
import { Rect } from "igniteui-react-core";
import { AxisRange } from "./AxisRange";
import { NumericAxisBase } from "./NumericAxisBase";
import { IFastItemsSource_$type } from "igniteui-react-core";
import { RadialBaseView } from "./RadialBaseView";
import { CollisionAvoider } from "./CollisionAvoider";
import { Clipper } from "igniteui-react-core";
import { TrendResolutionParams } from "./TrendResolutionParams";
import { RadialTrendLineManager } from "./RadialTrendLineManager";
import { CategoryMarkerManager } from "./CategoryMarkerManager";
import { PropertyMetadata } from "igniteui-react-core";
import { stringIsNullOrEmpty } from "igniteui-react-core";
/**
 * @hidden
 */
var AnchoredRadialBucketCalculator = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(AnchoredRadialBucketCalculator, _super);
    function AnchoredRadialBucketCalculator(a) {
        var _this = _super.call(this, a) || this;
        _this.f = null;
        _this.f = a;
        return _this;
    }
    AnchoredRadialBucketCalculator.prototype.getBucket = function (a) {
        var b = this.f.cw.si;
        var c = Math.min(a * this.b, b.count - 1);
        var d = Math.min(c + this.b - 1, b.count - 1);
        var e = NaN;
        var f = NaN;
        for (var g = c; g <= d; ++g) {
            var h = b.item(g);
            if (!isNaN_(e)) {
                if (!isNaN_(h)) {
                    e = Math.min(e, h);
                    f = Math.max(f, h);
                }
            }
            else {
                e = h;
                f = h;
            }
        }
        if (!isNaN_(e)) {
            return [0.5 * (c + d), e, f];
        }
        return [0.5 * (c + d), NaN, NaN];
    };
    AnchoredRadialBucketCalculator.$t = markType(AnchoredRadialBucketCalculator, 'AnchoredRadialBucketCalculator', RadialBucketCalculator.$);
    return AnchoredRadialBucketCalculator;
}(RadialBucketCalculator));
export { AnchoredRadialBucketCalculator };
/**
 * @hidden
 */
var AnchoredRadialSeries = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(AnchoredRadialSeries, _super);
    function AnchoredRadialSeries() {
        var _this = _super.call(this) || this;
        _this.sd = null;
        _this.sh = null;
        _this.te = { $type: Point_$type, x: 0, y: 0 };
        _this.sf = null;
        _this.se = null;
        _this.sf = new RadialFrame(3);
        _this.sd = new CategoryLineRasterizer();
        return _this;
    }
    AnchoredRadialSeries.prototype.bu = function () {
        return new AnchoredRadialSeriesView(this);
    };
    AnchoredRadialSeries.prototype.ke = function () {
        _super.prototype.ke.call(this);
        this.qz = null;
        this.q6 = null;
    };
    AnchoredRadialSeries.prototype.hk = function (a, b) {
        var c = this.ja(b);
        if (c == AnchoredRadialSeries.$$p[0]) {
            return this.hl(a, b, this.su);
        }
        return _super.prototype.hk.call(this, a, b);
    };
    AnchoredRadialSeries.prototype.lh = function (a) {
        _super.prototype.lh.call(this, a);
        this.sc = a;
    };
    AnchoredRadialSeries.prototype.g6 = function (a, b) {
        return this.g7(a, b, this.qz, null, this.si);
    };
    AnchoredRadialSeries.prototype.g4 = function (a, b) {
        return this.g5(a, b, this.qz, null, this.si);
    };
    AnchoredRadialSeries.prototype.fu = function (a, b, c, d, e) {
        if (this.si == null) {
            return Number.POSITIVE_INFINITY;
        }
        return this.fv(a, b, this.qz, d, e, this.si.count, null);
    };
    AnchoredRadialSeries.prototype.f8 = function (a, b, c) {
        var d = this.getEffectiveViewport1(this.bx);
        var e = this.sn(this.qz, this.bx.bv, this.bx.bu, d);
        var f = new ScalerParams(0, this.bx.bv, this.bx.bu, this.qz.cc, d);
        f.c = this.ca.pv;
        return this.ga(this.si, a, this.qz, f, e, null, b, c);
    };
    AnchoredRadialSeries.prototype.o2 = function (a, b, c) {
        if (this.q6 == null || this.qz == null || this.bx == null || this.bx.bv.isEmpty || this.bx.bu.isEmpty) {
            return { $type: Point_$type, x: NaN, y: NaN };
        }
        var d = this.getEffectiveViewport1(this.bx);
        var e = new ScalerParams(0, this.bx.bv, this.bx.bu, this.q6.cc, d);
        e.c = this.getEffectiveViewport1(this.bx);
        var f = this.f8(a, b, c);
        f = this.q6.d8(f, e);
        var g = this.q7.c(a);
        if (!b && this.qz != null) {
            var h = this.g6(a, c);
            var i = this.g4(a, c);
            var j = this.sn(this.qz, this.bx.bv, this.bx.bu, d);
            var k = new ScalerParams(0, this.bx.bv, this.bx.bu, this.qz.cc, d);
            k.c = this.ca.pv;
            var l = this.fu(a, h, this.qz, k, j);
            var m = this.fu(a, i, this.qz, k, j);
            if (m <= l) {
                g = this.qz.d8(i, k) + j;
            }
            else {
                g = this.qz.d8(h, k) + j;
            }
        }
        var n = this.q7.d(g, f, this.bx.bv, this.bx.bu);
        var o = this.q7.e(g, f, this.bx.bv, this.bx.bu);
        return { $type: Point_$type, x: n, y: o };
    };
    Object.defineProperty(AnchoredRadialSeries.prototype, "si", {
        get: function () {
            return this.sh;
        },
        set: function (a) {
            if (this.sh != a) {
                var b = this.sh;
                this.sh = a;
                this.raisePropertyChanged("ValueColumn", b, this.sh);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AnchoredRadialSeries.prototype, "ta", {
        get: function () {
            return this.c(AnchoredRadialSeries.s1);
        },
        set: function (a) {
            this.h(AnchoredRadialSeries.s1, a);
        },
        enumerable: false,
        configurable: true
    });
    AnchoredRadialSeries.prototype.ap = function (a) {
        if (a != null && a == this.qz && this.si != null && this.si.count > 0) {
            return new AxisRange(0, this.si.count - 1);
        }
        if (a != null && a == this.q6 && this.si != null && this.si.count > 0) {
            return new AxisRange(this.si.minimum, this.si.maximum);
        }
        return null;
    };
    AnchoredRadialSeries.prototype.lm = function (a, b, c, d) {
        _super.prototype.lm.call(this, a, b, c, d);
        if (this.sc.cx.g$b(a, b, c, d)) {
            this.l0(false);
            this.k7();
        }
        var e = typeCast(NumericAxisBase.$, this.q6);
        switch (b) {
            case "FastItemsSource":
                if (typeCast(IFastItemsSource_$type, c) !== null) {
                    c.deregisterColumn(this.si);
                    this.si = null;
                }
                if (typeCast(IFastItemsSource_$type, d) !== null) {
                    this.si = this.ce(this.su);
                    this.sc.cs.e(this.gh);
                }
                if (e != null && !e.cv()) {
                    this.sc.cs.e(this.gh);
                    this.l0(false);
                }
                break;
            case AnchoredRadialSeries.$$p[0]:
                if (this.ch != null) {
                    this.ch.deregisterColumn(this.si);
                    this.si = this.ce(this.su);
                }
                break;
            case "ValueColumn":
                if (e != null && !e.cv()) {
                    this.sc.cs.e(this.gh);
                    this.l0(false);
                }
                break;
            case "TrendLineBrush":
                this.md();
                break;
            case "TrendLineType":
                this.k7();
                break;
        }
    };
    AnchoredRadialSeries.prototype.kk = function (a, b, c, d) {
        switch (a) {
            case 4:
            case 1:
            case 0:
                this.sc.cs.e(this.gh);
                break;
        }
        this.sc.cx.g$e(a, b, c, d);
        switch (a) {
            case 4:
                if (this.q6 != null && !this.q6.cv()) {
                    this.l0(true);
                }
                break;
            case 1:
                if (this.q6 != null && !this.q6.cv()) {
                    this.l0(true);
                }
                break;
            case 0:
                if (this.q6 != null && !this.q6.cv()) {
                    this.l0(true);
                }
                break;
            case 2:
                if (this.su != null && this.sc.cs.b > 0 && this.q6 != null && !this.q6.cv()) {
                    this.l0(true);
                }
                break;
            case 3:
                if (d == this.su) {
                    if (this.q6 != null && !this.q6.cv()) {
                        this.l0(true);
                    }
                }
                break;
        }
    };
    AnchoredRadialSeries.prototype.e3 = function (a, b, c) {
        var d = _super.prototype.e3.call(this, a, b, c);
        var e = c;
        if (this.ch == null || this.ch.count == 0 || this.qz == null || this.si == null || this.qz.kq == 0 || this.q6 == null || isInfinity(this.q6.kv) || isInfinity(this.q6.ku) || e.cs.b < 1) {
            d = false;
        }
        return d;
    };
    AnchoredRadialSeries.prototype.getOffsetValue = function () {
        return this.sn(this.qz, this.bx.bv, this.bx.bu, this.getEffectiveViewport1(this.bx));
    };
    AnchoredRadialSeries.prototype.getCategoryWidth = function () {
        return this.qz.getCategorySize(this.bx.bv, this.bx.bu, this.getEffectiveViewport1(this.bx));
    };
    AnchoredRadialSeries.prototype.get_sl = function () {
        return false;
    };
    Object.defineProperty(AnchoredRadialSeries.prototype, "sl", {
        get: function () {
            return this.get_sl();
        },
        enumerable: false,
        configurable: true
    });
    AnchoredRadialSeries.prototype.sn = function (a, b, c, d) {
        var e = 0;
        var f = this.preferredCategoryMode(a);
        if (f == 0 && a.categoryMode != 0) {
            f = 1;
        }
        switch (f) {
            case 0:
                e = 0;
                break;
            case 1:
                e = 0.5 * a.getCategorySize(b, c, d);
                break;
            case 2:
                e = a.getGroupCenter(this.rt(), b, c, d);
                break;
        }
        if (a.cc) {
            e = -e;
        }
        return e;
    };
    AnchoredRadialSeries.prototype.r1 = function (a, b) {
        var _this = this;
        var c = b.bv;
        var d = b.bu;
        var e = this.getEffectiveViewport1(b);
        var f = this.qz;
        var g = this.q6;
        var h = g.kv;
        var i = g.ku;
        a.f.clear();
        a.m.clear();
        a.p.clear();
        var j = this.pt();
        var k = 0;
        var l = b;
        var m = new CollisionAvoider();
        var n = 0;
        var o = b.cs.d;
        n = this.sn(f, c, d, e);
        l.cx.i = this.q6.ma;
        l.cx.h = this.q6.l9;
        l.cx.j = function (p, q) { return _this.so(p, q, c, d); };
        l.cx.k = function (p, q) { return _this.sp(p, q, c, d); };
        var p = ((function () {
            var $ret = new Clipper(0, d, false);
            $ret.i = a.p;
            return $ret;
        })());
        var q = ((function () {
            var $ret = new TrendResolutionParams();
            $ret.c = b.cs.b;
            $ret.d = b.cs.c;
            $ret.e = o;
            $ret.a = n;
            $ret.b = _this.gh;
            $ret.f = d;
            $ret.g = c;
            return $ret;
        })());
        l.cx.l(a.p, this.sg, this.si, this.sr, function (r) { return _this.qz.getScaledAngle(r); }, function (r) { return _this.q6.mg(r); }, q, p);
        var r = true;
        if (this.sm(b)) {
            o--;
        }
        for (var s = b.cs.c; s <= o; ++s) {
            var t = s;
            if (t * b.cs.b >= this.qz.kq) {
                t -= intDivide((this.qz.kq), b.cs.b);
            }
            var u = b.cs.getBucket(t);
            if (!isNaN_(u[0])) {
                u[0] = f.getScaledAngle(u[0]) + n;
                if (u[1] < h || u[1] > i) {
                    continue;
                }
                u[1] = g.mg(u[1]);
                if (b.cs.b > 1) {
                    if (u[2] < h || u[2] > i) {
                        continue;
                    }
                    u[2] = g.mg(u[2]);
                }
                else {
                    u[2] = u[1];
                }
                if ((isNaN_(u[1]) || isNaN_(u[2])) && r && this.sl && this.sk()) {
                    o++;
                }
                else {
                    r = false;
                }
                a.f.add(u);
                if (j) {
                    var v = Math.min(t * b.cs.b, this.ch.count - 1);
                    var w = this.q7.d(u[0], u[1], c, d);
                    var x = this.q7.e(u[0], u[1], c, d);
                    var y = new Rect(0, w - 5, x - 5, 11, 11);
                    if (!isNaN_(w) && !isNaN_(x) && !isInfinity(w) && !isInfinity(x) && m.tryAdd(y)) {
                        a.m.add({ $type: Point_$type, x: w, y: x });
                        var z = b.ct.item(k);
                        z.al = t;
                        z.ak = v;
                        z.content.item = this.ch.item(v);
                        ++k;
                    }
                }
            }
            else {
                if (r && this.sl && this.sk()) {
                    o++;
                }
            }
        }
        b.ct.count = k;
        return;
    };
    AnchoredRadialSeries.prototype.so = function (a, b, c, d) {
        return this.q7.d(a, b, c, d);
    };
    AnchoredRadialSeries.prototype.sp = function (a, b, c, d) {
        return this.q7.e(a, b, c, d);
    };
    AnchoredRadialSeries.prototype.sm = function (a) {
        var b = a;
        return !this.sl && b.cs.c == 0 && b.cs.d == this.qz.kq;
    };
    AnchoredRadialSeries.prototype.sb = function (a, b, c) {
        var d = null;
        var e = c.bv;
        var f = c.bu;
        if (b > -1 && !e.isEmpty && !f.isEmpty) {
            var g = a._inner[0][0] < f.left - 2000 ? f.left - 10 : NaN;
            var h = f.bottom + 10;
            var i = a._inner[b][0] > f.right + 2000 ? f.right + 10 : NaN;
            var j = f.top - 10;
            d = new Clipper(1, g, h, i, j, false);
        }
        return d;
    };
    AnchoredRadialSeries.prototype.s0 = function (a, b, c, d, e) {
        if (a.count > 0 && d.count > 0) {
            if (!e || this.sj()) {
                a.add(this.te);
                a.add(a._inner[0]);
                d.add(this.te);
                d.add(d._inner[0]);
            }
        }
    };
    AnchoredRadialSeries.prototype.sk = function () {
        return !this.sj();
    };
    AnchoredRadialSeries.prototype.sj = function () {
        var a = this.bx.bv;
        return !a.containsPoint({ $type: Point_$type, x: 0.5, y: 0.5 });
    };
    AnchoredRadialSeries.prototype.kh = function (a, b) {
        _super.prototype.kh.call(this, a, b);
        var c = b;
        if (a) {
            c.ct.clear();
        }
        c.cx.g$d();
    };
    AnchoredRadialSeries.prototype.r4 = function (a, b) {
        var c = b.bv;
        var d = b.bu;
        var e = this.getEffectiveViewport1(b);
        var f = this.o7(b);
        var g = b;
        g.cx.g$g(a.p);
        CategoryMarkerManager.e(this, a.m, g.ct, this.pv);
        this.sx(b, a);
        g.cm();
        this.sw(d, c, e, f, g);
    };
    AnchoredRadialSeries.prototype.sa = function (a, b, c) {
        if (b < a || a < 0 || a > this.si.count || b < 0 || b > this.si.count || c == null) {
            return null;
        }
        var d = new Array((b - a) + 1);
        var e = c.ch;
        var f = null;
        if (e) {
            f = c.i$b;
        }
        for (var g = a; g <= b; g++) {
            var h = g;
            if (e) {
                h = f._inner[h];
            }
            d[g - a] = this.ch.item(g);
        }
        return d;
    };
    AnchoredRadialSeries.prototype.sy = function (a, b, c, d, e, f) {
        var g = this.bj != 1;
        this.rd.a1(this.rd.d, d.ch, a, b, c, d, e, f, true);
        this.rd.aa(this.fj);
        var h = this.rd.av;
        var i = null;
        var j = this.ch;
        var k = null;
        if (g && this.ca != null) {
            i = this.ca.a3.getHighlightingInfo(this, j, h.o, h.n, true);
            if (this.ca.a3.isCrossSeriesHighlight(this)) {
                k = this.ca.a3.getHighlightingInfo(this, j, h.o, h.n, true);
            }
            h.b = i;
        }
        h.f = f;
        this.r2(h);
        this.rd.y(this, i, f, g, h.m, this.ca.a3.totalHighlightingProgress);
    };
    AnchoredRadialSeries.prototype.sz = function (a, b, c, d, e, f) {
        var g = this.bj != 1;
        this.rd.a1(this.rd.b, d.ch, a, b, c, d, e, f, false);
        this.rd.ab(this.fj);
        var h = this.rd.aw;
        var i = null;
        var j = this.ch;
        if (g && this.ca != null) {
            i = this.ca.a3.getHighlightingInfo(this, j, h.o, h.n, false);
            h.b = i;
        }
        h.f = f;
        this.r3(h);
        this.rd.z(this, i, f, g, b < 0);
    };
    AnchoredRadialSeries.prototype.sx = function (a, b) {
        a.b3 = true;
        this.rd.az(this, this.ro(), runOn(this, this.qw), this.rr(a), this.rs(a));
        var c = this.rd.d;
        var d = c != null;
        var e = this.qz;
        if (e == null) {
            return;
        }
        var f = this.getEffectiveViewport1(a);
        var g = new ScalerParams(0, a.bv, a.bu, e.cc, f);
        var h = this.ch == null ? 0 : this.ch.count;
        var i = a;
        var j = b.f;
        var k = i.cs.c;
        var l = i.cs.d;
        var m = i.cs.b;
        var n = k * m;
        for (var o = 0; o < a.ct.count; o++) {
            var p = a.ct.item(o);
            var q = p.content;
            if (d) {
                var r = p.al;
                this.sy(j, r, h, e, g, a.q);
            }
            this.rd.ac(p, q);
        }
    };
    AnchoredRadialSeries.prototype.sw = function (a, b, c, d, e) {
        e.cy(a, b, c, d);
    };
    AnchoredRadialSeries.prototype.md = function () {
        _super.prototype.md.call(this);
        if (this.g9 < 0) {
            return;
        }
        this.sc.cz();
    };
    AnchoredRadialSeries.prototype.hn = function (a, b) {
        if (a == this.sc.cx.g$j) {
            return null;
        }
        return _super.prototype.hn.call(this, a, b);
    };
    AnchoredRadialSeries.prototype.eh = function (a) {
        var b = this.bx.bv;
        b = b.copy();
        var c = this.bx.bu;
        var d = !b.isEmpty && !c.isEmpty && this.ch != null ? this.ch.indexOf(a) : -1;
        if (this.qz == null || this.si == null || this.q6 == null) {
            return false;
        }
        if (d < 0 || d > this.si.count - 1) {
            return false;
        }
        var e = this.qz.getScaledAngle(d);
        var f = this.q6.mg(this.si.item(d));
        if (isNaN_(f)) {
            f = (this.q6.l9 + this.q6.ma) / 2;
        }
        var g = 0.5 + (Math.cos(e) * f);
        var h = 0.5 + (Math.sin(e) * f);
        if (!isNaN_(g)) {
            if (g < b.left + 0.1 * b.width) {
                g = g + 0.4 * b.width;
                b.x = g - 0.5 * b.width;
            }
            if (g > b.right - 0.1 * b.width) {
                g = g - 0.4 * b.width;
                b.x = g - 0.5 * b.width;
            }
        }
        if (!isNaN_(h)) {
            if (h < b.top + 0.1 * b.height) {
                h = h + 0.4 * b.height;
                b.y = h - 0.5 * b.height;
            }
            if (h > b.bottom - 0.1 * b.height) {
                h = h - 0.4 * b.height;
                b.y = h - 0.5 * b.height;
            }
        }
        if (this.b5 != null) {
            this.b5.ap(this.ca, b, true);
        }
        return d >= 0;
    };
    AnchoredRadialSeries.prototype.l2 = function (a, b) {
        _super.prototype.l2.call(this, a, b);
        if (!this.et) {
            this.bx.a2(b);
            return;
        }
        this.bx.a2(b);
        var c = typeCast(AnchoredRadialSeriesView.$, this.bw);
        c.cs.e(this.gh);
        if (this.ct(this.bw)) {
            return;
        }
        if (!this.en) {
            this.sf = new RadialFrame(3);
            this.r1(this.sf, c);
        }
        this.en = false;
        this.r4(this.sf, c);
        this.et = false;
    };
    AnchoredRadialSeries.prototype.lz = function (a, b, c, d, e) {
        _super.prototype.lz.call(this, a, b, c, d, e);
        var f = this.a4.a$h.item(d);
        var g = f;
        g.cs.e(this.gh);
        f.a1(c);
        if (this.ct(g)) {
            return;
        }
        if (this.se == null) {
            this.se = new RadialFrame(3);
        }
        this.se.u();
        this.r1(this.se, g);
        this.r4(this.se, g);
    };
    AnchoredRadialSeries.prototype.kr = function (a) {
        _super.prototype.kr.call(this, a);
        this.a6.exportTrendlineData(this, a, this.sc.cx.g$j);
    };
    AnchoredRadialSeries.$t = markType(AnchoredRadialSeries, 'AnchoredRadialSeries', RadialBase.$);
    AnchoredRadialSeries.s1 = DependencyProperty.i("ActualTrendLineBrush", Brush.$, AnchoredRadialSeries.$, new PropertyMetadata(2, null, function (a, b) { return a.raisePropertyChanged("ActualTrendLineBrush", b.oldValue, b.newValue); }));
    AnchoredRadialSeries.$$p = markDep(DependencyProperty, PropertyMetadata, AnchoredRadialSeries, 'raisePropertyChanged', ['ValueMemberPath:su:s9', [2, null], 'TrendLineType:sg:s7', [TrendLineType_$type, enumGetBox(TrendLineType_$type, 0)], 'TrendLineThickness:sq:s6', [1, 1.5], 'TrendLinePeriod:sr:s5', [1, 7], 'TrendLineZIndex:ss:s8', [1, 1], 'TrendLineBrush:tb:s2', [Brush.$, null], 'TrendLineDashArray:tc:s3', [DoubleCollection.$], 'TrendLineDashCap:td:s4', [PenLineCap_$type, enumGetBox(PenLineCap_$type, 0)]]);
    return AnchoredRadialSeries;
}(RadialBase));
export { AnchoredRadialSeries };
/**
 * @hidden
 */
var AnchoredRadialSeriesView = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(AnchoredRadialSeriesView, _super);
    function AnchoredRadialSeriesView(a) {
        var _this = _super.call(this, a) || this;
        _this.cw = null;
        _this.cx = null;
        _this.cs = new AnchoredRadialBucketCalculator(_this);
        _this.cw = a;
        _this.cx = new RadialTrendLineManager();
        return _this;
    }
    AnchoredRadialSeriesView.prototype.cy = function (a, b, c, d) {
    };
    AnchoredRadialSeriesView.prototype.cz = function () {
        this.cw.ta = null;
        if (this.cw.tb != null) {
            this.cw.ta = this.cw.tb;
        }
        else {
            this.cw.ta = this.cw.of;
        }
    };
    AnchoredRadialSeriesView.prototype.a5 = function (a, b) {
        if (a.d) {
            if (!b) {
            }
            if (this.cw.sg != 0 && !b) {
                var c = this.cx.g$j;
                c.ac = this.cw.sq;
                c._stroke = this.cw.ta;
                c.ai = this.cw.tc;
                c.ad = this.cw.td;
                a.u(c);
            }
        }
        _super.prototype.a5.call(this, a, b);
    };
    AnchoredRadialSeriesView.prototype.getDefaultTooltipTemplate = function () {
        var a = "<div class='ui-chart-default-tooltip-content'>";
        if (this.cw.qz.fj != null) {
            a += "<span>${item." + this.cw.qz.fj + "}</span><br/>";
        }
        a += "<span";
        var b = this.e.a4.a$r(this.e);
        if (!stringIsNullOrEmpty(b)) {
            a += " style='color:" + b + "'";
        }
        a += ">" + this.cw.hp + ": </span><span class='ui-priority-primary'>" + "${item." + this.cw.su + "}</span></div>";
        return a;
    };
    AnchoredRadialSeriesView.$t = markType(AnchoredRadialSeriesView, 'AnchoredRadialSeriesView', RadialBaseView.$);
    return AnchoredRadialSeriesView;
}(RadialBaseView));
export { AnchoredRadialSeriesView };
//# sourceMappingURL=AnchoredRadialBucketCalculator_combined.js.map
