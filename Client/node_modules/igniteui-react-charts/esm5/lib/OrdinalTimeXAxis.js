/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { FastItemDateTimeColumn } from "igniteui-react-core";
import { CategoryXAxis } from "./CategoryXAxis";
import { ITimeRangeSelectorAxis_$type } from "./ITimeRangeSelectorAxis";
import { TimeAxisLabellingMode_$type } from "./TimeAxisLabellingMode";
import { TimeAxisLabelFormatCollection } from "./TimeAxisLabelFormatCollection";
import { Rect } from "igniteui-react-core";
import { ScalerParams } from "./ScalerParams";
import { NumericScaler } from "./NumericScaler";
import { EventArgs, runOn, delegateCombine, typeCast, enumGetBox, Date_$type, markType } from "igniteui-react-core";
import { IFastItemsSource_$type } from "igniteui-react-core";
import { TimeAxisBase } from "./TimeAxisBase";
import { TimeXAxis } from "./TimeXAxis";
import { AxisRangeChangedEventArgs } from "./AxisRangeChangedEventArgs";
import { truncate } from "igniteui-react-core";
import { dateMaxValue, dateMinValue, dateAdd, dateSubtract } from "igniteui-react-core";
import { timeSpanFromMilliseconds, timeSpanTotalMilliseconds } from "igniteui-react-core";
/**
 * @hidden
 */
var OrdinalTimeXAxis = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(OrdinalTimeXAxis, _super);
    function OrdinalTimeXAxis() {
        var _this = _super.call(this) || this;
        _this.mk = dateMaxValue();
        _this.mj = dateMinValue();
        _this.mq = dateMaxValue();
        _this.mp = dateMinValue();
        _this.mm = dateMaxValue();
        _this.ml = dateMinValue();
        _this.m0 = null;
        _this.mz = null;
        _this.mf = 0;
        _this.mh = null;
        _this.md = null;
        _this.m9 = 0;
        _this.mo = dateMinValue();
        _this.mn = dateMaxValue();
        _this.visibleRangeChanged = null;
        FastItemDateTimeColumn.o();
        _this.md = new TimeAxisLabelFormatCollection();
        var a = _this.me;
        a.collectionChanged = delegateCombine(a.collectionChanged, runOn(_this, _this.nb));
        _this.l3 = 0;
        return _this;
    }
    OrdinalTimeXAxis.prototype.ea = function (a, b, c) {
        return this.d8(a, new ScalerParams(0, b, c, this.cc, this.jn()));
    };
    OrdinalTimeXAxis.prototype.d9 = function (a, b, c) {
        return this.d8(a, b);
    };
    OrdinalTimeXAxis.prototype.d8 = function (a, b) {
        if (!b.c.isEmpty) {
            var c = this.mx(a, NumericScaler.ac, b.c);
            c = (c - b.d.left) / b.d.width;
            c = b.d.left + b.d.width * (c - b.e.left) / b.e.width;
            return c;
        }
        return this.mx(a, b.e, b.d);
    };
    OrdinalTimeXAxis.prototype.mx = function (a, b, c) {
        var d = this.l2;
        var e = this.l3;
        var f = this.l2 - this.l3;
        var g = f >= 1 ? (a - e) / (d - e) : f == 0 ? 0.5 : NaN;
        if (this.cd) {
            g = 1 - g;
        }
        return c.left + c.width * (g - b.left) / b.width;
    };
    OrdinalTimeXAxis.prototype.g4 = function (a, b, c, d, e) {
        var f;
        var g = e.e;
        var h = e.d;
        var i = e.c;
        var j = e.a;
        var k = !i.isEmpty;
        var l = i.left;
        var m = i.width;
        var n = g.left;
        var o = g.width;
        var p = h.left;
        var q = h.width;
        var r = 0;
        var s = 1;
        var t = this.l2;
        var u = this.l3;
        var v = this.l2 - this.l3;
        var w = this.ln(a);
        var x = w != null;
        for (var y = 0; y < b.count; y++) {
            var z = b.item(y);
            for (var aa = c; aa < d; aa++) {
                f = x ? w[aa] : a.item(aa);
                if (k) {
                    var ab = v >= 1 ? (f[z] - u) / (t - u) : v == 0 ? 0.5 : NaN;
                    if (j) {
                        ab = 1 - ab;
                    }
                    ab = l + m * (ab - r) / s;
                    var ac = (ab - p) / q;
                    ac = p + q * (ac - n) / o;
                    f[z] = ac;
                }
                else {
                    var ad = v >= 1 ? (f[z] - u) / (t - u) : v == 0 ? 0.5 : NaN;
                    if (j) {
                        ad = 1 - ad;
                    }
                    ad = p + q * (ad - n) / o;
                    f[z] = ad;
                }
            }
        }
    };
    OrdinalTimeXAxis.prototype.g5 = function (a, b, c, d) {
        for (var e = b; e < c; e++) {
            a.item(e, this.d8(a.item(e), d));
        }
    };
    OrdinalTimeXAxis.prototype.ed = function (a, b, c) {
        return this.eb(a, new ScalerParams(0, b, this.js, this.cc, this.jn()));
    };
    OrdinalTimeXAxis.prototype.getUnscaledValue3 = function (a, b, c, d) {
        return this.eb(a, new ScalerParams(0, b, this.js, this.cc, this.jn()));
    };
    OrdinalTimeXAxis.prototype.eb = function (a, b) {
        if (!b.c.isEmpty) {
            var c = b.e.left + b.e.width * (a - b.d.left) / b.d.width;
            c = (c * b.d.width) + b.d.left;
            c = this.my(c, NumericScaler.ac, b.c);
            return c;
        }
        return this.my(a, b.e, b.d);
    };
    OrdinalTimeXAxis.prototype.my = function (a, b, c) {
        var d = b.left + (a - c.left) * b.width / c.width;
        if (this.cd) {
            d = 1 - d;
        }
        return this.l3 + d * (this.l2 - this.l3);
    };
    OrdinalTimeXAxis.prototype.ec = function (a, b, c) {
        return this.eb(a, b);
    };
    OrdinalTimeXAxis.prototype.g6 = function (a, b, c, d) {
        for (var e = b; e < c; e++) {
            a.item(e, this.eb(a.item(e), d));
        }
    };
    OrdinalTimeXAxis.prototype.he = function (a, b, c, d) {
        _super.prototype.he.call(this, a, b, c, d);
        switch (b) {
            case "FastItemsSource":
                var e = typeCast(IFastItemsSource_$type, c);
                if (e != null) {
                    e.deregisterColumn(this.mi);
                    this.mi = null;
                }
                if (this.j6 != null) {
                    this.mi = TimeAxisBase.lq(this.dateTimeMemberPath, this);
                }
                break;
            case "DateTimeMemberPath":
                if (this.j6 != null) {
                    this.j6.deregisterColumn(this.mi);
                    this.mi = TimeAxisBase.lq(this.dateTimeMemberPath, this);
                }
                break;
            case "DateTimeColumn":
                this.cv();
                this.m9 = this.m8();
                break;
            case "MinimumValue":
            case "MaximumValue":
                this.cv();
                this.hp();
                break;
            case "LabellingMode":
                this.hp();
                break;
        }
    };
    Object.defineProperty(OrdinalTimeXAxis.prototype, "actualMinimumValue", {
        get: function () {
            return this.mk;
        },
        set: function (a) {
            this.mk = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(OrdinalTimeXAxis.prototype, "actualMaximumValue", {
        get: function () {
            return this.mj;
        },
        set: function (a) {
            this.mj = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(OrdinalTimeXAxis.prototype, "visibleMinimum", {
        get: function () {
            return this.mq;
        },
        set: function (a) {
            this.mq = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(OrdinalTimeXAxis.prototype, "visibleMaximum", {
        get: function () {
            return this.mp;
        },
        set: function (a) {
            this.mp = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(OrdinalTimeXAxis.prototype, "mu", {
        get: function () {
            return this.mm;
        },
        set: function (a) {
            this.mm = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(OrdinalTimeXAxis.prototype, "mt", {
        get: function () {
            return this.ml;
        },
        set: function (a) {
            this.ml = a;
        },
        enumerable: false,
        configurable: true
    });
    OrdinalTimeXAxis.prototype.nc = function () {
        if (this.mi == null || this.mi.count == 0 || this.mi.count < this.l3 - 1) {
            this.actualMinimumValue = dateMinValue();
            this.actualMaximumValue = dateMaxValue();
            return;
        }
        var a = Math.max(0, Math.min(this.l3, this.mi.count - 1));
        var b = Math.max(0, Math.min(this.l2, this.mi.count - 1));
        var c = +(this.actualMinimumValue) != +(this.mi.item(a)) || +(this.actualMaximumValue) != +(this.mi.item(b));
        if (c) {
            var d = this.actualMinimumValue;
            var e = this.actualMaximumValue;
            this.actualMinimumValue = this.mi.item(a);
            this.actualMaximumValue = this.mi.item(b);
            this.nd();
        }
    };
    OrdinalTimeXAxis.prototype.nd = function () {
        if (this.mi == null || this.mi.count == 0 || this.bh == null) {
            var a = +(this.visibleMinimum) != +(this.actualMinimumValue) || +(this.visibleMaximum) != +(this.actualMaximumValue);
            this.visibleMinimum = this.actualMinimumValue;
            this.visibleMaximum = this.actualMaximumValue;
            this.mu = this.visibleMinimum;
            this.mt = this.visibleMaximum;
            if (a && this.visibleRangeChanged != null) {
                this.visibleRangeChanged(this, EventArgs.empty);
            }
            return;
        }
        var b = this.jm();
        var c = new ScalerParams(1, this.bh.pw, this.bh.pv, this.cc);
        c.c = this.jn();
        var d = this.eb(b.left, c);
        var e = this.eb(b.right, c);
        var f = truncate(Math.floor(d));
        var g = truncate(Math.ceil(e));
        var h = f >= 0 && f < this.mi.count ? this.mi.item(f) : this.actualMinimumValue;
        var i = g >= 0 && g < this.mi.count ? this.mi.item(g) : this.actualMaximumValue;
        var j = h;
        var k = i;
        if (d > f) {
            var l = f + 1;
            var m = l >= 0 && l < this.mi.count ? this.mi.item(l) : i;
            var n = dateAdd(+h, +(timeSpanFromMilliseconds(timeSpanTotalMilliseconds((+m - +h)) * (d - f))));
            j = n;
        }
        if (e < g) {
            var o = g - 1;
            var p = o >= 0 && o < this.mi.count ? this.mi.item(o) : h;
            var q = dateSubtract(+i, +(timeSpanFromMilliseconds(timeSpanTotalMilliseconds((+i - +p)) * (g - e))));
            k = q;
        }
        this.mu = j;
        this.mt = k;
        var r = +(this.visibleMinimum) != +h || +(this.visibleMaximum) != +i;
        this.visibleMinimum = h;
        this.visibleMaximum = i;
        if (r && this.visibleRangeChanged != null) {
            this.visibleRangeChanged(this, EventArgs.empty);
        }
    };
    OrdinalTimeXAxis.prototype.hr = function (a) {
        var b = TimeXAxis.nt(this.actualMinimumValue, false, this.actualMinimumValue, this.mg, this.m7, this.me, this.e3);
        if (b != this.m0 && this.cy) {
            this.hu();
        }
        this.m0 = b;
        _super.prototype.hr.call(this, a);
    };
    Object.defineProperty(OrdinalTimeXAxis.prototype, "dateTimeMemberPath", {
        get: function () {
            return this.mz;
        },
        set: function (a) {
            var b = this.dateTimeMemberPath;
            if (a != b) {
                this.mz = a;
                this.hk("DateTimeMemberPath", b, this.dateTimeMemberPath);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(OrdinalTimeXAxis.prototype, "mg", {
        get: function () {
            return this.mf;
        },
        set: function (a) {
            var b = this.mg;
            if (a != b) {
                this.mf = a;
                this.hk("LabellingMode", enumGetBox(TimeAxisLabellingMode_$type, b), enumGetBox(TimeAxisLabellingMode_$type, this.mg));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(OrdinalTimeXAxis.prototype, "mi", {
        get: function () {
            return this.mh;
        },
        set: function (a) {
            if (this.mh != a) {
                var b = this.mh;
                this.mh = a;
                this.hk("DateTimeColumn", b, this.mh);
            }
        },
        enumerable: false,
        configurable: true
    });
    OrdinalTimeXAxis.prototype.h4 = function (a, b) {
        _super.prototype.h4.call(this, a, b);
        this.nd();
    };
    OrdinalTimeXAxis.prototype.getWindowRectForSelection = function (a, b) {
        if (this.mi == null) {
            return Rect.empty;
        }
        var c = a > b;
        var d = c ? b : a;
        var e = c ? a : b;
        var f = -1;
        while (++f < this.mi.count && this.mi.item(f) < d) {
        }
        var g = this.mi.count;
        while (--g >= 0 && this.mi.item(g) > e) {
        }
        var h = new ScalerParams(0, new Rect(0, 0, 0, 1, 1), new Rect(0, 0, 0, 1, 1), this.cc, this.bh.pk);
        var i = this.d8(f, h);
        var j = this.d8(g + 1, h);
        return new Rect(0, i, NaN, Math.max(0, j - i), NaN);
    };
    Object.defineProperty(OrdinalTimeXAxis.prototype, "me", {
        get: function () {
            return this.md;
        },
        enumerable: false,
        configurable: true
    });
    OrdinalTimeXAxis.prototype.nb = function (a, b) {
        this.hq(false);
    };
    OrdinalTimeXAxis.prototype.hg = function (a) {
        _super.prototype.hg.call(this, a);
        this.dateTimeMemberPath = a;
    };
    OrdinalTimeXAxis.prototype.fi = function (a) {
        if (this.at != null) {
            return this.at(a);
        }
        if (this.ah != null) {
            return this.ah.i(a);
        }
        if (!(typeCast(Date_$type, a) !== null)) {
            return _super.prototype.fi.call(this, a);
        }
        var b = dateMinValue();
        var c = false;
        if (this.l4 != null) {
            if (typeCast(Date_$type, this.l4) !== null) {
                b = this.l4;
                c = true;
            }
        }
        var d = TimeXAxis.no(a, c, b, this.mg, this.m7, this.me, this.e3);
        return d == null ? _super.prototype.fi.call(this, a) : d;
    };
    OrdinalTimeXAxis.prototype.fw = function (a) {
        var b = 0;
        if (this.categoryMode == 0) {
            b = truncate(Math.round(a));
        }
        else {
            b = truncate(Math.floor(a));
        }
        if (b < 0 || b > this.kr - 1) {
            return _super.prototype.fw.call(this, a);
        }
        var c = this.mi.item(b);
        var d = this.fi(c);
        if (d == null) {
            return null;
        }
        return d.toString();
    };
    Object.defineProperty(OrdinalTimeXAxis.prototype, "na", {
        get: function () {
            return +(this.visibleMaximum) - +(this.visibleMinimum);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(OrdinalTimeXAxis.prototype, "m7", {
        get: function () {
            return +(this.mt) - +(this.mu);
        },
        enumerable: false,
        configurable: true
    });
    OrdinalTimeXAxis.prototype.lp = function () {
        return this.mi;
    };
    OrdinalTimeXAxis.prototype.h3 = function (a, b) {
        _super.prototype.h3.call(this, a, b);
        this.nd();
    };
    OrdinalTimeXAxis.prototype.lw = function (a, b) {
        var c = this.categoryMode == 0 ? 0 : 0.5;
        return _super.prototype.lw.call(this, a + c, b);
    };
    OrdinalTimeXAxis.prototype.lv = function (a, b, c, d) {
        return b;
    };
    OrdinalTimeXAxis.prototype.m8 = function () {
        var _this = this;
        if (this.mi == null || this.mi.count < 2) {
            return (0);
        }
        return TimeXAxis.nz(function (a) { return _this.mi.item(a); }, this.mi.count);
    };
    OrdinalTimeXAxis.prototype.itemLabelFormat = function () {
        return TimeXAxis.nv(this.m9);
    };
    Object.defineProperty(OrdinalTimeXAxis.prototype, "minimumValue", {
        get: function () {
            return this.mo;
        },
        set: function (a) {
            var b = this.minimumValue;
            if (+a != +b) {
                this.mo = a;
                this.he(this, "MinimumValue", b, this.minimumValue);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(OrdinalTimeXAxis.prototype, "maximumValue", {
        get: function () {
            return this.mn;
        },
        set: function (a) {
            var b = this.maximumValue;
            if (+a != +b) {
                this.mn = a;
                this.he(this, "MaximumValue", b, this.maximumValue);
            }
        },
        enumerable: false,
        configurable: true
    });
    OrdinalTimeXAxis.prototype.cx = function () {
        if (+(this.minimumValue) == +(dateMaxValue()) || +(this.maximumValue) == +(dateMinValue())) {
            return _super.prototype.cx.call(this);
        }
        if (this.ck && this.cy) {
            this.bb = this.ba();
        }
        if (this.j6 == null || this.mi == null) {
            return false;
        }
        var a = this.l3;
        if (+(this.minimumValue) != +(dateMinValue())) {
            var b = -1;
            while (b++ <= this.mi.count) {
                if (this.mi.item(b) >= this.minimumValue) {
                    break;
                }
            }
            a = b;
        }
        var c = this.categoryMode == 0 ? this.j6.count - 1 : this.j6.count;
        if (+(this.maximumValue) != +(dateMaxValue())) {
            var d = this.j6.count;
            while (d-- > 0) {
                if (this.mi.item(d) <= this.maximumValue) {
                    break;
                }
            }
            c = d;
        }
        if (a != this.l3 || c != this.l2) {
            var e = new AxisRangeChangedEventArgs(0, this.l3, a, this.l2, c);
            this.l3 = a;
            this.l2 = c;
            this.hl(e);
            this.nc();
            this.k2();
            return true;
        }
        return false;
    };
    OrdinalTimeXAxis.prototype.lb = function (a) {
        _super.prototype.lb.call(this, a);
        this.cw(true);
    };
    Object.defineProperty(OrdinalTimeXAxis.prototype, "isVertical", {
        get: function () {
            return this.cj;
        },
        enumerable: false,
        configurable: true
    });
    OrdinalTimeXAxis.prototype.j$c = function (a, b) {
        return this.eb.apply(this, arguments);
    };
    OrdinalTimeXAxis.prototype.j$b = function (a, b) {
        return this.d8.apply(this, arguments);
    };
    OrdinalTimeXAxis.prototype.j$d = function (a, b, c, d, e) {
        this.g4.apply(this, arguments);
    };
    OrdinalTimeXAxis.prototype.j$e = function (a, b, c, d) {
        this.g5.apply(this, arguments);
    };
    OrdinalTimeXAxis.prototype.j$f = function (a, b, c, d) {
        this.g6.apply(this, arguments);
    };
    Object.defineProperty(OrdinalTimeXAxis.prototype, "j$a", {
        get: function () {
            return this.cc;
        },
        enumerable: false,
        configurable: true
    });
    OrdinalTimeXAxis.$t = markType(OrdinalTimeXAxis, 'OrdinalTimeXAxis', CategoryXAxis.$, [ITimeRangeSelectorAxis_$type]);
    return OrdinalTimeXAxis;
}(CategoryXAxis));
export { OrdinalTimeXAxis };
//# sourceMappingURL=OrdinalTimeXAxis.js.map
