/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends, __values } from "tslib";
import { FinancialOverlay } from "./FinancialOverlay";
import { DependencyProperty } from "igniteui-react-core";
import { List$1 } from "igniteui-react-core";
import { Number_$type, typeCast, runOn, markType, markDep, Point_$type, fromEnum } from "igniteui-react-core";
import { CategoryFrame } from "./CategoryFrame";
import { Series } from "./Series";
import { MathUtil } from "igniteui-react-core";
import { FinancialSeriesView } from "./FinancialSeriesView";
import { ScalerParams } from "./ScalerParams";
import { ISortingAxis_$type } from "./ISortingAxis";
import { FinancialBucketCalculator } from "./FinancialBucketCalculator";
import { Polyline } from "igniteui-react-core";
import { Polygon } from "igniteui-react-core";
import { RangeValueList } from "./RangeValueList";
import { PropertyMetadata } from "igniteui-react-core";
import { truncate, isNaN_, isInfinity } from "igniteui-react-core";
import { Flattener } from "igniteui-react-core";
/**
 * @hidden
 */
var PriceChannelOverlay = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(PriceChannelOverlay, _super);
    function PriceChannelOverlay() {
        var _this = _super.call(this) || this;
        _this.s7 = new List$1(Number_$type, 0);
        _this.s6 = new List$1(Number_$type, 0);
        _this.ab = PriceChannelOverlay.$;
        _this.pu = new CategoryFrame(3);
        _this.pw = new CategoryFrame(3);
        _this.ps = new CategoryFrame(3);
        return _this;
    }
    PriceChannelOverlay.prototype.lm = function (a, b, c, d) {
        switch (b) {
            case "HighColumn":
            case "LowColumn":
                this.s0 = false;
                break;
        }
        _super.prototype.lm.call(this, a, b, c, d);
        switch (b) {
            case PriceChannelOverlay.$$p[0]:
                this.s0 = false;
                this.l0(false);
                break;
        }
    };
    PriceChannelOverlay.prototype.e3 = function (a, b, c) {
        var d = _super.prototype.e3.call(this, a, b, c);
        if (this.qk == null || this.ql == null) {
            d = false;
        }
        return d;
    };
    PriceChannelOverlay.prototype.s1 = function () {
        this.s7.clear();
        this.s6.clear();
        var a = truncate(MathUtil.b(this.s8, 0, this.ch.count));
        var b = Math.min(this.qk.count, this.ql.count);
        var c = this.ra(this.qk);
        var d = this.ra(this.ql);
        for (var e = 0; e < b; e++) {
            var f = Math.min(a, e);
            var g = -1.7976931348623157E+308;
            var h = 1.7976931348623157E+308;
            for (var i = 0; i < f; i++) {
                if (!isNaN_(c.item(e - i))) {
                    g = Math.max(g, c.item(e - i));
                }
                if (!isNaN_(d.item(e - i))) {
                    h = Math.min(h, d.item(e - i));
                }
            }
            if (e == 0) {
                h = d.item(0);
                g = c.item(0);
            }
            this.s7.add(g);
            this.s6.add(h);
        }
        return true;
    };
    PriceChannelOverlay.prototype.sh = function (a, b) {
        _super.prototype.sh.call(this, a, b);
        var c = b.bv;
        var d = b.bu;
        var e = this.getEffectiveViewport1(b);
        var f = new ScalerParams(0, c, d, this.pq.cc, e);
        var g = new ScalerParams(0, c, d, this.qc.cc, e);
        g.b = this.f2();
        var h = this.pq;
        var i = this.qc;
        a.f.clear();
        a.m.clear();
        a.p.clear();
        var j = 0;
        var k = typeCast(ISortingAxis_$type, this.pq);
        if (k != null && k.i$b.count != this.ch.count) {
            return;
        }
        j = this.rh(c, d, e);
        if (!this.s0) {
            this.s0 = this.s1();
        }
        g.b = this.f2();
        var l = this.pq.eb(2, f) - this.pq.eb(1, f);
        for (var m = b.bx.c; m <= b.bx.d; ++m) {
            var n = void 0;
            if (k == null) {
                n = b.bx.getBucket(m);
            }
            else {
                var o = k.i$b._inner[m];
                var p = k.i$d(o);
                var q = this.s7._inner[m];
                var r = this.s6._inner[m];
                var s = q;
                var t = r;
                var u = p;
                while (m < b.bx.d) {
                    o = k.i$b._inner[m + 1];
                    u = k.i$d(o);
                    if (u - p > l) {
                        break;
                    }
                    m++;
                    s = Math.max(q, this.s7._inner[m]);
                    t = Math.min(r, this.s6._inner[m]);
                }
                if (!isInfinity(t) && !isInfinity(s)) {
                    var v = NaN;
                    if (!isNaN_(p)) {
                        v = this.pq.d8(p, f);
                    }
                    n = [v, t, s];
                }
                else {
                    n = [NaN, NaN, NaN];
                }
            }
            var w = Math.max(1, l);
            if (!isNaN_(n[0]) && m * w >= this.s2) {
                if (this.pq != null && typeCast(ISortingAxis_$type, this.pq) !== null) {
                    n[0] = n[0] + j;
                }
                else {
                    n[0] = h.d8(n[0], f) + j;
                }
                n[1] = i.d8(n[1], g);
                n[2] = i.d8(n[2], g);
                a.f.add(n);
            }
        }
    };
    PriceChannelOverlay.prototype.kh = function (a, b) {
        _super.prototype.kh.call(this, a, b);
        var c = b;
        if (c != null) {
            c.b4();
        }
    };
    PriceChannelOverlay.prototype.sj = function (a, b) {
        _super.prototype.sj.call(this, a, b);
        var c = typeCast(PriceChannelOverlayView.$, b);
        if (c == null) {
            return;
        }
        var d = this.getEffectiveViewport1(b);
        if (b.b0(a)) {
            c.b4();
            var e_1 = a.f.count;
            var f = function (g) { return a.f._inner[g][0]; };
            var g = function (h) { return a.f._inner[e_1 - 1 - h][0]; };
            var h = function (i) { return a.f._inner[i][1]; };
            var i = function (j) { return a.f._inner[e_1 - 1 - j][2]; };
            c.b5(e_1, f, g, h, i);
            b.b2(a);
        }
        this.pz.a0(this, this.qy(), runOn(this, this.pi), this.rn(b), this.rp(b));
        var j = false;
        var k = this.pz.b;
        var l = a.f;
        var m = this.ch.count;
        if (k != null) {
            j = true;
        }
        if (j) {
            var n = new ScalerParams(0, b.bv, b.bu, this.pq.cc, d);
            this.sg(l, -1, m, this.pq, n, b.q);
        }
        var o = c.cb;
        var p = c.cc;
        var q = c.b7;
        this.pz.ad(o, true, false, true, true);
        this.pz.ad(p, true, false, true, true);
        this.pz.ad(q, false, true, false, false);
        q._opacity = this.pz.j * this.fi;
    };
    PriceChannelOverlay.prototype.bu = function () {
        return new PriceChannelOverlayView(this);
    };
    PriceChannelOverlay.prototype.lh = function (a) {
        _super.prototype.lh.call(this, a);
        this.s5 = typeCast(PriceChannelOverlayView.$, a);
    };
    PriceChannelOverlay.prototype.f8 = function (a, b, c) {
        if (this.ca == null) {
            return NaN;
        }
        var d = this.getEffectiveViewport1(this.bx);
        var e = new ScalerParams(0, this.ca.pg, this.bx.bu, this.pq.cc, d);
        var f = this.rh(this.ca.pg, this.bx.bu, d);
        return this.ga(new RangeValueList(this.s7, this.s6), a, this.pq, e, f, runOn(this, this.rg), b, c);
    };
    PriceChannelOverlay.prototype.g4 = function (a, b) {
        if (this.s7 == null || this.s6 == null) {
            return _super.prototype.g4.call(this, a, b);
        }
        return this.g5(a, b, this.pq, runOn(this, this.rg), new RangeValueList(this.s7, this.s6));
    };
    PriceChannelOverlay.prototype.g6 = function (a, b) {
        if (this.s7 == null || this.s6 == null) {
            return _super.prototype.g6.call(this, a, b);
        }
        return this.g7(a, b, this.pq, runOn(this, this.rg), new RangeValueList(this.s7, this.s6));
    };
    PriceChannelOverlay.prototype.f2 = function () {
        return Series.f3(this.s6, null);
    };
    PriceChannelOverlay.$t = markType(PriceChannelOverlay, 'PriceChannelOverlay', FinancialOverlay.$);
    PriceChannelOverlay.$$p = markDep(DependencyProperty, PropertyMetadata, PriceChannelOverlay, 'raisePropertyChanged', ['Period:s8:ta', [1, 14]]);
    return PriceChannelOverlay;
}(FinancialOverlay));
export { PriceChannelOverlay };
/**
 * @hidden
 */
var PriceChannelBucketCalculator = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(PriceChannelBucketCalculator, _super);
    function PriceChannelBucketCalculator(a) {
        var _this = _super.call(this, a) || this;
        _this.f = null;
        _this.f = a;
        return _this;
    }
    PriceChannelBucketCalculator.prototype.getBucket = function (a) {
        var b = a * this.b;
        var c = Math.min(b + this.b - 1, this.a.bz.ch.count - 1);
        if (b <= c) {
            var d = -1.7976931348623157E+308;
            var e = 1.7976931348623157E+308;
            var f = 0;
            for (var g = b; g <= c; ++g) {
                if (!isNaN_(this.f.b3.s7._inner[g]) && !isNaN_(this.f.b3.s6._inner[g])) {
                    d = Math.max(d, this.f.b3.s7._inner[g]);
                    e = Math.min(e, this.f.b3.s6._inner[g]);
                    ++f;
                }
            }
            if (f > 0 && e != 1.7976931348623157E+308 && d != -1.7976931348623157E+308) {
                return [0.5 * (b + c), e, d];
            }
        }
        return [NaN, NaN, NaN];
    };
    PriceChannelBucketCalculator.$t = markType(PriceChannelBucketCalculator, 'PriceChannelBucketCalculator', FinancialBucketCalculator.$);
    return PriceChannelBucketCalculator;
}(FinancialBucketCalculator));
export { PriceChannelBucketCalculator };
/**
 * @hidden
 */
var PriceChannelOverlayView = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(PriceChannelOverlayView, _super);
    function PriceChannelOverlayView(a) {
        var _this = _super.call(this, a) || this;
        _this.b8 = new Polygon();
        _this.cd = new Polyline();
        _this.ce = new Polyline();
        _this.b3 = null;
        _this.b6 = new Polygon();
        _this.b9 = new Polyline();
        _this.ca = new Polyline();
        _this.b3 = a;
        return _this;
    }
    Object.defineProperty(PriceChannelOverlayView.prototype, "b7", {
        get: function () {
            return this.b8;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PriceChannelOverlayView.prototype, "cb", {
        get: function () {
            return this.cd;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PriceChannelOverlayView.prototype, "cc", {
        get: function () {
            return this.ce;
        },
        enumerable: false,
        configurable: true
    });
    PriceChannelOverlayView.prototype.as = function () {
        _super.prototype.as.call(this);
        if (!this.q) {
        }
    };
    PriceChannelOverlayView.prototype.by = function () {
        return new PriceChannelBucketCalculator(this);
    };
    PriceChannelOverlayView.prototype.b4 = function () {
        this.b8.ak.clear();
        this.cd.ak.clear();
        this.ce.ak.clear();
        this.aq();
    };
    PriceChannelOverlayView.prototype.b5 = function (a, b, c, d, e) {
        var e_2, _a, e_3, _b;
        try {
            for (var _c = __values(fromEnum(Flattener.d(a, b, d, this.e.gh))), _d = _c.next(); !_d.done; _d = _c.next()) {
                var f = _d.value;
                this.b8.ak.add({ $type: Point_$type, x: b(f), y: d(f) });
                this.cd.ak.add({ $type: Point_$type, x: b(f), y: d(f) });
            }
        }
        catch (e_2_1) {
            e_2 = { error: e_2_1 };
        }
        finally {
            try {
                if (_d && !_d.done && (_a = _c.return))
                    _a.call(_c);
            }
            finally {
                if (e_2)
                    throw e_2.error;
            }
        }
        try {
            for (var _e = __values(fromEnum(Flattener.d(a, c, e, this.e.gh))), _f = _e.next(); !_f.done; _f = _e.next()) {
                var g = _f.value;
                this.b8.ak.add({ $type: Point_$type, x: c(g), y: e(g) });
                this.ce.ak.add({ $type: Point_$type, x: c(g), y: e(g) });
            }
        }
        catch (e_3_1) {
            e_3 = { error: e_3_1 };
        }
        finally {
            try {
                if (_f && !_f.done && (_b = _e.return))
                    _b.call(_e);
            }
            finally {
                if (e_3)
                    throw e_3.error;
            }
        }
        this.aq();
    };
    PriceChannelOverlayView.prototype.bc = function () {
        _super.prototype.bc.call(this);
        this.b6.ak = this.b8.ak;
        this.b9.ak = this.cd.ak;
        this.ca.ak = this.ce.ak;
        var a = this.bo();
        this.b6._fill = a;
        this.b6._opacity = 1;
        this.b9._stroke = a;
        this.b9.ac = this.e.fl + 3;
        this.ca._stroke = a;
        this.ca.ac = this.e.fl + 3;
    };
    PriceChannelOverlayView.prototype.a6 = function (a, b) {
        _super.prototype.a6.call(this, a, b);
        if (a.d) {
            if (b) {
                a.t(this.b6);
                a.u(this.b9);
                a.u(this.ca);
            }
            else {
                a.t(this.b8);
                a.u(this.cd);
                a.u(this.ce);
            }
        }
    };
    PriceChannelOverlayView.prototype.al = function (a) {
        _super.prototype.al.call(this, a);
        this.e.a6.exportPolygonData(a, this.b8, "fill", ["Fill"]);
        this.e.a6.exportPolylineData(a, this.cd, "bottom", ["Lower", "Main"]);
        this.e.a6.exportPolylineData(a, this.ce, "top", ["Upper"]);
    };
    PriceChannelOverlayView.$t = markType(PriceChannelOverlayView, 'PriceChannelOverlayView', FinancialSeriesView.$);
    return PriceChannelOverlayView;
}(FinancialSeriesView));
export { PriceChannelOverlayView };
//# sourceMappingURL=PriceChannelOverlay_combined.js.map
