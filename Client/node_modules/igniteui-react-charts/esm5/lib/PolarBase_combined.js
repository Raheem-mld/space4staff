/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends, __values } from "tslib";
import { MarkerSeries } from "./MarkerSeries";
import { Base, runOn, Number_$type, enumGetBox, Point_$type, typeCast, fromEnum, markType, markDep } from "igniteui-react-core";
import { PolarAxisInfoCache } from "./PolarAxisInfoCache";
import { SeriesRenderer$2 } from "./SeriesRenderer$2";
import { PolarFrame } from "./PolarFrame";
import { DependencyProperty } from "igniteui-react-core";
import { NumericAngleAxis } from "./NumericAngleAxis";
import { NumericRadiusAxis } from "./NumericRadiusAxis";
import { TrendLineType_$type } from "igniteui-react-core";
import { Brush } from "igniteui-react-core";
import { PenLineCap_$type } from "igniteui-react-core";
import { DoubleCollection } from "igniteui-react-core";
import { ScatterItemSearchMode_$type } from "./ScatterItemSearchMode";
import { HighlightingInfo } from "./HighlightingInfo";
import { List$1 } from "igniteui-react-core";
import { SeriesPointOfInterest } from "./SeriesPointOfInterest";
import { ScalerParams } from "./ScalerParams";
import { Rect } from "igniteui-react-core";
import { Marker } from "./Marker";
import { MarkerSeriesView } from "./MarkerSeriesView";
import { PolarAxes } from "./PolarAxes";
import { IFastItemsSource_$type } from "igniteui-react-core";
import { SeriesRenderingArguments } from "./SeriesRenderingArguments";
import { AxisRange } from "./AxisRange";
import { Dictionary$2 } from "igniteui-react-core";
import { OwnedPoint } from "./OwnedPoint";
import { GeometryUtil } from "igniteui-react-core";
import { DataContext } from "igniteui-react-core";
import { HashPool$2 } from "igniteui-react-core";
import { Clipper } from "igniteui-react-core";
import { TrendResolutionParams } from "./TrendResolutionParams";
import { PolarTrendLineManager } from "./PolarTrendLineManager";
import { AssigningPolarStyleEventArgs } from "./AssigningPolarStyleEventArgs";
import { AssigningPolarMarkerStyleEventArgs } from "./AssigningPolarMarkerStyleEventArgs";
import { SeriesRenderManager } from "./SeriesRenderManager";
import { PropertyMetadata } from "igniteui-react-core";
import { truncate, isNaN_, isInfinity } from "igniteui-react-core";
import { Defaults } from "./Defaults";
import { NumericMarkerManager } from "./NumericMarkerManager";
import { GeometryGroup } from "igniteui-react-core";
import { stringIsNullOrEmpty } from "igniteui-react-core";
/**
 * @hidden
 */
var PolarBase = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(PolarBase, _super);
    function PolarBase() {
        var _this = _super.call(this) || this;
        _this.rd = null;
        _this.qz = null;
        _this.rb = null;
        _this.t3 = null;
        _this.t2 = null;
        _this.rp = null;
        _this.rr = null;
        _this.rs = null;
        _this.rh = new PolarFrame();
        _this.rj = new PolarFrame();
        _this.rf = new PolarFrame();
        _this.ra = null;
        _this.r9 = null;
        _this.rl = 1;
        _this.rw = false;
        _this.rv = false;
        _this.q6 = null;
        _this.q7 = null;
        _this.assigningPolarStyle = null;
        _this.assigningPolarMarkerStyle = null;
        _this.rk = null;
        _this.ri = null;
        _this.re = null;
        _this.rk = new PolarSeriesRenderManager();
        _this.rm = _this.rn();
        _this.ri = new PolarFrame();
        _this.rj.x = runOn(_this, _this.t1);
        _this.rh.x = runOn(_this, _this.t1);
        _this.rf.x = runOn(_this, _this.t1);
        _this.rp = new SeriesRenderer$2(PolarFrame.$, PolarBaseView.$, 0, runOn(_this, _this.s8), runOn(_this, _this.tc), runOn(_this, _this.cr), runOn(_this, _this.l8), runOn(_this, _this.s3));
        return _this;
    }
    PolarBase.prototype.bu = function () {
        return new PolarBaseView(this);
    };
    PolarBase.prototype.lh = function (a) {
        _super.prototype.lh.call(this, a);
        this.rc = a;
    };
    PolarBase.prototype.ke = function () {
        _super.prototype.ke.call(this);
        this.q8 = null;
        this.q9 = null;
    };
    PolarBase.prototype.get_d0 = function () {
        return true;
    };
    PolarBase.prototype.cx = function (a, b, c) {
        var _this = this;
        if (!this.hasMarkers) {
            return false;
        }
        var d = this.q8;
        var e = new ScalerParams(1, this.ca.pg, this.pf, d.cc);
        e.c = this.getEffectiveViewport1(this.bx);
        var f = this.q9;
        var g = new ScalerParams(1, this.ca.pg, this.pf, f.cc);
        g.c = this.getEffectiveViewport1(this.bx);
        a.clear();
        this.pq.cf(function (h) {
            if (h._visibility == 0) {
                var i = new SeriesPointOfInterest();
                var j = h.n;
                var k = h.o;
                if (j < _this.pf.left || j > _this.pf.right || k < _this.pf.top || k > _this.pf.bottom) {
                    return;
                }
                var l = void 0;
                var m = void 0;
                var n = _this.ra.f(j, k, _this.bx.bv, _this.bx.bu, l, m);
                l = n.p4;
                m = n.p5;
                i.b = l;
                i.c = m;
                i.a = h.content;
                a.add(i);
            }
        });
        return true;
    };
    PolarBase.prototype.s3 = function () {
        if (this.cb.g) {
            this.cb.t();
        }
    };
    PolarBase.prototype.s5 = function () {
        this.ra.e(this.rd.w, this.rt, this.ru, this.t3, this.t2, function (a, b) { return Math.cos(b); }, function (a, b) { return Math.sin(b); }, true);
    };
    Object.defineProperty(PolarBase.prototype, "rt", {
        get: function () {
            return this.rr;
        },
        set: function (a) {
            if (this.rr != a) {
                var b = this.rt;
                this.rr = a;
                this.raisePropertyChanged("AngleColumn", b, this.rt);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PolarBase.prototype, "ru", {
        get: function () {
            return this.rs;
        },
        set: function (a) {
            if (this.rs != a) {
                var b = this.ru;
                this.rs = a;
                this.raisePropertyChanged("RadiusColumn", b, this.ru);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PolarBase.prototype, "tw", {
        get: function () {
            return this.c(PolarBase.td);
        },
        set: function (a) {
            this.h(PolarBase.td, a);
        },
        enumerable: false,
        configurable: true
    });
    PolarBase.prototype.rg = function () {
        var a = this.rf;
        if (this.cr()) {
            if (this.cb.g) {
                this.cb.t();
            }
            a = this.rj;
        }
        return a;
    };
    PolarBase.prototype.ky = function () {
        _super.prototype.ky.call(this);
        if (this.q9 != null) {
            this.q9.hq(false);
        }
        if (this.q8 != null) {
            this.q8.hq(false);
        }
    };
    PolarBase.prototype.kk = function (a, b, c, d) {
        var e = false;
        this.rc.cv.g$e(a, b, c, d);
        if (this.q8 != null && !this.q8.cv()) {
            e = true;
        }
        if (this.q9 != null && !this.q9.cv()) {
            e = true;
        }
        if (e) {
            this.l0(true);
        }
    };
    PolarBase.prototype.mm = function (a, b) {
        this.l0(false);
    };
    PolarBase.prototype.mn = function (a, b) {
        this.l0(false);
    };
    PolarBase.prototype.e3 = function (a, b, c) {
        var d = true;
        if (!_super.prototype.e3.call(this, a, b, c) || !c.o() || b.isEmpty || a.isEmpty || this.q8 == null || this.q9 == null || this.rt == null || this.ru == null || this.rt.count == 0 || this.ru.count == 0 || this.ch == null || this.ch.count != this.rt.count || this.ch.count != this.ru.count || this.ra == null || this.q8.bh == null || this.q9.bh == null || this.q8.kv == this.q8.ku || this.q9.kv == this.q9.ku) {
            d = false;
        }
        return d;
    };
    PolarBase.prototype.l1 = function (a) {
        var b;
        var c;
        var d = this.getViewInfo(c, b);
        c = d.p0;
        b = d.p1;
        if (!this.e3(c, b, this.bx)) {
            this.kh(true, this.bx);
            return;
        }
        this.t3 = b;
        this.t2 = c;
        this.rb = new PolarAxisInfoCache(this.q8, this.q9, this.ch);
        var e = new SeriesRenderingArguments(this, c, b, a, this.em);
        var f = this.rp.g(e, this.rh, this.rf, this.rj, this.rc);
        this.rh = f.p1;
        this.rf = f.p2;
        this.rj = f.p3;
    };
    PolarBase.prototype.t1 = function (a) {
        var b = this.ra.h(a.x, a.y, this.t3, this.t2, this.rb.e, this.rb.d, this.rb.g, this.rb.f, this.rb.i, this.rb.h);
        return b;
    };
    PolarBase.prototype.ap = function (a) {
        if (a != null && a == this.q8 && this.rt != null) {
            return new AxisRange(this.rt.minimum, this.rt.maximum);
        }
        if (a != null && a == this.q9 && this.ru != null) {
            return new AxisRange(this.ru.minimum, this.ru.maximum);
        }
        return null;
    };
    PolarBase.prototype.eh = function (a) {
        var b = this.bx.bv;
        b = b.copy();
        var c = this.bx.bu;
        var d = !b.isEmpty && !c.isEmpty && this.ch != null ? this.ch.indexOf(a) : -1;
        if (this.q8 == null || this.rt == null || this.q9 == null || this.ru == null) {
            return false;
        }
        if (d < 0 || d > this.rt.count - 1 || d > this.ru.count - 1) {
            return false;
        }
        var e = this.q8.getScaledAngle(this.rt.item(d));
        var f = this.q9.mg(this.ru.item(d));
        var g = 0.5 + (Math.cos(e) * f);
        var h = 0.5 + (Math.sin(e) * f);
        if (!isNaN_(g)) {
            if (g < b.left + 0.1 * b.width) {
                g = g + 0.4 * b.width;
                b.x = g - 0.5 * b.width;
            }
            if (g > b.right - 0.1 * b.width) {
                g = g - 0.4 * b.width;
                b.x = g - 0.5 * b.width;
            }
        }
        if (!isNaN_(h)) {
            if (h < b.top + 0.1 * b.height) {
                h = h + 0.4 * b.height;
                b.y = h - 0.5 * b.height;
            }
            if (h > b.bottom - 0.1 * b.height) {
                h = h - 0.4 * b.height;
                b.y = h - 0.5 * b.height;
            }
        }
        if (this.b5 != null) {
            this.b5.ap(this.ca, b, true);
        }
        return d >= 0;
    };
    PolarBase.prototype.hh = function (a) {
        var b = this.g0(a);
        if (this.ch != null && b >= 0 && b < this.ch.count) {
            return this.ch.item(b);
        }
        return null;
    };
    PolarBase.prototype.g0 = function (a) {
        var b = truncate(Math.round(this.fw(a)));
        return b;
    };
    PolarBase.prototype.fw = function (a) {
        switch (this.rm) {
            case 1: return this.sd(a);
            case 3: return this.se(a);
            case 2: return this.sb(a);
            case 4: return this.sc(a);
        }
        return -1;
    };
    PolarBase.prototype.sc = function (a) {
        return this.sf(a, false);
    };
    PolarBase.prototype.sb = function (a) {
        var b = this.ox(a);
        var c = b.x;
        var d = b.y;
        if (this.ch == null || this.q8 == null || this.q9 == null || this.rt == null || this.ru == null) {
            return -1;
        }
        if (this.ch.count > this.sh) {
            return -1;
        }
        this.r0();
        var e = this.r9;
        var f = 1.7976931348623157E+308;
        var g = -1;
        for (var h = 0; h < this.rt.count; h++) {
            var i = e._inner[h].x;
            var j = e._inner[h].y;
            var k = (c - i) * (c - i) + (d - j) * (d - j);
            if (k < f) {
                f = k;
                g = h;
            }
        }
        return g;
    };
    PolarBase.prototype.r0 = function () {
        var a = this.rf;
        if (this.cr()) {
            a = this.rj;
        }
        if (a == null || a.w.count == 0) {
            return false;
        }
        this.r9 = a.w;
        return true;
    };
    PolarBase.prototype.sf = function (a, b) {
        if (!this.r3) {
            return -1;
        }
        var c = { $type: Point_$type, x: 0, y: 0 };
        var d = true;
        var e = this.rf;
        if (this.cr()) {
            e = this.rj;
        }
        if (e == null) {
            return -1;
        }
        if (e.m == null) {
            return -1;
        }
        if (this.ch.count > this.sh) {
            return -1;
        }
        this.r0();
        var f = this.r9;
        var g = this.ox(a);
        var h = 1.7976931348623157E+308;
        var i = -1;
        for (var j = 0; j < f.count; j++) {
            var k = f._inner[j];
            if (j > 0) {
                if (isNaN_(k.x) || isNaN_(k.y) || isNaN_(c.x) || isNaN_(c.y)) {
                    c = k;
                    continue;
                }
                if (!b || e.j.containsKey(this.ch.item(j)) || e.j.containsKey(this.ch.item(j - 1))) {
                    var l = GeometryUtil.d(g, c, k);
                    if (l < h) {
                        h = l;
                        i = j;
                    }
                }
            }
            c = k;
        }
        if (i >= 0) {
            var m = f._inner[i];
            var n = f._inner[i - 1];
            if (!b || (e.j.containsKey(this.ch.item(i)) && e.j.containsKey(this.ch.item(i - 1)))) {
                var o = GeometryUtil.h(g, n, m);
                return (i - 1) + o;
            }
            else if (e.j.containsKey(this.ch.item(i))) {
                return i;
            }
            else {
                return i - 1;
            }
        }
        return -1;
    };
    PolarBase.prototype.se = function (a) {
        return this.sf(a, true);
    };
    PolarBase.prototype.sd = function (a) {
        var _this = this;
        var b = null;
        var c = 1.7976931348623157E+308;
        var d = this.ox(a);
        var e = d.x;
        var f = d.y;
        if (this.rc.cw.e > this.sh) {
            return -1;
        }
        this.rc.cz(function (g) {
            if (g._visibility == 0) {
                var h = _this.rc.cp(g);
                var i = h.left + h.width / 2;
                var j = h.top + h.height / 2;
                var k = (e - i) * (e - i) + (f - j) * (f - j);
                if (k < c) {
                    c = k;
                    b = g;
                }
            }
        });
        if (b != null) {
            return b.ak;
        }
        return -1;
    };
    PolarBase.prototype.o2 = function (a, b, c) {
        var _this = this;
        if (this.q8 == null || this.q9 == null || this.rt == null || this.ru == null) {
            return { $type: Point_$type, x: NaN, y: NaN };
        }
        var d = this.bx.bv;
        var e = this.bx.bu;
        var f = this.getEffectiveViewport();
        var g = new ScalerParams(0, d, e, this.q8.cc, f);
        var h = ((function () {
            var $ret = new ScalerParams(0, d, e, _this.q9.cc, f);
            $ret.b = _this.f2();
            return $ret;
        })());
        if (b) {
            var i = this.fw(a);
            if (i == -1) {
                return { $type: Point_$type, x: NaN, y: NaN };
            }
            var j = truncate(Math.floor(i));
            var k = truncate(Math.ceil(i));
            if (j < 0) {
                j = 0;
            }
            if (k < 0) {
                k = 0;
            }
            if (k > this.ch.count - 1) {
                k = this.ch.count - 1;
            }
            if (j > this.ch.count - 1) {
                j = this.ch.count - 1;
            }
            if (k == j) {
                return this.ra.h(this.rt.item(j), this.ru.item(j), d, e, this.rb.e, this.rb.d, this.rb.g, this.rb.f, this.rb.i, this.rb.h);
            }
            var l = i - Math.floor(i);
            var m = this.ra.h(this.rt.item(j), this.ru.item(j), d, e, this.rb.e, this.rb.d, this.rb.g, this.rb.f, this.rb.i, this.rb.h);
            var n = this.ra.h(this.rt.item(k), this.ru.item(k), d, e, this.rb.e, this.rb.d, this.rb.g, this.rb.f, this.rb.i, this.rb.h);
            var o = m.x;
            var p = m.y;
            var q = n.x;
            var r = n.y;
            var s = q - o;
            var t = r - p;
            return { $type: Point_$type, x: o + s * l, y: p + t * l };
        }
        else {
            var u = this.g0(a);
            if (u == -1) {
                return { $type: Point_$type, x: NaN, y: NaN };
            }
            return this.ra.h(this.rt.item(u), this.ru.item(u), d, e, this.rb.e, this.rb.d, this.rb.g, this.rb.f, this.rb.i, this.rb.h);
        }
    };
    PolarBase.prototype.ag = function () {
        return [this.q8, this.q9];
    };
    PolarBase.prototype.hk = function (a, b) {
        var c = this.ja(b);
        if (c == PolarBase.$$p[1]) {
            return this.hl(a, b, this.so);
        }
        if (c == PolarBase.$$p[9]) {
            return this.hl(a, b, this.sy);
        }
        return _super.prototype.hk.call(this, a, b);
    };
    PolarBase.prototype.lm = function (a, b, c, d) {
        _super.prototype.lm.call(this, a, b, c, d);
        if (this.rc.cv.g$b(a, b, c, d)) {
            this.l0(false);
            this.k7();
        }
        switch (b) {
            case "FastItemsSource":
                if (typeCast(IFastItemsSource_$type, c) != null) {
                    c.deregisterColumn(this.rt);
                    c.deregisterColumn(this.ru);
                    this.rt = null;
                    this.ru = null;
                }
                if (typeCast(IFastItemsSource_$type, d) != null) {
                    this.rt = this.ce(this.so);
                    this.ru = this.ce(this.sy);
                }
                if ((this.q9 != null && !this.q9.cv()) || (this.q8 != null && !this.q8.cv())) {
                    this.l0(false);
                }
                break;
            case PolarBase.$$p[0]:
                if (this.q8 != null && this.q9 != null) {
                    this.ra = new PolarAxes(this.q9, this.q8);
                }
                if (c != null) {
                    c.bx(this);
                }
                if (d != null) {
                    d.cn(this);
                }
                if (this.q8 != null && !this.q8.cv()) {
                    this.l0(false);
                }
                else if (c != null && d == null) {
                    this.kh(true, this.bx);
                }
                break;
            case PolarBase.$$p[8]:
                if (this.q8 != null && this.q9 != null) {
                    this.ra = new PolarAxes(this.q9, this.q8);
                }
                if (c != null) {
                    c.bx(this);
                }
                if (d != null) {
                    d.cn(this);
                }
                if (this.q9 != null && !this.q9.cv()) {
                    this.l0(false);
                }
                else if (c != null && d == null) {
                    this.kh(true, this.bx);
                }
                if (this.q8 != null && !this.q8.cv()) {
                    this.q8.hm();
                }
                break;
            case PolarBase.$$p[1]:
                if (this.ch != null) {
                    this.ch.deregisterColumn(this.rt);
                    this.rt = this.ce(this.so);
                }
                break;
            case "AngleColumn":
                this.rc.cv.g$i();
                if (this.q8 != null && !this.q8.cv()) {
                    this.l0(false);
                }
                break;
            case PolarBase.$$p[9]:
                if (this.ch != null) {
                    this.ch.deregisterColumn(this.ru);
                    this.ru = this.ce(this.sy);
                }
                break;
            case "RadiusColumn":
                this.rc.cv.g$i();
                if (this.q9 != null && !this.q9.cv()) {
                    this.l0(false);
                }
                break;
            case PolarBase.$$p[10]:
                this.l0(false);
                this.k7();
                break;
            case PolarBase.$$p[7]:
                this.l0(false);
                this.k7();
                break;
            case "TransitionProgress":
                this.rb = new PolarAxisInfoCache(this.q8, this.q9, this.ch);
                this.t3 = this.bx.bv;
                this.t2 = this.bx.bu;
                this.rj.v = this.r8;
                this.rj.c(this.gn, this.rh, this.rf);
                if (this.ct(this.bx)) {
                    return;
                }
                if (this.gn == 1) {
                    this.tc(this.rf, this.rc);
                }
                else {
                    this.tc(this.rj, this.rc);
                }
                if (this.ca != null) {
                    this.ca.ln(this);
                }
                break;
            case "TrendLineBrush":
                this.md();
                break;
            case PolarBase.$$p[2]:
                this.l0(false);
                this.k7();
                break;
            case "TrendLineType":
                this.k7();
                break;
            case PolarBase.$$p[4]:
                this.rw = this.r5();
                this.l0(false);
                break;
            case PolarBase.$$p[3]:
                this.rv = this.r4();
                this.l0(false);
                break;
            case PolarBase.$$p[5]:
                this.rm = this.rn();
                break;
        }
    };
    Object.defineProperty(PolarBase.prototype, "rm", {
        get: function () {
            return this.rl;
        },
        set: function (a) {
            var b = this.rl;
            this.rl = a;
            if (b != this.rl) {
                this.raisePropertyChanged("ActualItemSearchMode", enumGetBox(ScatterItemSearchMode_$type, b), enumGetBox(ScatterItemSearchMode_$type, this.rl));
            }
        },
        enumerable: false,
        configurable: true
    });
    PolarBase.prototype.rn = function () {
        if (this.ro != 0) {
            return this.ro;
        }
        return this.r3 ? 4 : 1;
    };
    PolarBase.prototype.get_r3 = function () {
        return false;
    };
    Object.defineProperty(PolarBase.prototype, "r3", {
        get: function () {
            return this.get_r3();
        },
        enumerable: false,
        configurable: true
    });
    PolarBase.prototype.r5 = function () {
        return this.r2;
    };
    PolarBase.prototype.r4 = function () {
        return this.r1;
    };
    PolarBase.prototype.ry = function (a) {
        if (typeCast(NumericRadiusAxis.$, a) !== null) {
            return true;
        }
        return false;
    };
    PolarBase.prototype.rx = function (a) {
        if (typeCast(NumericAngleAxis.$, a) !== null) {
            return true;
        }
        return false;
    };
    PolarBase.prototype.kh = function (a, b) {
        _super.prototype.kh.call(this, a, b);
        var c = b;
        if (a) {
            c.cw.clear();
        }
        c.cv.g$d();
    };
    PolarBase.prototype.q0 = function (a, b) {
        var c = a.top - 10;
        var d = a.bottom + 10;
        var e = a.left - 10;
        var f = a.right + 10;
        var g = ((function () {
            var $ret = new Clipper(1, e, d, f, c, false);
            $ret.i = b;
            return $ret;
        })());
        return g;
    };
    PolarBase.prototype.s2 = function (a, b, c, d) {
        a.g = new Dictionary$2(Base.$, OwnedPoint.$, 1, b);
        var e = this.ch;
        var _loop_1 = function (f) {
            var g = a.w._inner[f];
            if (!isInfinity(g.x) && !isInfinity(g.y)) {
                var h_1 = { $type: Point_$type, x: this_1.rt.item(f), y: this_1.ru.item(f) };
                var i_1 = { $type: Point_$type, x: g.x, y: g.y };
                a.g.addItem(e.item(f), ((function () {
                    var $ret = new OwnedPoint();
                    $ret.a = e.item(f);
                    $ret.b = h_1;
                    $ret.c = i_1;
                    return $ret;
                })()));
            }
        };
        var this_1 = this;
        for (var f = 0; f < b; f++) {
            _loop_1(f);
        }
    };
    PolarBase.prototype.s8 = function (a, b) {
        var _this = this;
        var c = b.bv;
        var d = b.bu;
        a.j.clear();
        a.n.clear();
        var e = Math.min(this.rt != null ? this.rt.count : 0, this.ru != null ? this.ru.count : 0);
        if (e < 1) {
            return;
        }
        this.rb = new PolarAxisInfoCache(this.q8, this.q9, this.ch);
        this.rd = a;
        this.t2 = d;
        this.t3 = c;
        b.ct.l(a.j, this.si, c, d, this.gh);
        if (e <= this.si) {
            this.s2(a, e, c, d);
        }
        var f = this.q0(d, a.n);
        var g = Math.min(this.q8.kv, this.q8.ku);
        var h = Math.max(this.q8.ku, this.q8.kv);
        b.cv.i = this.r8;
        b.cv.h = 0;
        b.cv.k = this.q9.ma;
        b.cv.j = this.q9.l9;
        b.cv.l = function (i, j) { return _this.ra.c(i, j, c, d, Math.cos); };
        b.cv.m = function (i, j) { return _this.ra.d(i, j, c, d, Math.sin); };
        var i = new List$1(Number_$type, 0);
        for (var j = 0; j < this.rt.count; j++) {
            if (this.rt.item(j) >= g && this.rt.item(j) <= h) {
                i.add(this.rt.item(j));
            }
        }
        var k = this.ru;
        if (i.count != this.rt.count) {
            k = new List$1(Number_$type, 0);
            for (var l = 0; l < this.rt.count; l++) {
                if (this.rt.item(l) >= g && this.rt.item(l) <= h) {
                    k.add(this.ru.item(l));
                }
            }
        }
        b.cv.n(a.n, this.rq, i, k, this.sj, runOn(this.q8, this.q8.getScaledAngle), runOn(this.q9, this.q9.mg), ((function () {
            var $ret = new TrendResolutionParams();
            $ret.b = _this.gh;
            $ret.f = d;
            $ret.g = c;
            return $ret;
        })()), f, g, h);
    };
    PolarBase.prototype.get_dr = function () {
        return true;
    };
    PolarBase.prototype.q4 = function (a, b, c) {
        return null;
    };
    PolarBase.prototype.q5 = function (a, b, c) {
        var d = this.rg();
        var e = this.rc.by(this.ox(b));
        var f = -1;
        if (e == null) {
            if (a != null) {
                f = this.ch.indexOf(a);
            }
            else {
                return null;
            }
        }
        else {
            f = e.ak;
        }
        if (f == -1) {
            return null;
        }
        var g = new HighlightingInfo();
        g.b = this;
        g.h = f;
        g.g = f;
        g.d = false;
        g.e = true;
        if (c != null && c.h == g.h && c.g == g.g) {
            return c;
        }
        return g;
    };
    PolarBase.prototype.q3 = function (a, b, c) {
        var d = new HighlightingInfo();
        d.b = this;
        d.h = 0;
        d.g = this.ch.count - 1;
        d.d = true;
        if (c != null && c.h == d.h && c.g == d.g) {
            return c;
        }
        return d;
    };
    PolarBase.prototype.av = function (a, b, c) {
        if (this.cy && this.d9(this.bj) && !c) {
            var d = this.q4(a, b, this.q6);
            this.q6 = d;
            return d;
        }
        else {
            var e = this.q3(a, b, this.q6);
            this.q6 = e;
            return e;
        }
    };
    PolarBase.prototype.aw = function (a, b, c) {
        if (this.d9(this.bj) && !c) {
            var d = this.q5(a, b, this.q7);
            this.q7 = d;
            return d;
        }
        else {
            var e = this.q3(a, b, this.q7);
            e.e = true;
            this.q7 = e;
            return e;
        }
    };
    PolarBase.prototype.r7 = function () {
        return (this.assigningPolarStyle != null && this.rw) || (this.bj != 1);
    };
    PolarBase.prototype.r6 = function () {
        return (this.assigningPolarMarkerStyle != null && this.rv) || (this.bj != 1);
    };
    PolarBase.prototype.tc = function (a, b) {
        var c = b.bv;
        var d = b.bu;
        var e = this.getEffectiveViewport1(b);
        var f = this.o7(b);
        this.rb = new PolarAxisInfoCache(this.q8, this.q9, this.ch);
        if (this.pt()) {
            b.ct.j(a.j, this.pv);
            if (this.r6()) {
                this.s4(b, a);
            }
        }
        b.cm();
        var g = this.q0(d, b.cv.g$j.ak);
        b.cv.g$h(a.n, g);
        this.s1(d, c, e, f, b);
    };
    PolarBase.prototype.qx = function (a, b) {
        return this.qy(a, b);
    };
    PolarBase.prototype.qy = function (a, b) {
        if (b < a || a < 0 || a > this.rt.count || b < 0 || b > this.rt.count) {
            return null;
        }
        var c = new Array((b - a) + 1);
        for (var d = a; d <= b; d++) {
            var e = d;
            c[d - a] = this.ch.item(d);
        }
        return c;
    };
    PolarBase.prototype.s4 = function (a, b) {
        var _this = this;
        a.b3 = true;
        this.rk.aw(this, this.r6(), runOn(this, this.qx));
        var c = this.rk.d;
        var d = c != null;
        var e = this.getEffectiveViewport1(a);
        var f = this.ch == null ? 0 : this.ch.count;
        this.rc.cf(function (g) {
            if (g._visibility == 0) {
                var h = g.ak;
                var i = g.content;
                if (i == null) {
                    i = new DataContext();
                    g.content = i;
                }
                if (d) {
                    _this.s6(h, f, a.q);
                }
                _this.rk.ac(g, i);
            }
        });
    };
    PolarBase.prototype.s7 = function (a, b, c) {
        var d = this.bj != 1;
        this.rk.ay(this.rk.b, a, b, false);
        this.rk.ab(this.fj);
        var e = this.rk.av;
        var f = null;
        var g = this.ch;
        if (d && this.ca != null) {
            f = this.ca.a3.getHighlightingInfo(this, g, e.o, e.n, false);
            e.b = f;
        }
        e.f = c;
        this.ta(e);
        this.rk.z(this, f, c, d, a < 0);
    };
    PolarBase.prototype.s6 = function (a, b, c) {
        var d = this.bj != 1;
        this.rk.ay(this.rk.d, a, b, true);
        this.rk.aa(this.fj);
        var e = this.rk.au;
        var f = null;
        var g = this.ch;
        var h = null;
        if (d && this.ca != null) {
            f = this.ca.a3.getHighlightingInfo(this, g, e.o, e.n, true);
            if (this.ca.a3.isCrossSeriesHighlight(this)) {
                h = this.ca.a3.getHighlightingInfo(this, g, e.o, e.n, true);
            }
            e.b = f;
        }
        e.f = c;
        this.s9(e);
        this.rk.y(this, f, c, d, e.l, this.ca.a3.sumHighlightingProgress);
    };
    PolarBase.prototype.ta = function (a) {
        if (this.assigningPolarStyle != null && this.rw) {
            this.assigningPolarStyle(this, a);
        }
    };
    PolarBase.prototype.s9 = function (a) {
        if (this.assigningPolarMarkerStyle != null && this.rv) {
            this.assigningPolarMarkerStyle(this, a);
        }
    };
    PolarBase.prototype.s1 = function (a, b, c, d, e) {
        e.cy(a, b, c, d);
    };
    PolarBase.prototype.md = function () {
        _super.prototype.md.call(this);
        if (this.g9 < 0) {
            return;
        }
        this.rc.c1();
    };
    PolarBase.prototype.l2 = function (a, b) {
        _super.prototype.l2.call(this, a, b);
        if (!this.et) {
            this.bx.a2(b);
            return;
        }
        this.bx.a2(b);
        if (this.ct(this.bw)) {
            return;
        }
        var c = this.bw;
        if (!this.en) {
            this.ri = new PolarFrame();
            this.s8(this.ri, c);
        }
        this.en = false;
        this.tc(this.ri, c);
        this.et = false;
    };
    PolarBase.prototype.lz = function (a, b, c, d, e) {
        _super.prototype.lz.call(this, a, b, c, d, e);
        var f = this.a4.a$h.item(d);
        var g = f;
        f.a1(c);
        if (this.ct(g)) {
            return;
        }
        if (this.re == null) {
            this.re = new PolarFrame();
        }
        this.s8(this.re, g);
        this.tc(this.re, g);
    };
    PolarBase.prototype.tb = function (a, b) {
        var e_1, _a, e_2, _b;
        var c = new List$1(Base.$, 0);
        try {
            for (var _c = __values(fromEnum(b.c)), _d = _c.next(); !_d.done; _d = _c.next()) {
                var d = _d.value;
                if (!a.containsKey(d)) {
                    c.add1(d);
                }
            }
        }
        catch (e_1_1) {
            e_1 = { error: e_1_1 };
        }
        finally {
            try {
                if (_d && !_d.done && (_a = _c.return))
                    _a.call(_c);
            }
            finally {
                if (e_1)
                    throw e_1.error;
            }
        }
        try {
            for (var _e = __values(fromEnum(c)), _f = _e.next(); !_f.done; _f = _e.next()) {
                var e = _f.value;
                b.h(e);
            }
        }
        catch (e_2_1) {
            e_2 = { error: e_2_1 };
        }
        finally {
            try {
                if (_f && !_f.done && (_b = _e.return))
                    _b.call(_e);
            }
            finally {
                if (e_2)
                    throw e_2.error;
            }
        }
    };
    PolarBase.prototype.qw = function (a, b, c) {
        this.s5();
        return this.rd.w.toArray();
    };
    PolarBase.prototype.sa = function (a) {
        var e_3, _a;
        var b = new List$1(Number_$type, 0);
        var c = this.ch;
        try {
            for (var _b = __values(fromEnum(this.rc.cw.c)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var d = _c.value;
                b.add(c.indexOf(d));
            }
        }
        catch (e_3_1) {
            e_3 = { error: e_3_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_3)
                    throw e_3.error;
            }
        }
        return b;
    };
    PolarBase.prototype.t0 = function (a) {
        return { $type: Point_$type, x: this.rt.item(a), y: this.ru.item(a) };
    };
    PolarBase.prototype.kr = function (a) {
        _super.prototype.kr.call(this, a);
        this.a6.exportTrendlineData(this, a, this.rc.cv.g$j);
    };
    PolarBase.$t = markType(PolarBase, 'PolarBase', MarkerSeries.$);
    PolarBase.td = DependencyProperty.i("ActualTrendLineBrush", Brush.$, PolarBase.$, new PropertyMetadata(2, null, function (a, b) { return a.raisePropertyChanged("ActualTrendLineBrush", b.oldValue, b.newValue); }));
    PolarBase.$$p = markDep(DependencyProperty, PropertyMetadata, PolarBase, 'raisePropertyChanged', ['AngleAxis:q8:te', [NumericAngleAxis.$, null], 'AngleMemberPath:so:tf', [2], 'ClipSeriesToBounds:rz:tg', [0, false], 'IsCustomPolarMarkerStyleAllowed:r1:th', [0, false], 'IsCustomPolarStyleAllowed:r2:ti', [0, false], 'ItemSearchMode:ro:tj', [ScatterItemSearchMode_$type, enumGetBox(ScatterItemSearchMode_$type, 0)], 'ItemSearchThreshold:sh:tk', [1, 10000], 'MaximumMarkers:si:tl', [1, 400], 'RadiusAxis:q9:tm', [NumericRadiusAxis.$, null], 'RadiusMemberPath:sy:tn', [2], 'UseCartesianInterpolation:r8:tv', [0, true], 'TrendLineType:rq:tt', [TrendLineType_$type, enumGetBox(TrendLineType_$type, 0)], 'TrendLineThickness:sg:ts', [1, 1.5], 'TrendLinePeriod:sj:tr', [1, 7], 'TrendLineZIndex:sk:tu', [1, 1], 'TrendLineBrush:tx:to', [Brush.$, null], 'TrendLineDashArray:ty:tp', [DoubleCollection.$], 'TrendLineDashCap:tz:tq', [PenLineCap_$type, enumGetBox(PenLineCap_$type, 0)]]);
    return PolarBase;
}(MarkerSeries));
export { PolarBase };
/**
 * @hidden
 */
var PolarSeriesRenderManager = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(PolarSeriesRenderManager, _super);
    function PolarSeriesRenderManager() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.au = null;
        _this.av = null;
        return _this;
    }
    PolarSeriesRenderManager.prototype.c = function () {
        this.au = new AssigningPolarMarkerStyleEventArgs();
        return this.au;
    };
    PolarSeriesRenderManager.prototype.a = function () {
        this.av = new AssigningPolarStyleEventArgs();
        return this.av;
    };
    PolarSeriesRenderManager.prototype.aw = function (a, b, c) {
        this.w(a, b, c);
    };
    PolarSeriesRenderManager.prototype.ax = function (a, b, c) {
        this.x(a, b, c);
    };
    PolarSeriesRenderManager.prototype.ay = function (a, b, c, d) {
        if (b == -1) {
            a.c = false;
            a.o = 0;
            a.n = c - 1;
        }
        else {
            if (d) {
                a.o = b;
                a.n = b;
            }
            else {
                a.c = false;
                a.o = b;
                a.n = b;
            }
        }
    };
    PolarSeriesRenderManager.$t = markType(PolarSeriesRenderManager, 'PolarSeriesRenderManager', SeriesRenderManager.$);
    return PolarSeriesRenderManager;
}(SeriesRenderManager));
export { PolarSeriesRenderManager };
/**
 * @hidden
 */
var PolarBaseView = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(PolarBaseView, _super);
    function PolarBaseView(a) {
        var _this = _super.call(this, a) || this;
        _this.cu = null;
        _this.ct = null;
        _this.cv = null;
        _this.cw = null;
        _this.cu = a;
        _this.cw = new HashPool$2(Base.$, Marker.$);
        _this.ch(_this.cw);
        _this.cv = new PolarTrendLineManager();
        return _this;
    }
    PolarBaseView.prototype.as = function () {
        _super.prototype.as.call(this);
        this.ct = this.cs();
        if (!this.q) {
            this.cu.si = 1000;
            this.b1.pr = Defaults.e;
        }
    };
    PolarBaseView.prototype.cz = function (a) {
        this.cw.g(a);
    };
    PolarBaseView.prototype.cs = function () {
        var _this = this;
        var a = new NumericMarkerManager(0, function (b) { return _this.cw.item(b); }, function (b) { return _this.cu.rb.c.item(b); }, runOn(this, this.c0), runOn(this, this.cr), runOn(this, this.cx));
        a.n = true;
        a.p = runOn(this.cu, this.cu.t0);
        return a;
    };
    PolarBaseView.prototype.c0 = function (a) {
        this.cu.tb(a, this.cw);
    };
    PolarBaseView.prototype.cr = function () {
        return this.cu.qw(this.cw, this.bv, this.bu);
    };
    PolarBaseView.prototype.cx = function () {
        return this.cu.sa(this.cw);
    };
    PolarBaseView.prototype.cy = function (a, b, c, d) {
        if (this.cu.rz) {
            var e = new GeometryGroup();
            this.cu.q9.mo(e, a, b, c, d);
        }
        else {
        }
    };
    PolarBaseView.prototype.c1 = function () {
        if (this.cu.tx != null) {
            this.cu.tw = this.cu.tx;
        }
        else {
            this.cu.tw = this.cu.of;
        }
    };
    PolarBaseView.prototype.cf = function (a) {
        this.cw.f(a);
    };
    PolarBaseView.prototype.a5 = function (a, b) {
        if (a.d) {
            if (this.cu.rq != 0 && !b) {
                var c = this.cv.g$j;
                c.ac = this.cu.sg;
                c._stroke = this.cu.tw;
                c.ad = this.cu.tz;
                c.ai = this.cu.ty;
                a.u(c);
            }
        }
        _super.prototype.a5.call(this, a, b);
    };
    PolarBaseView.prototype.c2 = function () {
        return Rect.empty;
    };
    PolarBaseView.prototype.getDefaultTooltipTemplate = function () {
        var a = "<div class='ui-chart-default-tooltip-content'><span>" + "${item." + this.cu.so + "}" + "</span><br/><span";
        var b = this.e.a4.a$r(this.e);
        if (!stringIsNullOrEmpty(b)) {
            a += " style='color:" + b + "'";
        }
        a += ">" + this.cu.hp + ": </span><span class='ui-priority-primary'>" + "${item." + this.cu.sy + "}</span></div>";
        return a;
    };
    PolarBaseView.$t = markType(PolarBaseView, 'PolarBaseView', MarkerSeriesView.$);
    return PolarBaseView;
}(MarkerSeriesView));
export { PolarBaseView };
//# sourceMappingURL=PolarBase_combined.js.map
