/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends, __values } from "tslib";
import { EventArgs, Base, markType, Point_$type, runOn, typeCast, IList$1_$type, Number_$type, markDep, IEnumerable_$type, Array_$type, delegateCombine, fromEnum, Boolean_$type, enumGetBox, fromEn, String_$type, getInstanceType, INotifyPropertyChanged_$type, PropertyChangedEventArgs, toNullable, TypeRegistrar } from "igniteui-react-core";
import { Brush } from "igniteui-react-core";
import { DataTemplate } from "igniteui-react-core";
import { Visibility_$type } from "igniteui-react-core";
import { DoubleCollection } from "igniteui-react-core";
import { PenLineCap_$type } from "igniteui-react-core";
import { Style } from "igniteui-react-core";
import { MarkerType_$type } from "./MarkerType";
import { HorizontalAnchoredCategorySeries } from "./HorizontalAnchoredCategorySeries";
import { CategoryLineRasterizer } from "./CategoryLineRasterizer";
import { List$1 } from "igniteui-react-core";
import { AnchoredCategorySeries } from "./AnchoredCategorySeries";
import { CategoryAxisBase } from "./CategoryAxisBase";
import { CategorySeries } from "./CategorySeries";
import { CategoryFramePreparer } from "./CategoryFramePreparer";
import { NumericAxisBase } from "./NumericAxisBase";
import { ISupportsMarkers_$type } from "./ISupportsMarkers";
import { CategoryFrame } from "./CategoryFrame";
import { Rect } from "igniteui-react-core";
import { CategorySeriesView } from "./CategorySeriesView";
import { Axis } from "./Axis";
import { ScalerParams } from "./ScalerParams";
import { ObservableCollection$1 } from "igniteui-react-core";
import { AxisRange } from "./AxisRange";
import { AnchoredCategorySeriesView } from "./AnchoredCategorySeriesView";
import { CategoryBucketCalculator } from "./CategoryBucketCalculator";
import { isNaN_, isInfinity, truncate } from "igniteui-react-core";
import { Path } from "igniteui-react-core";
import { ISortingAxis_$type } from "./ISortingAxis";
import { FrameworkElement } from "igniteui-react-core";
import { XamDataChart } from "./XamDataChart";
import { DependencyProperty } from "igniteui-react-core";
import { DependencyObject } from "igniteui-react-core";
import { NumericYAxis } from "./NumericYAxis";
import { Pool$1 } from "igniteui-react-core";
import { Rectangle } from "igniteui-react-core";
import { DataContext } from "igniteui-react-core";
import { Dictionary$2 } from "igniteui-react-core";
import { IScaler_$type } from "./IScaler";
import { IIsCategoryBased_$type } from "./IIsCategoryBased";
import { CategoryMarkerManager } from "./CategoryMarkerManager";
import { PropertyMetadata } from "igniteui-react-core";
import { dateMinValue, dateMaxValue } from "igniteui-react-core";
import { NumericXAxis } from "./NumericXAxis";
import { CategoryYAxis } from "./CategoryYAxis";
import { AnchoredCategoryBucketCalculator } from "./AnchoredCategoryBucketCalculator";
import { IStacked100Series_$type } from "./IStacked100Series";
import { NotImplementedException } from "igniteui-react-core";
import { SplineSeriesBase } from "./SplineSeriesBase";
import { CollisionAvoider } from "./CollisionAvoider";
import { SafeSortedReadOnlyDoubleCollection } from "./SafeSortedReadOnlyDoubleCollection";
import { Numeric } from "igniteui-react-core";
import { ICategoryScaler_$type } from "./ICategoryScaler";
import { CategoryXAxis } from "./CategoryXAxis";
import { IBarSeries_$type } from "./IBarSeries";
import { Color } from "igniteui-react-core";
import { LegendItemBadgeShape_$type } from "./LegendItemBadgeShape";
import { LegendItemBadgeMode_$type } from "./LegendItemBadgeMode";
import { SeriesOutlineMode_$type } from "./SeriesOutlineMode";
import { PropertyUpdatedEventArgs } from "igniteui-react-core";
import { SingleValuesHolder } from "./SingleValuesHolder";
import { stringIsNullOrEmpty } from "igniteui-react-core";
import { SplineSeriesBaseView } from "./SplineSeriesBaseView";
import { Canvas } from "igniteui-react-core";
import { Panel } from "igniteui-react-core";
import { Defaults } from "./Defaults";
import { PlatformConstants } from "igniteui-react-core";
/**
 * @hidden
 */
var StackedSeriesCreatedEventArgs = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(StackedSeriesCreatedEventArgs, _super);
    function StackedSeriesCreatedEventArgs(a) {
        var _this = _super.call(this) || this;
        _this.c = null;
        _this.c = a;
        return _this;
    }
    Object.defineProperty(StackedSeriesCreatedEventArgs.prototype, "brush", {
        get: function () {
            return this.c.hx;
        },
        set: function (a) {
            this.c.hx = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedSeriesCreatedEventArgs.prototype, "legendItemTemplate", {
        get: function () {
            return this.c.fj;
        },
        set: function (a) {
            this.c.fj = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedSeriesCreatedEventArgs.prototype, "legendItemBadgeTemplate", {
        get: function () {
            return this.c.fi;
        },
        set: function (a) {
            this.c.fi = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedSeriesCreatedEventArgs.prototype, "legendItemVisibility", {
        get: function () {
            return this.c.iw;
        },
        set: function (a) {
            this.c.iw = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedSeriesCreatedEventArgs.prototype, "outline", {
        get: function () {
            return this.c.h1;
        },
        set: function (a) {
            this.c.h1 = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedSeriesCreatedEventArgs.prototype, "dashArray", {
        get: function () {
            return this.c.h6;
        },
        set: function (a) {
            this.c.h6 = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedSeriesCreatedEventArgs.prototype, "dashCap", {
        get: function () {
            return this.c.ia;
        },
        set: function (a) {
            this.c.ia = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedSeriesCreatedEventArgs.prototype, "index", {
        get: function () {
            return this.c.br;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedSeriesCreatedEventArgs.prototype, "thickness", {
        get: function () {
            return this.c.bl;
        },
        set: function (a) {
            this.c.bl = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedSeriesCreatedEventArgs.prototype, "title", {
        get: function () {
            return this.c.bv;
        },
        set: function (a) {
            this.c.bv = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedSeriesCreatedEventArgs.prototype, "markerBrush", {
        get: function () {
            return this.c.hy;
        },
        set: function (a) {
            this.c.hy = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedSeriesCreatedEventArgs.prototype, "markerOutline", {
        get: function () {
            return this.c.hz;
        },
        set: function (a) {
            this.c.hz = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedSeriesCreatedEventArgs.prototype, "markerStyle", {
        get: function () {
            return this.c.it;
        },
        set: function (a) {
            this.c.it = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedSeriesCreatedEventArgs.prototype, "markerTemplate", {
        get: function () {
            return this.c.fk;
        },
        set: function (a) {
            this.c.fk = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedSeriesCreatedEventArgs.prototype, "markerType", {
        get: function () {
            return this.c.r;
        },
        set: function (a) {
            this.c.r = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedSeriesCreatedEventArgs.prototype, "markerThickness", {
        get: function () {
            return this.c.be;
        },
        set: function (a) {
            this.c.be = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedSeriesCreatedEventArgs.prototype, "startCap", {
        get: function () {
            return this.c.h9;
        },
        set: function (a) {
            this.c.ic = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedSeriesCreatedEventArgs.prototype, "endCap", {
        get: function () {
            return this.c.h8;
        },
        set: function (a) {
            this.c.ib = a;
        },
        enumerable: false,
        configurable: true
    });
    StackedSeriesCreatedEventArgs.$t = markType(StackedSeriesCreatedEventArgs, 'StackedSeriesCreatedEventArgs', EventArgs.$);
    return StackedSeriesCreatedEventArgs;
}(EventArgs));
export { StackedSeriesCreatedEventArgs };
/**
 * @hidden
 */
var FragmentBase = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(FragmentBase, _super);
    function FragmentBase() {
        var _this = _super.call(this) || this;
        _this.ug = null;
        _this._logicalSeriesLink = null;
        _this.ui = null;
        _this.ug = new CategoryLineRasterizer();
        return _this;
    }
    Object.defineProperty(FragmentBase.prototype, "logicalSeriesLink", {
        get: function () {
            return this._logicalSeriesLink;
        },
        set: function (a) {
            this._logicalSeriesLink = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FragmentBase.prototype, "parentSeries", {
        get: function () {
            return this.ui;
        },
        set: function (a) {
            this.ui = a;
        },
        enumerable: false,
        configurable: true
    });
    FragmentBase.prototype.get_dh = function () {
        return false;
    };
    FragmentBase.prototype.get_dn = function () {
        return true;
    };
    FragmentBase.prototype.i9 = function () {
        if (this.logicalSeriesLink != null) {
            return this.logicalSeriesLink.dk;
        }
        return null;
    };
    FragmentBase.prototype.gz = function () {
        var a = this.parentSeries;
        if (a.g9 == -1 || a.s0 == null || a.s0.f.indexOf(this) == -1) {
            return -1;
        }
        return a.s0.f.indexOf(this);
    };
    FragmentBase.prototype.g3 = function () {
        var a = this.parentSeries;
        if (a.g9 == -1 || a.series.count == 0 || a.series.indexOf(this.logicalSeriesLink) == -1) {
            return -1;
        }
        return a.series.indexOf(this.logicalSeriesLink);
    };
    FragmentBase.prototype.resolveLegendIndex = function () {
        var a = this.parentSeries;
        if (a.s4) {
            return -1 + a.g9 + a.sw.count - a.s0.f.indexOf(this);
        }
        return _super.prototype.resolveLegendIndex.call(this);
    };
    FragmentBase.prototype.be = function () {
        return this.parentSeries;
    };
    FragmentBase.prototype.q2 = function () {
        if (this.parentSeries == null) {
            return null;
        }
        return this.parentSeries.fetchXAxis();
    };
    FragmentBase.prototype.uf = function () {
        if (this.parentSeries == null) {
            return this.q8;
        }
        return this.parentSeries.q8;
    };
    FragmentBase.prototype.rn = function () {
        if (this.parentSeries == null) {
            return null;
        }
        return this.parentSeries.fetchYAxis();
    };
    FragmentBase.prototype.uk = function (a, b, c, d, e, f, g, h) {
        var i = c[0];
        var j = c[1];
        var k = new Rect(0, i - 5, j - 5, 11, 11);
        if (!isNaN_(i) && !isNaN_(j) && !isInfinity(i) && !isInfinity(j) && d.tryAdd(k)) {
            b.m.add({ $type: Point_$type, x: i, y: j });
            a.updateMarkerTemplate(g, f, h);
            return true;
        }
        return false;
    };
    FragmentBase.prototype.si = function (a, b) {
        a.u();
        if (this.valueColumn == null || this.parentSeries == null || this.logicalSeriesLink == null) {
            return;
        }
        if (this.logicalSeriesLink.aq.count == 0 || this.logicalSeriesLink.ap.count == 0) {
            return;
        }
        this.q9(b).d(a, b);
    };
    FragmentBase.prototype.o2 = function (a, b, c) {
        var _this = this;
        return this.o4(a, b, c, this.uf().r(this.q2(), this.bx.bv, this.bx.bu, this.getEffectiveViewport1(this.bx)), this.rn(), this.q2(), runOn(this, this.ul), function (d, e) { return _this.g7(d, e, _this.q2(), runOn(_this, _this.r1), _this.valueColumn != null ? new FragmentBaseValueList(_this) : null); }, function (d, e) { return _this.g5(d, e, _this.q2(), runOn(_this, _this.r1), _this.valueColumn != null ? new FragmentBaseValueList(_this) : null); });
    };
    FragmentBase.prototype.ag = function () {
        return [this.q2(), this.rn()];
    };
    FragmentBase.prototype.ul = function (a, b, c) {
        if (this.ca == null) {
            return NaN;
        }
        var d = this.getEffectiveViewport1(this.bx);
        var e = new ScalerParams(0, this.ca.pg, this.bx.bu, this.q2().cc, d);
        var f = this.q8.r(this.q2(), this.ca.pg, this.bx.bu, d);
        return this.ga(this.valueColumn != null ? new FragmentBaseValueList(this) : null, a, this.q2(), e, f, runOn(this, this.r1), b, c);
    };
    FragmentBase.prototype.un = function (a, b, c) {
        var d = this.s4(c);
        var e = d;
        var f = this.logicalSeriesLink.aj;
        var g = f ? this.parentSeries.s0.e : this.parentSeries.s0.d;
        var h = g.indexOf(this);
        if (a.count == 0) {
            return;
        }
        if (h == -1) {
            return;
        }
        var i = false;
        for (var j = h; j >= 0; j--) {
            if (i) {
                break;
            }
            if (j == 0) {
                a.add({ $type: Point_$type, x: a._inner[a.count - 1].x, y: e });
                a.add({ $type: Point_$type, x: a._inner[0].x, y: e });
                break;
            }
            var k = typeCast(FragmentBase.$, g._inner[j - 1]);
            if (k != null && k.ug != null && k.ug.o.count > 0 && this.bx != null && k.e3(this.bx.bu, this.bx.bv, this.bx)) {
                i = true;
                for (var l = k.ug.o.count - 1; l >= 0; l--) {
                    a.add(k.ug.o._inner[l]);
                }
            }
        }
    };
    FragmentBase.prototype.e3 = function (a, b, c) {
        var d = _super.prototype.e3.call(this, a, b, c);
        var e = typeCast(CategoryAxisBase.$, this.parentSeries.fetchXAxis());
        var f = this.parentSeries.fetchYAxis();
        if (this.parentSeries == null || e == null || e.itemsSource == null || f == null || this.parentSeries.ch == null || e.bh == null || f.bh == null) {
            d = false;
        }
        if (this.valueColumn == null) {
            return false;
        }
        if (isInfinity(this.valueColumn.minimum) && isInfinity(this.valueColumn.maximum)) {
            d = false;
        }
        if (isNaN_(this.valueColumn.minimum) && isNaN_(this.valueColumn.maximum)) {
            d = false;
        }
        return d;
    };
    FragmentBase.prototype.s4 = function (a) {
        var b = 0;
        var c = a.bv;
        var d = a.bu;
        var e = this.getEffectiveViewport1(a);
        var f = new ScalerParams(0, c, d, this.yAxis.cc, e);
        f.b = this.f2();
        if (!c.isEmpty && !d.isEmpty && this.yAxis != null) {
            b = this.yAxis.d8(0, f);
        }
        return b;
    };
    FragmentBase.prototype.ap = function (a) {
        return null;
    };
    FragmentBase.prototype.um = function () {
        if (this.parentSeries == null) {
            return -1;
        }
        var a = this.parentSeries.g9;
        var b = 0;
        var c = 1;
        if (this.parentSeries.s4) {
            b = this.parentSeries.sw.count - 1;
            c = -1;
        }
        for (var d = b; this.parentSeries.s4 ? d >= 0 : d < this.parentSeries.sw.count; d += c) {
            var e = this.parentSeries.sw._inner[d];
            if (e.visualSeriesLink == this) {
                return a;
            }
            if (this.parentSeries.a0 == null || e.iv != 0 || e.iu != 0) {
                continue;
            }
            a++;
        }
        return -1;
    };
    FragmentBase.prototype.uo = function (a) {
        if (a == null) {
        }
    };
    FragmentBase.prototype.lm = function (a, b, c, d) {
        _super.prototype.lm.call(this, a, b, c, d);
        if (this.parentSeries == null) {
            return;
        }
        var e = typeCast(NumericAxisBase.$, this.parentSeries.fetchYAxis());
        if (e == null) {
            return;
        }
        switch (b) {
            case "ValueColumn":
                if (this.sv.c3) {
                    this.sv.c2.g$i();
                }
                if (e != null && !e.cv()) {
                    this.parentSeries.sv().cr.g(this.gh);
                    this.l0(false);
                }
                break;
            case "ActualBrush":
                if (this.logicalSeriesLink != null) {
                    this.logicalSeriesLink.hs = this.of;
                }
                break;
        }
    };
    FragmentBase.prototype.l2 = function (a, b) {
        _super.prototype.l2.call(this, a, b);
    };
    Object.defineProperty(FragmentBase.prototype, "useHighMarkerFidelity", {
        get: function () {
            return this.ry;
        },
        enumerable: false,
        configurable: true
    });
    FragmentBase.$t = markType(FragmentBase, 'FragmentBase', HorizontalAnchoredCategorySeries.$);
    return FragmentBase;
}(HorizontalAnchoredCategorySeries));
export { FragmentBase };
/**
 * @hidden
 */
var AreaFragment = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(AreaFragment, _super);
    function AreaFragment() {
        var _this = _super.call(this) || this;
        _this.ab = AreaFragment.$;
        return _this;
    }
    AreaFragment.prototype.bu = function () {
        return new AreaFragmentView(this);
    };
    AreaFragment.prototype.lh = function (a) {
        _super.prototype.lh.call(this, a);
        this.up = a;
    };
    AreaFragment.prototype.get_c8 = function () {
        return true;
    };
    AreaFragment.prototype.get_c7 = function () {
        return true;
    };
    AreaFragment.prototype.ur = function (a, b) {
        var c = this.up.dg.ak;
        if (this.er(a, c)) {
            return true;
        }
        var d = this.up.dh.ak;
        if (this.er(a, d)) {
            return true;
        }
        return false;
    };
    AreaFragment.prototype.ep = function (a, b) {
        if (this.uq(a, b)) {
            return true;
        }
        if (this.ur(a, b)) {
            return true;
        }
        if (this.pu(a, b)) {
            return true;
        }
        return false;
    };
    AreaFragment.prototype.uq = function (a, b) {
        var c = this.up.di.ak;
        if (this.eq(a, b, c)) {
            return true;
        }
        var d = this.up.dj.ak;
        if (this.eq(a, b, d)) {
            return true;
        }
        return false;
    };
    AreaFragment.prototype.preferredCategoryMode = function (a) {
        return 0;
    };
    AreaFragment.prototype.kh = function (a, b) {
        _super.prototype.kh.call(this, a, b);
        var c = b;
        c.db();
    };
    AreaFragment.prototype.sl = function (a, b) {
        var _this = this;
        _super.prototype.sl.call(this, a, b);
        this.ug.a = typeCast(ISortingAxis_$type, this.xAxis) !== null ? true : false;
        var c = typeCast(AreaFragmentView.$, b);
        var d = a.f;
        var e = this.getEffectiveViewport1(c);
        this.rb.a0(this, this.rv(), runOn(this, this.qw), this.r3(b), this.r4(b));
        var f = false;
        var g = this.rb.b;
        if (g != null) {
            f = true;
        }
        if (f) {
            var h = new ScalerParams(0, b.bv, b.bu, this.tw.cc, e);
            this.sh(d, -1, this.valueColumn.count, this.tw, h, b.q);
        }
        this.rb.ad(c.di, true, false, true, true);
        this.rb.ad(c.dj, true, false, true, true);
        this.rb.ad(c.dg, false, true, false, false);
        this.rb.ad(c.dh, false, true, false, false);
        var i = c.cr.d;
        this.ug.i(c.dg, c.di, c.dh, c.dj, a.f.count, a.f, true, i, this.gh, function (j, k, l, m, n) { return _this.un(j, a.f, b); }, 0);
        c.dg._opacity = this.rb.j * this.fi;
        c.dh._opacity = 0.5 * this.rb.j * this.fi;
    };
    AreaFragment.prototype.ma = function () {
        var a = (typeCast(XamDataChart.$, this.ca));
        if (a != null) {
            this.fi = isNaN_(this.fq) ? this.parentSeries.fi : this.fq;
        }
    };
    Object.defineProperty(AreaFragment.prototype, "useHighMarkerFidelity", {
        get: function () {
            return this.ry;
        },
        enumerable: false,
        configurable: true
    });
    AreaFragment.$t = markType(AreaFragment, 'AreaFragment', FragmentBase.$);
    return AreaFragment;
}(FragmentBase));
export { AreaFragment };
/**
 * @hidden
 */
var ColumnFragment = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(ColumnFragment, _super);
    function ColumnFragment() {
        var _this = _super.call(this) || this;
        _this.ab = ColumnFragment.$;
        return _this;
    }
    ColumnFragment.prototype.get_db = function () {
        return true;
    };
    ColumnFragment.prototype.get_dw = function () {
        return true;
    };
    ColumnFragment.prototype.bu = function () {
        return new ColumnFragmentView(this);
    };
    ColumnFragment.prototype.lh = function (a) {
        _super.prototype.lh.call(this, a);
        this.uq = a;
    };
    Object.defineProperty(ColumnFragment.prototype, "fragmentXAxis", {
        get: function () {
            return this.parentSeries != null ? typeCast(CategoryAxisBase.$, this.parentSeries.fetchXAxis()) : null;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ColumnFragment.prototype, "fragmentYAxis", {
        get: function () {
            return this.parentSeries != null ? typeCast(NumericYAxis.$, this.parentSeries.fetchYAxis()) : null;
        },
        enumerable: false,
        configurable: true
    });
    ColumnFragment.prototype.preferredCategoryMode = function (a) {
        return 2;
    };
    ColumnFragment.prototype.q2 = function () {
        return this.fragmentXAxis;
    };
    ColumnFragment.prototype.rn = function () {
        return this.fragmentYAxis;
    };
    ColumnFragment.prototype.get_cy = function () {
        return true;
    };
    ColumnFragment.prototype.fetchXAxis = function () {
        return null;
    };
    ColumnFragment.prototype.fetchYAxis = function () {
        return null;
    };
    ColumnFragment.prototype.kh = function (a, b) {
        _super.prototype.kh.call(this, a, b);
        var c = b;
        if (a && c.db != null) {
            this.q3.m.clear();
            c.db.count = 0;
        }
    };
    ColumnFragment.prototype.ap = function (a) {
        if (this.valueColumn == null || this.valueColumn.count == 0) {
            return null;
        }
        return new AxisRange(this.valueColumn.minimum, this.valueColumn.maximum);
    };
    ColumnFragment.prototype.e3 = function (a, b, c) {
        if (this.parentSeries == null) {
            return false;
        }
        return this.parentSeries.s5(this, a, b, this.us(c));
    };
    ColumnFragment.prototype.e0 = function () {
        return true;
    };
    ColumnFragment.prototype.r3 = function (a) {
        if (this.parentSeries != null) {
            return this.parentSeries.r3(this.parentSeries.bx);
        }
        return _super.prototype.r3.call(this, a);
    };
    ColumnFragment.prototype.r4 = function (a) {
        if (this.parentSeries != null) {
            return this.parentSeries.r4(this.parentSeries.bx);
        }
        return _super.prototype.r3.call(this, a);
    };
    ColumnFragment.prototype.r5 = function (a) {
        if (this.parentSeries != null) {
            return this.parentSeries.r5(this.parentSeries.bx);
        }
        return _super.prototype.r5.call(this, a);
    };
    ColumnFragment.prototype.pb = function (a) {
        if (this.q2() == null || this.fragmentYAxis == null) {
            return Rect.empty;
        }
        var b = this.ox(a);
        var c = this.bx.bv;
        var d = this.bx.bu;
        var e = this.getEffectiveViewport1(this.bx);
        var f = new ScalerParams(0, c, d, this.fragmentYAxis.cc, e);
        var g = this.aj(this.q2(), this.q3.f, this.r3(this.bx), this.r4(this.bx), a, true);
        if (g == null) {
            return Rect.empty;
        }
        var h = g[0];
        var i = g[1];
        var j = Math.abs(b.x - h[0]);
        var k = Math.abs(b.x - i[0]);
        var l = this.q2().ki(c, d, e);
        if (j < k) {
            var m = h[0] - 0.5 * l;
            var n = h[1];
            var o = h[2];
            return new Rect(0, m, Math.min(n, o), l, Math.max(n, o) - Math.min(n, o));
        }
        else {
            var p = i[0] - 0.5 * l;
            var q = i[1];
            var r = i[2];
            return new Rect(0, p, Math.min(q, r), l, Math.max(q, r) - Math.min(q, r));
        }
    };
    ColumnFragment.prototype.ep = function (a, b) {
        if (this.es(a, b)) {
            return true;
        }
        if (this.pu(a, b)) {
            return true;
        }
        return false;
    };
    ColumnFragment.prototype.es = function (a, b) {
        var c = this.pc(a);
        if (c.isEmpty) {
            return false;
        }
        var d = this.uz(c, this.fz(b));
        return d.containsPoint(a);
    };
    ColumnFragment.prototype.uz = function (a, b) {
        var c = a.left + a.width / 2;
        var d = a.top + a.height / 2;
        var e = c - ((a.width / 2) + b);
        var f = d - (a.height / 2);
        var g = a.height;
        var h = a.width + b * 2;
        return new Rect(0, e, f, h, g);
    };
    ColumnFragment.prototype.hn = function (a, b) {
        var c = typeCast(FrameworkElement.$, a);
        var d = c != null ? typeCast(DataContext.$, c.dataContext) : null;
        var e = d != null ? d.item : null;
        if (e == null) {
            var f = this.bx.bu;
            var g = this.ca != null ? this.ca.pg : Rect.empty;
            var h = { $type: Point_$type, x: g.left + g.width * (b.x - f.left) / f.width, y: g.top + g.height * (b.y - f.top) / f.height };
            e = this.hh(h);
        }
        return e;
    };
    ColumnFragment.prototype.hh = function (a) {
        var b = 0;
        if (typeCast(ISortingAxis_$type, this.q2()) !== null) {
            b = this.g2(a);
            if (b == -1) {
                return null;
            }
        }
        else {
            b = this.g0(a);
        }
        return b >= 0 && this.ch != null && b < this.ch.count ? this.ch.item(b) : null;
    };
    ColumnFragment.prototype.g2 = function (a) {
        var b = this.bx.bv;
        var c = this.bx.bu;
        var d = this.getEffectiveViewport1(this.bx);
        if (b.isEmpty || c.isEmpty) {
            return -1;
        }
        var e = this.q2();
        var f = new ScalerParams(0, b, c, e.cc, d);
        var g = typeCast(ISortingAxis_$type, this.fragmentXAxis);
        var h = this.o7(this.bx);
        var i = e.eb(h.left, f);
        var j = e.eb(h.right, f);
        var k = (a.x - b.left) / b.width;
        var l = i + ((j - i) * k);
        if (truncate(l) <= dateMinValue().getTime() || truncate(l) >= dateMaxValue().getTime()) {
            return -1;
        }
        var m = g.i$f(l);
        return m;
    };
    ColumnFragment.prototype.g0 = function (a) {
        if (this.parentSeries == null) {
            return -1;
        }
        return this.parentSeries.tb(a);
    };
    ColumnFragment.prototype.uk = function (a, b, c, d, e, f, g, h) {
        var i = 0;
        var j = c[0];
        var k = e < i ? c[2] : c[1];
        var l = new Rect(0, j - 5, k - 5, 11, 11);
        if (!isNaN_(j) && !isNaN_(k) && !isInfinity(j) && !isInfinity(k) && d.tryAdd(l)) {
            b.m.add({ $type: Point_$type, x: j, y: k });
            a.updateMarkerTemplate(g, f, h);
            return true;
        }
        return false;
    };
    ColumnFragment.prototype.us = function (a) {
        if (a.p) {
            return this.parentSeries.a4.a$h.item(a.ad);
        }
        else if (a == this.bw) {
            return this.parentSeries.bw;
        }
        else {
            return this.parentSeries.rc;
        }
    };
    ColumnFragment.prototype.lz = function (a, b, c, d, e) {
        this.a4.a$t(this, a, b, d, e);
        var f = this.a4.a$h.item(d);
        var g = f;
        f.a1(c);
        var h = this.us(f);
        h.cr.g(this.gh);
        if (this.ct(g)) {
            return;
        }
        if (this.sw == null) {
            this.sw = new CategoryFrame(3);
        }
        this.sw.u();
        this.si(this.sw, g);
        this.sl(this.sw, g);
    };
    ColumnFragment.prototype.si = function (a, b) {
        a.u();
        if (this.valueColumn == null || this.parentSeries == null || this.logicalSeriesLink == null || this.logicalSeriesLink.ap.count == 0 || this.logicalSeriesLink.aq.count == 0) {
            return;
        }
        var c;
        if (b.p) {
            c = this.parentSeries.su;
        }
        else if (b == this.bw) {
            c = this.parentSeries.q6;
        }
        else {
            c = this.parentSeries.q3;
        }
        var d = typeCast(CategorySeriesView.$, this.us(b));
        a.f.clear();
        a.m.clear();
        var e = d.cr.e;
        var f = d.cr.f;
        var g = this.parentSeries.q8.h.yScaler;
        var h = typeCast(ISortingAxis_$type, this.parentSeries.q8.h.scaler);
        var i = typeCast(NumericAxisBase.$, g) !== null && g.kl;
        var j = typeCast(StackedBucketCalculator.$, d.cr);
        var k = d.cr.d;
        var l = 0;
        for (var m = e; m <= f; m++) {
            var n = m * k;
            if (this._visibility != 0) {
                break;
            }
            if (m >= this.valueColumn.count || m >= c.f.count + e) {
                continue;
            }
            var o = this.valueColumn.item(m);
            var p = !i || (i && o > 0);
            var q = void 0;
            if (h == null) {
                q = j.getBucket1(this, m, m, b.bv, b.bu, c);
            }
            else {
                q = j.getBucket1(this, m, h.i$b._inner[m], b.bv, b.bu, c);
            }
            a.f.add(q);
            if (p) {
                if (this.uk(b, a, q, this.q8.h.provideCollisionDetector(), o, n, l, a.f.count - 1)) {
                    l++;
                }
            }
        }
        b.cu.count = l;
    };
    ColumnFragment.prototype.sl = function (a, b) {
        _super.prototype.sl.call(this, a, b);
        if (this.parentSeries == null) {
            return;
        }
        this.parentSeries.tk(this, a, b);
        CategoryMarkerManager.e(this, a.m, b.cu, this.pv);
    };
    ColumnFragment.prototype.lm = function (a, b, c, d) {
        _super.prototype.lm.call(this, a, b, c, d);
    };
    Object.defineProperty(ColumnFragment.prototype, "useHighMarkerFidelity", {
        get: function () {
            return this.ry;
        },
        enumerable: false,
        configurable: true
    });
    ColumnFragment.$t = markType(ColumnFragment, 'ColumnFragment', FragmentBase.$);
    ColumnFragment.$$p = markDep(DependencyProperty, PropertyMetadata, ColumnFragment, 'raisePropertyChanged', ['RadiusX:ut:ux', [1, 0], 'RadiusY:uu:uy', [1, 0]]);
    return ColumnFragment;
}(FragmentBase));
export { ColumnFragment };
/**
 * @hidden
 */
var BarFragment = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(BarFragment, _super);
    function BarFragment() {
        var _this = _super.call(this) || this;
        _this.ab = BarFragment.$;
        return _this;
    }
    BarFragment.prototype.get_c9 = function () {
        return true;
    };
    BarFragment.prototype.get_dw = function () {
        return true;
    };
    BarFragment.prototype.get_db = function () {
        return false;
    };
    Object.defineProperty(BarFragment.prototype, "barFragmentXAxis", {
        get: function () {
            return this.parentSeries != null ? this.parentSeries.xAxis : null;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(BarFragment.prototype, "barFragmentYAxis", {
        get: function () {
            return this.parentSeries != null ? this.parentSeries.yAxis : null;
        },
        enumerable: false,
        configurable: true
    });
    BarFragment.prototype.q2 = function () {
        if (this.parentSeries == null) {
            return null;
        }
        return this.parentSeries.fetchYAxis();
    };
    BarFragment.prototype.get_isVertical = function () {
        return true;
    };
    BarFragment.prototype.fw = function (a) {
        var b = this.ca != null ? this.ca.pg : Rect.empty;
        var c = this.bx.bu;
        var d = this.o7(this.bx);
        var e = this.getEffectiveViewport1(this.bx);
        var f = this.q2();
        var g = -1;
        if (f != null && !b.isEmpty && !c.isEmpty) {
            var h = new ScalerParams(0, b, c, f.cc, e);
            var i = f.eb(d.top, h);
            var j = f.eb(d.bottom, h);
            var k = (a.y - b.top) / b.height;
            var l = i + (k * (j - i));
            if (f.categoryMode != 0) {
                l -= 0.5;
            }
            g = l;
        }
        return g;
    };
    BarFragment.prototype.rn = function () {
        if (this.parentSeries == null) {
            return null;
        }
        return this.parentSeries.rn();
    };
    BarFragment.prototype.uz = function (a, b) {
        var c = a.left + a.width / 2;
        var d = a.top + a.height / 2;
        var e = c - (a.width / 2);
        var f = d - ((a.height / 2) + b);
        var g = a.height + b * 2;
        var h = a.width;
        return new Rect(0, e, f, h, g);
    };
    BarFragment.prototype.pb = function (a) {
        if (this.q2() == null) {
            return Rect.empty;
        }
        var b = this.ox(a);
        var c = this.bx.bv;
        var d = this.bx.bu;
        var e = this.getEffectiveViewport1(this.bx);
        var f = this.q2();
        var g = new ScalerParams(0, c, d, f.cc, e);
        var h = this.aj(this.q2(), this.q3.f, this.r3(this.bx), this.r4(this.bx), a, true);
        if (h == null) {
            return Rect.empty;
        }
        var i = h[0];
        var j = h[1];
        var k = Math.abs(b.y - i[0]);
        var l = Math.abs(b.y - j[0]);
        var m = f.ki(c, d, e);
        if (k < l) {
            var n = i[0] - 0.5 * m;
            var o = i[2];
            var p = i[1];
            return new Rect(0, o, n, Math.max(p, o) - Math.min(p, o), m);
        }
        else {
            var q = j[0] - 0.5 * m;
            var r = j[2];
            var s = j[1];
            return new Rect(0, r, q, Math.max(s, r) - Math.min(s, r), m);
        }
    };
    BarFragment.prototype.ep = function (a, b) {
        if (this.es(a, b)) {
            return true;
        }
        if (this.pu(a, b)) {
            return true;
        }
        return false;
    };
    BarFragment.prototype.uk = function (a, b, c, d, e, f, g, h) {
        var i = c[0];
        var j = e < 0 ? c[2] : c[1];
        var k = new Rect(0, j - 5, i - 5, 11, 11);
        if (!isNaN_(j) && !isNaN_(i) && !isInfinity(j) && !isInfinity(i) && d.tryAdd(k)) {
            b.m.add({ $type: Point_$type, x: j, y: i });
            a.updateMarkerTemplate(g, f, h);
            return true;
        }
        return false;
    };
    BarFragment.prototype.hh = function (a) {
        var b = 0;
        if (typeCast(ISortingAxis_$type, this.barFragmentYAxis) !== null) {
            b = this.g2(a);
            if (b == -1) {
                return null;
            }
        }
        else {
            b = this.g0(a);
        }
        return b >= 0 && this.ch != null && b < this.ch.count ? this.ch.item(b) : null;
    };
    BarFragment.prototype.g2 = function (a) {
        var b = this.bx.bv;
        var c = this.bx.bu;
        if (b.isEmpty || c.isEmpty) {
            return -1;
        }
        var d = this.getEffectiveViewport1(this.bx);
        var e = new ScalerParams(0, b, c, this.barFragmentYAxis.cc, d);
        var f = typeCast(ISortingAxis_$type, this.barFragmentYAxis);
        var g = this.o7(this.bx);
        var h = this.barFragmentYAxis.eb(g.top, e);
        var i = this.barFragmentYAxis.eb(g.bottom, e);
        var j = (a.y - b.top) / b.height;
        var k = h + ((i - h) * j);
        if (truncate(k) <= dateMinValue().getTime() || truncate(k) >= dateMaxValue().getTime()) {
            return -1;
        }
        var l = f.i$f(k);
        return l;
    };
    BarFragment.prototype.s4 = function (a) {
        var b = 0;
        var c = a.bv;
        var d = a.bu;
        var e = this.getEffectiveViewport1(a);
        var f = new ScalerParams(0, c, d, this.barFragmentXAxis.cc, e);
        if (!c.isEmpty && !d.isEmpty && this.barFragmentXAxis != null) {
            b = this.barFragmentXAxis.d8(0, f);
        }
        return b;
    };
    BarFragment.prototype.lm = function (a, b, c, d) {
        _super.prototype.lm.call(this, a, b, c, d);
        if (this.parentSeries == null || this.barFragmentXAxis == null) {
            return;
        }
        var e = this.barFragmentXAxis;
        switch (b) {
            case "ValueColumn":
                if (this.sv.c3) {
                    this.sv.c2.g$i();
                }
                if (e != null && !e.cv()) {
                    this.parentSeries.sv().cr.g(this.gh);
                    this.l0(false);
                }
                break;
        }
    };
    Object.defineProperty(BarFragment.prototype, "useHighMarkerFidelity", {
        get: function () {
            return this.ry;
        },
        enumerable: false,
        configurable: true
    });
    BarFragment.$t = markType(BarFragment, 'BarFragment', ColumnFragment.$);
    return BarFragment;
}(ColumnFragment));
export { BarFragment };
/**
 * @hidden
 */
var AreaFragmentBucketCalculator = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(AreaFragmentBucketCalculator, _super);
    function AreaFragmentBucketCalculator(a) {
        return _super.call(this, a) || this;
    }
    AreaFragmentBucketCalculator.prototype.getBucketWithoutUnknowns = function (a) {
        return this.getBucket(a);
    };
    AreaFragmentBucketCalculator.prototype.getBucket = function (a) {
        var b = Math.min(a * this.d, this.i.c0.valueColumn.count - 1);
        var c = Math.min(b + this.d - 1, this.i.c0.valueColumn.count - 1);
        var d = NaN;
        var e = NaN;
        var f = this.i.c0;
        var g = f.parentSeries;
        var h = typeCast(IStacked100Series_$type, g) !== null;
        var i = this.i.c0.valueColumn;
        var j = g.ss;
        var k = g.st;
        var l = f.logicalSeriesLink.aq;
        var m = f.logicalSeriesLink.ap;
        for (var n = b; n <= c; ++n) {
            var o = i.item(n);
            if (isNaN_(o) || isInfinity(o)) {
                o = 0;
            }
            var p = Math.abs(k[n]) + j[n];
            if (h) {
                if (p == 0) {
                    o = 0;
                }
                else if (o < 0) {
                    o = (l._inner[n] + o) / p * 100;
                }
                else {
                    o = (m._inner[n] + o) / p * 100;
                }
            }
            else {
                o = o < 0 ? l._inner[n] + o : m._inner[n] + o;
            }
            if (!isNaN_(d)) {
                if (!isNaN_(o)) {
                    d = Math.min(d, o);
                    e = Math.max(e, o);
                }
            }
            else {
                d = o;
                e = o;
            }
        }
        if (!isNaN_(d)) {
            return [0.5 * (b + c), d, e];
        }
        return [0.5 * (b + c), NaN, NaN];
    };
    AreaFragmentBucketCalculator.$t = markType(AreaFragmentBucketCalculator, 'AreaFragmentBucketCalculator', AnchoredCategoryBucketCalculator.$);
    return AreaFragmentBucketCalculator;
}(AnchoredCategoryBucketCalculator));
export { AreaFragmentBucketCalculator };
/**
 * @hidden
 */
var LineFragmentBucketCalculator = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(LineFragmentBucketCalculator, _super);
    function LineFragmentBucketCalculator(a) {
        return _super.call(this, a) || this;
    }
    LineFragmentBucketCalculator.prototype.getBucketWithoutUnknowns = function (a) {
        return this.getBucket(a);
    };
    LineFragmentBucketCalculator.prototype.getBucket = function (a) {
        var b = Math.min(a * this.d, this.i.c0.valueColumn.count - 1);
        var c = Math.min(b + this.d - 1, this.i.c0.valueColumn.count - 1);
        var d = NaN;
        var e = NaN;
        var f = typeCast(FragmentBase.$, this.i.c0);
        var g = f.parentSeries;
        for (var h = b; h <= c; ++h) {
            var i = this.i.c0.valueColumn.item(h);
            var j = Math.abs(g.st[h]) + g.ss[h];
            if (isNaN_(i) || isInfinity(i)) {
                i = 0;
            }
            if (typeCast(IStacked100Series_$type, g) !== null) {
                if (j == 0) {
                    i = 0;
                }
                else if (i < 0) {
                    i = (f.logicalSeriesLink.aq._inner[h] + i) / j * 100;
                }
                else {
                    i = (f.logicalSeriesLink.ap._inner[h] + i) / j * 100;
                }
            }
            else {
                i = i < 0 ? f.logicalSeriesLink.aq._inner[h] + i : f.logicalSeriesLink.ap._inner[h] + i;
            }
            if (!isNaN_(d)) {
                if (!isNaN_(i)) {
                    d = Math.min(d, i);
                    e = Math.max(e, i);
                }
            }
            else {
                d = i;
                e = i;
            }
        }
        if (!isNaN_(d)) {
            return [0.5 * (b + c), d, e];
        }
        return [0.5 * (b + c), NaN, NaN];
    };
    LineFragmentBucketCalculator.$t = markType(LineFragmentBucketCalculator, 'LineFragmentBucketCalculator', AnchoredCategoryBucketCalculator.$);
    return LineFragmentBucketCalculator;
}(AnchoredCategoryBucketCalculator));
export { LineFragmentBucketCalculator };
/**
 * @hidden
 */
var SplineFragmentBucketCalculator = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(SplineFragmentBucketCalculator, _super);
    function SplineFragmentBucketCalculator(a) {
        return _super.call(this, a) || this;
    }
    SplineFragmentBucketCalculator.prototype.getBucket = function (a) {
        var b = Math.min(a * this.d, this.i.c0.valueColumn.count - 1);
        var c = Math.min(b + this.d - 1, this.i.c0.valueColumn.count - 1);
        var d = NaN;
        var e = NaN;
        var f = typeCast(SplineFragmentBase.$, this.i.c0);
        var g = f.parentSeries;
        for (var h = b; h <= c; ++h) {
            var i = this.i.c0.valueColumn.item(h);
            var j = Math.abs(g.st[h]) + g.ss[h];
            if (isNaN_(i) || isInfinity(i)) {
                i = 0;
            }
            if (typeCast(IStacked100Series_$type, g) !== null) {
                if (j == 0) {
                    i = 0;
                }
                else if (i < 0) {
                    i = (f.logicalSeriesLink.aq._inner[h] + i) / j * 100;
                }
                else {
                    i = (f.logicalSeriesLink.ap._inner[h] + i) / j * 100;
                }
            }
            else {
                i = i < 0 ? f.logicalSeriesLink.aq._inner[h] + i : f.logicalSeriesLink.ap._inner[h] + i;
            }
            if (!isNaN_(d)) {
                if (!isNaN_(i)) {
                    d = Math.min(d, i);
                    e = Math.max(e, i);
                }
            }
            else {
                d = i;
                e = i;
            }
        }
        if (!isNaN_(d)) {
            return [0.5 * (b + c), d, e];
        }
        return [0.5 * (b + c), NaN, NaN];
    };
    SplineFragmentBucketCalculator.$t = markType(SplineFragmentBucketCalculator, 'SplineFragmentBucketCalculator', AnchoredCategoryBucketCalculator.$);
    return SplineFragmentBucketCalculator;
}(AnchoredCategoryBucketCalculator));
export { SplineFragmentBucketCalculator };
/**
 * @hidden
 */
var StackedBucketCalculator = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(StackedBucketCalculator, _super);
    function StackedBucketCalculator(a) {
        return _super.call(this, a) || this;
    }
    StackedBucketCalculator.prototype.getBucket = function (a) {
        var b = typeCast(StackedSeriesBase.$, this.c.ct);
        var c = Math.min(b.st != null ? b.st.length : 0, b.ss != null ? b.ss.length : 0);
        var d = Math.min(a * this.d, c - 1);
        var e = Math.min(d + this.d - 1, c - 1);
        var f = NaN;
        var g = NaN;
        for (var h = d; h <= e; ++h) {
            var i = Math.min(b.st[h], b.ss[h]);
            var j = Math.max(b.st[h], b.ss[h]);
            if (!isNaN_(f)) {
                if (!isNaN_(i)) {
                    f = Math.min(f, i);
                    g = Math.max(g, i);
                }
                if (!isNaN_(j)) {
                    f = Math.min(f, j);
                    g = Math.max(g, j);
                }
            }
            else {
                f = i;
                g = j;
            }
        }
        if (!isNaN_(f) && !isNaN_(g)) {
            return [0.5 * (d + e), f, g];
        }
        return [NaN, NaN, NaN];
    };
    StackedBucketCalculator.prototype.getBucket1 = function (a, b, c, d, e, f) {
        return null;
    };
    StackedBucketCalculator.$t = markType(StackedBucketCalculator, 'StackedBucketCalculator', CategoryBucketCalculator.$);
    return StackedBucketCalculator;
}(CategoryBucketCalculator));
export { StackedBucketCalculator };
/**
 * @hidden
 */
var StackedBarBucketCalculator = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(StackedBarBucketCalculator, _super);
    function StackedBarBucketCalculator(a) {
        return _super.call(this, a) || this;
    }
    StackedBarBucketCalculator.prototype.g = function (a) {
        var b = this.c.bv;
        var c = this.c.bu;
        var d = typeCast(StackedBarSeries.$, this.c.ct);
        var e = this.c.ct.ch;
        if (b.isEmpty || c.isEmpty || d.yAxis == null || e == null || e.count == 0) {
            this.d = 0;
            return;
        }
        var f = d.getEffectiveViewport1(this.c);
        var g = new ScalerParams(0, b, c, d.yAxis.cc, f);
        var h = d.o7(this.c);
        var i = Math.floor(d.yAxis.ec(h.top, g, 0));
        var j = Math.ceil(d.yAxis.ec(h.bottom, g, 0));
        if (!d.yAxis.cc) {
            j = Math.ceil(d.yAxis.ec(h.top, g, 0));
            i = Math.floor(d.yAxis.ec(h.bottom, g, 0));
        }
        var k = Math.floor((j - i + 1) * a / h.height);
        this.d = truncate(Math.max(1, k));
        this.e = truncate(Math.max(0, Math.floor(i / this.d) - 1));
        this.f = truncate(Math.ceil(j / this.d));
    };
    StackedBarBucketCalculator.prototype.getBucket = function (a) {
        return _super.prototype.getBucket.call(this, a);
    };
    StackedBarBucketCalculator.prototype.getBucket1 = function (a, b, c, d, e, f) {
        var g = [NaN, NaN, NaN];
        var h = typeCast(BarFragment.$, a);
        if (h == null || h.logicalSeriesLink == null) {
            return g;
        }
        var i = typeCast(StackedBarSeries.$, this.c.ct);
        var j = a.valueColumn.item(c);
        var k = 0;
        var l = NaN;
        var m = NaN;
        var n = Number.NEGATIVE_INFINITY;
        var o = Number.POSITIVE_INFINITY;
        var p = i.getEffectiveViewport1(this.c);
        var q = Math.min(i.st != null ? i.st.length : 0, i.ss != null ? i.ss.length : 0);
        var r = c * this.d;
        var s = Math.min(r + this.d - 1, q - 1);
        for (var t = r; t <= s; ++t) {
            j = a.valueColumn.item(t);
            if (j < k) {
                o = Math.min(o, h.logicalSeriesLink.aq._inner[t] + j);
                n = Math.max(n, h.logicalSeriesLink.aq._inner[t]);
            }
            else {
                o = Math.min(o, h.logicalSeriesLink.ap._inner[t]);
                n = Math.max(n, h.logicalSeriesLink.ap._inner[t] + j);
            }
            if (!isNaN_(l)) {
                if (!isNaN_(o)) {
                    l = Math.min(l, o);
                    m = Math.max(m, o);
                }
                if (!isNaN_(n)) {
                    l = Math.min(l, n);
                    m = Math.max(m, n);
                }
            }
            else {
                l = o;
                m = n;
            }
        }
        var u = new ScalerParams(0, d, e, i.xAxis.cc, p);
        g = [f.f._inner[b - this.e][0], i.xAxis.d8(m, u), i.xAxis.d8(l, u)];
        return g;
    };
    StackedBarBucketCalculator.$t = markType(StackedBarBucketCalculator, 'StackedBarBucketCalculator', StackedBucketCalculator.$);
    return StackedBarBucketCalculator;
}(StackedBucketCalculator));
export { StackedBarBucketCalculator };
/**
 * @hidden
 */
var StackedColumnBucketCalculator = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(StackedColumnBucketCalculator, _super);
    function StackedColumnBucketCalculator(a) {
        return _super.call(this, a) || this;
    }
    StackedColumnBucketCalculator.prototype.getBucket = function (a) {
        return _super.prototype.getBucket.call(this, a);
    };
    StackedColumnBucketCalculator.prototype.getBucket1 = function (a, b, c, d, e, f) {
        var g = [NaN, NaN, NaN];
        var h = typeCast(ColumnFragment.$, a);
        if (h == null || h.logicalSeriesLink == null) {
            return g;
        }
        var i = typeCast(StackedColumnSeries.$, this.c.ct);
        var j = a.valueColumn.item(c);
        var k = 0;
        var l = NaN;
        var m = NaN;
        var n = Number.NEGATIVE_INFINITY;
        var o = Number.POSITIVE_INFINITY;
        var p = i.getEffectiveViewport1(this.c);
        var q = Math.min(i.st != null ? i.st.length : 0, i.ss != null ? i.ss.length : 0);
        var r = c * this.d;
        var s = Math.min(r + this.d - 1, q - 1);
        for (var t = r; t <= s; ++t) {
            j = a.valueColumn.item(t);
            if (j < k) {
                o = Math.min(o, h.logicalSeriesLink.aq._inner[t] + j);
                n = Math.max(n, h.logicalSeriesLink.aq._inner[t]);
            }
            else {
                o = Math.min(o, h.logicalSeriesLink.ap._inner[t]);
                n = Math.max(n, h.logicalSeriesLink.ap._inner[t] + j);
            }
            if (!isNaN_(l)) {
                if (!isNaN_(o)) {
                    l = Math.min(l, o);
                    m = Math.max(m, o);
                }
                if (!isNaN_(n)) {
                    l = Math.min(l, n);
                    m = Math.max(m, n);
                }
            }
            else {
                l = o;
                m = n;
            }
        }
        var u = new ScalerParams(0, d, e, i.yAxis.cc, p);
        g = [f.f._inner[b - this.e][0], i.yAxis.d8(m, u), i.yAxis.d8(l, u)];
        return g;
    };
    StackedColumnBucketCalculator.$t = markType(StackedColumnBucketCalculator, 'StackedColumnBucketCalculator', StackedBucketCalculator.$);
    return StackedColumnBucketCalculator;
}(StackedBucketCalculator));
export { StackedColumnBucketCalculator };
/**
 * @hidden
 */
var FragmentBaseValueList = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(FragmentBaseValueList, _super);
    function FragmentBaseValueList(a) {
        var _this = _super.call(this) || this;
        _this.a = null;
        _this.a = a;
        return _this;
    }
    FragmentBaseValueList.prototype.indexOf = function (a) {
        throw new NotImplementedException(0);
    };
    FragmentBaseValueList.prototype.insert = function (a, b) {
        throw new NotImplementedException(0);
    };
    FragmentBaseValueList.prototype.removeAt = function (a) {
        throw new NotImplementedException(0);
    };
    FragmentBaseValueList.prototype.item = function (a, b) {
        if (arguments.length === 2) {
            throw new NotImplementedException(0);
            return b;
        }
        else {
            var b_1 = false;
            if (this.a.parentSeries != null) {
                b_1 = this.a.parentSeries.s3;
            }
            var c = this.a.parentSeries;
            if (c == null) {
                return NaN;
            }
            if (c.st == null || c.ss == null || c.st.length == 0 || c.ss.length == 0) {
                return NaN;
            }
            var d = this.a.valueColumn.item(a);
            var e = Math.abs(c.st[a]) + c.ss[a];
            var f = this.a.logicalSeriesLink.ap;
            var g = this.a.logicalSeriesLink.aq;
            if (isNaN_(d) || isInfinity(d)) {
                d = 0;
            }
            if (b_1) {
                if (e == 0) {
                    d = 0;
                }
                else if (d < 0) {
                    d = (g._inner[a] + d) / e * 100;
                }
                else {
                    d = (f._inner[a] + d) / e * 100;
                }
            }
            else {
                d = d < 0 ? g._inner[a] + d : f._inner[a] + d;
            }
            return d;
        }
    };
    FragmentBaseValueList.prototype.add = function (a) {
        throw new NotImplementedException(0);
    };
    FragmentBaseValueList.prototype.clear = function () {
        throw new NotImplementedException(0);
    };
    FragmentBaseValueList.prototype.contains = function (a) {
        throw new NotImplementedException(0);
    };
    FragmentBaseValueList.prototype.copyTo = function (a, b) {
        throw new NotImplementedException(0);
    };
    Object.defineProperty(FragmentBaseValueList.prototype, "count", {
        get: function () {
            return this.a.valueColumn.count;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FragmentBaseValueList.prototype, "isReadOnly", {
        get: function () {
            throw new NotImplementedException(0);
        },
        enumerable: false,
        configurable: true
    });
    FragmentBaseValueList.prototype.remove = function (a) {
        throw new NotImplementedException(0);
    };
    FragmentBaseValueList.prototype.getEnumerator = function () {
        throw new NotImplementedException(0);
    };
    FragmentBaseValueList.prototype.getEnumeratorObject = function () {
        throw new NotImplementedException(0);
    };
    FragmentBaseValueList.$t = markType(FragmentBaseValueList, 'FragmentBaseValueList', Base.$, [IList$1_$type.specialize(Number_$type)]);
    return FragmentBaseValueList;
}(Base));
export { FragmentBaseValueList };
/**
 * @hidden
 */
var LineFragment = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(LineFragment, _super);
    function LineFragment() {
        var _this = _super.call(this) || this;
        _this.ab = LineFragment.$;
        return _this;
    }
    LineFragment.prototype.get_dv = function () {
        return true;
    };
    LineFragment.prototype.bu = function () {
        return new LineFragmentView(this);
    };
    LineFragment.prototype.lh = function (a) {
        _super.prototype.lh.call(this, a);
        this.up = a;
    };
    LineFragment.prototype.ur = function (a, b) {
        var c = this.up.df.ak;
        if (this.er(a, c)) {
            return true;
        }
        return false;
    };
    LineFragment.prototype.get_c8 = function () {
        return true;
    };
    LineFragment.prototype.ep = function (a, b) {
        if (this.uq(a, b)) {
            return true;
        }
        if (this.ur(a, b)) {
            return true;
        }
        if (this.pu(a, b)) {
            return true;
        }
        return false;
    };
    LineFragment.prototype.uq = function (a, b) {
        var c = this.up.dg.ak;
        if (this.eq(a, b, c)) {
            return true;
        }
        var d = this.up.dh.ak;
        if (this.eq(a, b, d)) {
            return true;
        }
        return false;
    };
    LineFragment.prototype.preferredCategoryMode = function (a) {
        return 0;
    };
    LineFragment.prototype.kh = function (a, b) {
        _super.prototype.kh.call(this, a, b);
        var c = b;
        c.db();
    };
    LineFragment.prototype.sl = function (a, b) {
        _super.prototype.sl.call(this, a, b);
        var c = function (d) { return a.f._inner[d][0]; };
        var d = function (e) { return a.f._inner[e][1]; };
        var e = function (f) { return a.f._inner[f][0]; };
        var f = function (g) { return a.f._inner[g][2]; };
        this.ug.a = typeCast(ISortingAxis_$type, this.xAxis) !== null ? true : false;
        var g = b.cr.d;
        var h = typeCast(LineFragmentView.$, b);
        var i = this.getEffectiveViewport1(b);
        var j = a.f;
        this.rb.a0(this, this.rv(), runOn(this, this.qw), this.r3(b), this.r4(b));
        var k = false;
        var l = this.rb.b;
        if (l != null) {
            k = true;
        }
        if (k) {
            var m = new ScalerParams(0, b.bv, b.bu, this.tw.cc, i);
            this.sh(j, -1, this.valueColumn.count, this.tw, m, b.q);
        }
        this.rb.ad(h.dg, true, false, true, false);
        this.rb.ad(h.dh, true, false, true, false);
        this.rb.ad(h.df, false, true, false, false);
        h.df._opacity = 0.75 * this.rb.j;
        this.ug.m(h.dg, h.df, h.dh, a.f.count, a.f, true, 0, this.st(a.f, a.f.count - 1, b.bu, b.bv), g, this.gh);
    };
    Object.defineProperty(LineFragment.prototype, "useHighMarkerFidelity", {
        get: function () {
            return this.ry;
        },
        enumerable: false,
        configurable: true
    });
    LineFragment.$t = markType(LineFragment, 'LineFragment', FragmentBase.$);
    return LineFragment;
}(FragmentBase));
export { LineFragment };
/**
 * @hidden
 */
var SplineFragmentBase = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(SplineFragmentBase, _super);
    function SplineFragmentBase() {
        var _this = _super.call(this) || this;
        _this._logicalSeriesLink = null;
        _this.uz = null;
        _this.u1 = null;
        _this.uz = new CategoryLineRasterizer();
        return _this;
    }
    Object.defineProperty(SplineFragmentBase.prototype, "logicalSeriesLink", {
        get: function () {
            return this._logicalSeriesLink;
        },
        set: function (a) {
            this._logicalSeriesLink = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SplineFragmentBase.prototype, "parentSeries", {
        get: function () {
            return this.u1;
        },
        set: function (a) {
            this.u1 = a;
        },
        enumerable: false,
        configurable: true
    });
    SplineFragmentBase.prototype.get_dh = function () {
        return false;
    };
    SplineFragmentBase.prototype.preferredCategoryMode = function (a) {
        return 0;
    };
    SplineFragmentBase.prototype.get_dn = function () {
        return true;
    };
    SplineFragmentBase.prototype.i9 = function () {
        if (this.logicalSeriesLink != null) {
            return this.logicalSeriesLink.dk;
        }
        return null;
    };
    SplineFragmentBase.prototype.o2 = function (a, b, c) {
        var _this = this;
        return this.o4(a, b, c, this.q8.r(this.q2(), this.bx.bv, this.bx.bu, this.getEffectiveViewport1(this.bx)), this.rn(), this.q2(), runOn(this, this.u3), function (d, e) { return _this.g7(d, e, _this.q2(), runOn(_this, _this.r1), new SplineFragmentBaseValueList(_this)); }, function (d, e) { return _this.g5(d, e, _this.q2(), runOn(_this, _this.r1), new SplineFragmentBaseValueList(_this)); });
    };
    SplineFragmentBase.prototype.ag = function () {
        return [this.q2(), this.rn()];
    };
    SplineFragmentBase.prototype.u3 = function (a, b, c) {
        if (this.ca == null) {
            return NaN;
        }
        var d = this.getEffectiveViewport1(this.bx);
        var e = new ScalerParams(0, this.ca.pg, this.bx.bu, this.q2().cc, d);
        var f = this.q8.r(this.q2(), this.ca.pg, this.bx.bu, d);
        return this.ga(new SplineFragmentBaseValueList(this), a, this.q2(), e, f, runOn(this, this.r1), b, c);
    };
    SplineFragmentBase.prototype.gz = function () {
        var a = this.parentSeries;
        if (a.g9 == -1 || a.s0 == null || a.s0.f.indexOf(this) == -1) {
            return -1;
        }
        return a.s0.f.indexOf(this);
    };
    SplineFragmentBase.prototype.resolveLegendIndex = function () {
        var a = this.parentSeries;
        if (a.s4) {
            return -1 + a.g9 + a.sw.count - a.s0.f.indexOf(this);
        }
        return _super.prototype.resolveLegendIndex.call(this);
    };
    SplineFragmentBase.prototype.g3 = function () {
        var a = this.parentSeries;
        if (a.g9 == -1 || a.series.count == 0 || a.series.indexOf(this.logicalSeriesLink) == -1) {
            return -1;
        }
        return a.series.indexOf(this.logicalSeriesLink);
    };
    SplineFragmentBase.prototype.be = function () {
        return this.parentSeries;
    };
    SplineFragmentBase.prototype.ul = function (a, b, c, d, e, f, g) {
        var h = b[0];
        var i = b[1];
        var j = new Rect(0, h - 5, i - 5, 11, 11);
        if (!isNaN_(h) && !isNaN_(i) && !isInfinity(h) && !isInfinity(i) && c.tryAdd(j)) {
            a.m.add({ $type: Point_$type, x: h, y: i });
            var k = f.cu.item(e);
            k.content.item = this.ch.item(d);
            k.al = g;
            return true;
        }
        return false;
    };
    SplineFragmentBase.prototype.e3 = function (a, b, c) {
        var d = _super.prototype.e3.call(this, a, b, c);
        var e = typeCast(CategoryAxisBase.$, this.parentSeries.fetchXAxis());
        var f = this.parentSeries.fetchYAxis();
        if (this.parentSeries == null || e == null || e.itemsSource == null || f == null || this.parentSeries.ch == null || e.bh == null || f.bh == null) {
            d = false;
        }
        if (this.valueColumn == null) {
            return false;
        }
        if (isInfinity(this.valueColumn.minimum) && isInfinity(this.valueColumn.maximum)) {
            d = false;
        }
        if (isNaN_(this.valueColumn.minimum) && isNaN_(this.valueColumn.maximum)) {
            d = false;
        }
        return d;
    };
    SplineFragmentBase.prototype.ap = function (a) {
        return null;
    };
    SplineFragmentBase.prototype.u4 = function (a, b, c, d, e, f) {
        var _this = this;
        var g = typeCast(ISortingAxis_$type, d);
        if (g == null) {
            return;
        }
        var h = this.getEffectiveViewport1(f);
        var i = new ScalerParams(0, b, c, d.cc, h);
        var j = new ScalerParams(0, b, c, e.cc, h);
        var k = d.eb(2, i) - d.eb(1, i);
        var l = this.pt();
        var m = 0;
        var n = this.up(d, b, c, h);
        var o = function (p) { return Math.abs(_this.parentSeries.st[p]) + _this.parentSeries.ss[p]; };
        var p = function (q) { return q; };
        var q = function (r) {
            var s = g.i$b._inner[r];
            if (typeCast(IStacked100Series_$type, _this.parentSeries) !== null) {
                return _this.valueColumn.item(s) < 0 ? (_this.logicalSeriesLink.aq._inner[s] + _this.valueColumn.item(s)) / o(s) * 100 : (_this.logicalSeriesLink.ap._inner[s] + _this.valueColumn.item(s)) / o(s) * 100;
            }
            else {
                return _this.valueColumn.item(s) < 0 ? _this.logicalSeriesLink.aq._inner[s] + _this.valueColumn.item(s) : _this.logicalSeriesLink.ap._inner[s] + _this.valueColumn.item(s);
            }
        };
        var r = this.rc.cr.f;
        var s = this.rc.cr.e;
        var t = truncate(Math.ceil(c.width / (r - s)));
        var u = new CollisionAvoider();
        var v = this.rc.cr.d;
        if (v <= 0 || (s <= 0 && r <= 0)) {
            this.rc.cu.count = m;
            return;
        }
        var w = 0;
        for (var x = s; x < r + 1; ++x) {
            var y = null;
            var z = x * v;
            if (g != null && g.i$b != null && z >= 0 && z < g.i$b.count) {
                z = g.i$b._inner[z];
            }
            if (x >= (this.valueColumn.count - 1)) {
                if (l && this.ul(a, a.f._inner[a.f.count - 1], u, Math.min(z, this.ch.count - 1), m, f, w - 1)) {
                    ++m;
                }
                break;
            }
            var aa = p(x);
            var ab = q(x);
            var ac = p(x + 1);
            var ad = q(x + 1);
            var ae = ac - aa;
            var af = this.uh[x];
            var ag = this.uh[x + 1];
            var ah = g.i$d(g.i$b._inner[x]);
            var ai = d.d8(ah, i) + n;
            var aj = e.d8(ab, j);
            a.f.add([ai, aj, aj]);
            w++;
            for (var ak = 1; ak < t; ++ak) {
                var al = ak / t;
                var am = aa + ae * al;
                var an = (ac - am) / ae;
                var ao = (am - aa) / ae;
                var ap = an * ab + ao * ad + ((an * an * an - an) * af + (ao * ao * ao - ao) * ag) * (ae * ae) / 6;
                var aq = g.i$d(g.i$b._inner[x]);
                var ar = g.i$d(g.i$b._inner[x + 1]);
                if (aq == ar && ab == ad) {
                    break;
                }
                var as = aq + (ar - aq) * al;
                am = d.d8(as, i) + n;
                ap = e.d8(ap, j);
                a.f.add([am, ap, ap]);
                w++;
            }
            if (l) {
                y = [ai, aj, aj];
            }
            if (l && this.ul(a, y, u, Math.min(z, this.ch.count - 1), m, f, w - 1)) {
                ++m;
            }
        }
        this.rc.cu.count = m;
    };
    SplineFragmentBase.prototype.si = function (a, b) {
        var _this = this;
        a.u();
        if (this.valueColumn == null || this.parentSeries == null || this.logicalSeriesLink == null) {
            return;
        }
        if (this.logicalSeriesLink.aq.count == 0 || this.logicalSeriesLink.ap.count == 0) {
            return;
        }
        if (this.rc.cr.d == 0) {
            return;
        }
        _super.prototype.si.call(this, a, b);
        if (a.f.count <= 1) {
            return;
        }
        var c = b.bv;
        var d = b.bu;
        var e = this.getEffectiveViewport1(b);
        var f = typeCast(CategoryAxisBase.$, this.parentSeries.fetchXAxis());
        var g = typeCast(NumericYAxis.$, this.parentSeries.fetchYAxis());
        var h = new ScalerParams(0, c, d, f.cc, e);
        var i = new ScalerParams(0, c, d, g.cc, e);
        a.f.clear();
        a.m.clear();
        var j = this.pt();
        var k = 0;
        var l;
        var m;
        if (b.p) {
            l = this.parentSeries.su;
            m = this.parentSeries.a4.a$h.item(b.ad);
        }
        else if (b == this.bw) {
            l = this.parentSeries.q6;
            m = typeCast(CategorySeriesView.$, this.parentSeries.bw);
        }
        else {
            l = this.parentSeries.q3;
            m = this.parentSeries.rc;
        }
        var n = m.cr.d;
        var o = typeCast(ISortingAxis_$type, f);
        if (o != null && o.i$b.count != this.ch.count) {
            return;
        }
        var p = this.preferredCategoryMode(f);
        if (p == 0 && f.categoryMode != 0) {
            p = 1;
        }
        var q = 0;
        switch (p) {
            case 0:
                q = 0;
                break;
            case 1:
                q = 0.5 * f.getCategorySize(c, d, e);
                break;
            case 2:
                var r = this.g9;
                q = f.getGroupCenter(this.g9, c, d, e);
                break;
        }
        if (f.cc) {
            q = -q;
        }
        var s = function (t) { return Math.abs(_this.parentSeries.st[t]) + _this.parentSeries.ss[t]; };
        var t = function (u) { return u; };
        var u = function (v) {
            var w = _this.valueColumn.item(v);
            if (isNaN_(w) || isInfinity(w)) {
                w = 0;
            }
            if (typeCast(IStacked100Series_$type, _this.parentSeries) !== null) {
                if (s(v) == 0) {
                    return 0;
                }
                return w < 0 ? (_this.logicalSeriesLink.aq._inner[v] + w) / s(v) * 100 : (_this.logicalSeriesLink.ap._inner[v] + w) / s(v) * 100;
            }
            return w < 0 ? _this.logicalSeriesLink.aq._inner[v] + w : _this.logicalSeriesLink.ap._inner[v] + w;
        };
        var v = b.cr.d;
        this.uu(b);
        var w = m.cr.e;
        var x = m.cr.f;
        var y = truncate(Math.ceil(d.width / (x - w)));
        var z = new CollisionAvoider();
        if (o != null) {
            this.u4(a, c, d, f, g, b);
            return;
        }
        var aa = 0;
        var ab = 0;
        for (var ac = w; ac < x + 1; ++ac) {
            if (ac >= this.valueColumn.count) {
                break;
            }
            var ad = null;
            if (v == 1) {
                if (ac >= (this.valueColumn.count - 1)) {
                    if (j && a.f.count > 0 && this.ul(a, a.f._inner[a.f.count - 1], z, Math.min(ac * v, this.ch.count - 1), k, b, aa - 1)) {
                        ++k;
                    }
                    break;
                }
                var ae = t(ac);
                var af = t(ac + 1);
                var ag = u(ac);
                var ah = u(ac + 1);
                var ai = af - ae;
                var aj = this.uh[ac];
                var ak = this.uh[ac + 1];
                var al = f.d8(ae, h) + q;
                var am = g.d8(ag, i);
                a.f.add([al, am, am]);
                aa++;
                ab = aa;
                for (var an = 1; an < y; ++an) {
                    var ao = ae + ai * an / y;
                    var ap = (af - ao) / ai;
                    var aq = (ao - ae) / ai;
                    var ar = ap * ag + aq * ah + ((ap * ap * ap - ap) * aj + (aq * aq * aq - aq) * ak) * (ai * ai) / 6;
                    ao = f.d8(ao, h) + q;
                    ar = g.d8(ar, i);
                    a.f.add([ao, ar, ar]);
                    aa++;
                }
                if (j) {
                    ad = [al, am, am];
                }
            }
            else {
                ad = b.cr.getBucket(ac);
                if (!isNaN_(ad[0])) {
                    ad[0] = f.d8(ad[0], h) + q;
                    ad[1] = g.d8(ad[1], i);
                    ad[2] = g.d8(ad[2], i);
                    a.f.add(ad);
                    aa++;
                    ab = aa;
                }
            }
            if (j && this.ul(a, ad, z, Math.min(ac * v, this.ch.count - 1), k, b, ab - 1)) {
                ++k;
            }
        }
        b.cu.count = k;
    };
    SplineFragmentBase.prototype.uf = function (a) {
        var _this = this;
        var b = function (c) { return Math.abs(_this.parentSeries.st[c]) + _this.parentSeries.ss[c]; };
        var c = function (d) { return d; };
        var d = function (e) {
            var f = _this.valueColumn.item(e);
            if (isNaN_(f) || isInfinity(f)) {
                f = 0;
            }
            if (typeCast(IStacked100Series_$type, _this.parentSeries) !== null) {
                if (b(e) == 0) {
                    return 0;
                }
                return f < 0 ? (_this.logicalSeriesLink.aq._inner[e] + f) / b(e) * 100 : (_this.logicalSeriesLink.ap._inner[e] + f) / b(e) * 100;
            }
            return f < 0 ? _this.logicalSeriesLink.aq._inner[e] + f : _this.logicalSeriesLink.ap._inner[e] + f;
        };
        var e = new List$1(Array_$type, 0);
        var f = a.bv;
        var g = a.bu;
        var h = typeCast(ISortingAxis_$type, this.tw);
        var i = 0;
        var j = 0;
        var k = 0;
        var l = this.gh;
        var m = this.o7(this.bx);
        var n = this.tw;
        var o = this.getEffectiveViewport1(a);
        if (h == null || h.i$b == null) {
            var p = new ScalerParams(0, f, g, n.cc, o);
            var q = 0;
            var r = n.kr - 1;
            var s = Math.floor((r - q + 1) * l / m.width);
            i = truncate(Math.max(1, s));
            j = truncate(Math.max(0, Math.floor(q / i) - 1));
            k = truncate(Math.ceil(r / i));
        }
        else {
            j = 0;
            k = n.kr - 1;
            i = 1;
        }
        var t = truncate(Math.ceil(g.width / (k - j)));
        var u = new CollisionAvoider();
        if (h != null) {
            return this.ug(a);
        }
        var v = 0;
        var w = 0;
        for (var x = j; x < k + 1; ++x) {
            if (x >= this.valueColumn.count) {
                break;
            }
            var y = null;
            if (i == 1) {
                if (x >= (this.valueColumn.count - 1)) {
                    break;
                }
                var z = c(x);
                var aa = c(x + 1);
                var ab = d(x);
                var ac = d(x + 1);
                var ad = aa - z;
                var ae = this.uh[x];
                var af = this.uh[x + 1];
                e.add([ab, ab]);
                for (var ag = 1; ag < t; ++ag) {
                    var ah = z + ad * ag / t;
                    var ai = (aa - ah) / ad;
                    var aj = (ah - z) / ad;
                    var ak = ai * ab + aj * ac + ((ai * ai * ai - ai) * ae + (aj * aj * aj - aj) * af) * (ad * ad) / 6;
                    e.add([ak, ak]);
                }
            }
            else {
                y = a.cr.getBucket(x);
                if (!isNaN_(y[0])) {
                    e.add([y[0], y[1]]);
                }
            }
        }
        return e.toArray();
    };
    SplineFragmentBase.prototype.ug = function (a) {
        var _this = this;
        var b = new List$1(Array_$type, 0);
        var c = a.bv;
        var d = a.bu;
        var e = this.tw;
        var f = typeCast(ISortingAxis_$type, e);
        if (f == null) {
            return null;
        }
        var g = this.getEffectiveViewport1(a);
        var h = this.pt();
        var i = 0;
        var j = function (k) { return Math.abs(_this.parentSeries.st[k]) + _this.parentSeries.ss[k]; };
        var k = function (l) { return l; };
        var l = function (m) {
            var n = f.i$b._inner[m];
            if (typeCast(IStacked100Series_$type, _this.parentSeries) !== null) {
                return _this.valueColumn.item(n) < 0 ? (_this.logicalSeriesLink.aq._inner[n] + _this.valueColumn.item(n)) / j(n) * 100 : (_this.logicalSeriesLink.ap._inner[n] + _this.valueColumn.item(n)) / j(n) * 100;
            }
            else {
                return _this.valueColumn.item(n) < 0 ? _this.logicalSeriesLink.aq._inner[n] + _this.valueColumn.item(n) : _this.logicalSeriesLink.ap._inner[n] + _this.valueColumn.item(n);
            }
        };
        var m = 0;
        var n = 0;
        var o = 0;
        var p = this.gh;
        var q = this.o7(this.bx);
        if (f == null || f.i$b == null) {
            var r = 0;
            var s = e.kr - 1;
            var t = Math.floor((s - r + 1) * p / q.width);
            m = truncate(Math.max(1, t));
            n = truncate(Math.max(0, Math.floor(r / m) - 1));
            o = truncate(Math.ceil(s / m));
        }
        else {
            n = 0;
            o = e.kr - 1;
            m = 1;
        }
        if (m <= 0 || (n <= 0 && o <= 0)) {
            this.rc.cu.count = i;
            return null;
        }
        var u = truncate(Math.ceil(d.width / (o - n)));
        var v = new CollisionAvoider();
        var w = 0;
        for (var x = n; x < o + 1; ++x) {
            var y = null;
            if (x >= (this.valueColumn.count - 1)) {
                break;
            }
            var z = k(x);
            var aa = l(x);
            var ab = k(x + 1);
            var ac = l(x + 1);
            var ad = ab - z;
            var ae = this.uh[x];
            var af = this.uh[x + 1];
            b.add([aa, aa]);
            for (var ag = 1; ag < u; ++ag) {
                var ah = ag / u;
                var ai = z + ad * ah;
                var aj = (ab - ai) / ad;
                var ak = (ai - z) / ad;
                var al = aj * aa + ak * ac + ((aj * aj * aj - aj) * ae + (ak * ak * ak - ak) * af) * (ad * ad) / 6;
                b.add([al, al]);
            }
        }
        return b.toArray();
    };
    SplineFragmentBase.prototype.uu = function (a) {
        var _this = this;
        _super.prototype.uu.call(this, a);
        var b = function (c) { return Math.abs(_this.parentSeries.st[c]) + _this.parentSeries.ss[c]; };
        var c = function (d) { return d; };
        var d = function (e) {
            var f = _this.valueColumn.item(e);
            if (isNaN_(f) || isInfinity(f)) {
                f = 0;
            }
            if (typeCast(IStacked100Series_$type, _this.parentSeries) !== null) {
                if (b(e) == 0) {
                    return 0;
                }
                return f < 0 ? (_this.logicalSeriesLink.aq._inner[e] + f) / b(e) * 100 : (_this.logicalSeriesLink.ap._inner[e] + f) / b(e) * 100;
            }
            return f < 0 ? _this.logicalSeriesLink.aq._inner[e] + f : _this.logicalSeriesLink.ap._inner[e] + f;
        };
        var e = this.tw;
        var f = this.uj == 0 ? NaN : 0;
        if (e != null && typeCast(ISortingAxis_$type, e) !== null && e.i$b != null) {
            var g_1 = new SafeSortedReadOnlyDoubleCollection(0, this.valueColumn, e.i$b);
            d = function (h) { return g_1.item(h); };
        }
        this.uh = Numeric.c(this.valueColumn.count, c, d, f, f);
        if (this.uk) {
            var h = -1.7976931348623157E+308;
            var i = 1.7976931348623157E+308;
            var j = this.uf(a);
            if (j == null) {
                return;
            }
            for (var k = 0; k < j.length; k++) {
                if (isNaN_(j[k][0]) || isNaN_(j[k][1])) {
                    continue;
                }
                if (j[k][1] > h) {
                    h = j[k][1];
                }
                if (j[k][0] < i) {
                    i = j[k][0];
                }
            }
            this.ur = i;
            this.uq = h;
        }
    };
    SplineFragmentBase.prototype.lm = function (a, b, c, d) {
        _super.prototype.lm.call(this, a, b, c, d);
        switch (b) {
            case "ActualBrush":
                if (this.logicalSeriesLink != null) {
                    this.logicalSeriesLink.hs = this.of;
                }
                break;
        }
    };
    Object.defineProperty(SplineFragmentBase.prototype, "useHighMarkerFidelity", {
        get: function () {
            return this.ry;
        },
        enumerable: false,
        configurable: true
    });
    SplineFragmentBase.$t = markType(SplineFragmentBase, 'SplineFragmentBase', SplineSeriesBase.$);
    return SplineFragmentBase;
}(SplineSeriesBase));
export { SplineFragmentBase };
/**
 * @hidden
 */
var SplineAreaFragment = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(SplineAreaFragment, _super);
    function SplineAreaFragment() {
        var _this = _super.call(this) || this;
        _this.u9 = null;
        _this.ab = SplineAreaFragment.$;
        return _this;
    }
    SplineAreaFragment.prototype.bu = function () {
        return new SplineAreaFragmentView(this);
    };
    SplineAreaFragment.prototype.lh = function (a) {
        _super.prototype.lh.call(this, a);
        this.u5 = typeCast(SplineAreaFragmentView.$, a);
    };
    SplineAreaFragment.prototype.ac = function () {
        _super.prototype.ac.call(this);
        this.l0(false);
    };
    SplineAreaFragment.prototype.get_c8 = function () {
        return true;
    };
    SplineAreaFragment.prototype.get_c7 = function () {
        return true;
    };
    SplineAreaFragment.prototype.get_ea = function () {
        return true;
    };
    SplineAreaFragment.prototype.u7 = function (a, b) {
        var c = this.u5.dh.ak;
        if (this.er(a, c)) {
            return true;
        }
        var d = this.u5.di.ak;
        if (this.er(a, d)) {
            return true;
        }
        return false;
    };
    SplineAreaFragment.prototype.ep = function (a, b) {
        if (this.u6(a, b)) {
            return true;
        }
        if (this.u7(a, b)) {
            return true;
        }
        if (this.pu(a, b)) {
            return true;
        }
        return false;
    };
    SplineAreaFragment.prototype.u6 = function (a, b) {
        var c = this.u5.dj.ak;
        if (this.eq(a, b, c)) {
            return true;
        }
        var d = this.u5.dk.ak;
        if (this.eq(a, b, d)) {
            return true;
        }
        return false;
    };
    SplineAreaFragment.prototype.kh = function (a, b) {
        _super.prototype.kh.call(this, a, b);
        var c = b;
        c.dc();
    };
    SplineAreaFragment.prototype.sl = function (a, b) {
        var _this = this;
        _super.prototype.sl.call(this, a, b);
        this.uz.a = typeCast(ISortingAxis_$type, this.xAxis) !== null ? true : false;
        var c = a.f;
        var d = this.getEffectiveViewport1(b);
        this.rb.a0(this, this.rv(), runOn(this, this.qw), this.r3(b), this.r4(b));
        var e = false;
        var f = this.rb.b;
        if (f != null) {
            e = true;
        }
        if (e) {
            var g = new ScalerParams(0, b.bv, b.bu, this.tw.cc, d);
            this.sh(c, -1, this.valueColumn.count, this.tw, g, b.q);
        }
        var h = typeCast(SplineAreaFragmentView.$, b);
        var i = b.cr.d;
        this.rb.ad(h.dj, true, false, true, true);
        this.rb.ad(h.dk, true, false, true, true);
        this.rb.ad(h.dh, false, true, false, false);
        this.rb.ad(h.di, false, true, false, false);
        h.dh._opacity = this.rb.j * this.fi;
        h.di._opacity = 0.5 * this.rb.j * this.fi;
        this.uz.i(h.dh, h.dj, h.di, h.dk, a.f.count, a.f, true, i, this.gh, function (j, k, l, m, n) { return _this.u8(j, a.f, b); }, 1);
    };
    SplineAreaFragment.prototype.l2 = function (a, b) {
        _super.prototype.l2.call(this, a, b);
    };
    SplineAreaFragment.prototype.u8 = function (a, b, c) {
        var d = this.s4(c);
        var e = d;
        var f = this.logicalSeriesLink.aj;
        var g = f ? this.parentSeries.s0.e : this.parentSeries.s0.d;
        var h = g.indexOf(this);
        if (a.count == 0) {
            return;
        }
        if (h == -1) {
            return;
        }
        var i = false;
        for (var j = h; j >= 0; j--) {
            if (i) {
                break;
            }
            if (j == 0) {
                a.add({ $type: Point_$type, x: a._inner[a.count - 1].x, y: e });
                a.add({ $type: Point_$type, x: a._inner[0].x, y: e });
                break;
            }
            var k = typeCast(SplineFragmentBase.$, g._inner[j - 1]);
            if (k != null && k.uz != null && k.uz.o.count > 0 && this.bx != null && k.e3(this.bx.bu, this.bx.bv, this.bx)) {
                i = true;
                for (var l = k.uz.o.count - 1; l >= 0; l--) {
                    a.add(k.uz.o._inner[l]);
                }
            }
        }
    };
    SplineAreaFragment.prototype.s4 = function (a) {
        var b = 0;
        var c = a.bv;
        var d = a.bu;
        var e = this.getEffectiveViewport1(a);
        var f = new ScalerParams(0, c, d, this.yAxis.cc, e);
        if (!c.isEmpty && !d.isEmpty && this.yAxis != null) {
            b = this.yAxis.d8(0, f);
        }
        return b;
    };
    SplineAreaFragment.prototype.ma = function () {
        var a = (typeCast(XamDataChart.$, this.ca));
        if (a != null) {
            this.fi = isNaN_(this.fq) ? this.parentSeries.fi : this.fq;
        }
    };
    Object.defineProperty(SplineAreaFragment.prototype, "useHighMarkerFidelity", {
        get: function () {
            return this.ry;
        },
        enumerable: false,
        configurable: true
    });
    SplineAreaFragment.$t = markType(SplineAreaFragment, 'SplineAreaFragment', SplineFragmentBase.$);
    return SplineAreaFragment;
}(SplineFragmentBase));
export { SplineAreaFragment };
/**
 * @hidden
 */
var SplineFragment = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(SplineFragment, _super);
    function SplineFragment() {
        var _this = _super.call(this) || this;
        _this.ab = SplineFragment.$;
        return _this;
    }
    SplineFragment.prototype.get_ea = function () {
        return true;
    };
    SplineFragment.prototype.bu = function () {
        return new SplineFragmentView(this);
    };
    SplineFragment.prototype.lh = function (a) {
        _super.prototype.lh.call(this, a);
        this.u5 = a;
    };
    SplineFragment.prototype.u7 = function (a, b) {
        var c = this.u5.dg.ak;
        if (this.er(a, c)) {
            return true;
        }
        return false;
    };
    SplineFragment.prototype.get_c8 = function () {
        return true;
    };
    SplineFragment.prototype.ep = function (a, b) {
        if (this.u6(a, b)) {
            return true;
        }
        if (this.u7(a, b)) {
            return true;
        }
        if (this.pu(a, b)) {
            return true;
        }
        return false;
    };
    SplineFragment.prototype.u6 = function (a, b) {
        var c = this.u5.dh.ak;
        if (this.eq(a, b, c)) {
            return true;
        }
        var d = this.u5.di.ak;
        if (this.eq(a, b, d)) {
            return true;
        }
        return false;
    };
    SplineFragment.prototype.kh = function (a, b) {
        _super.prototype.kh.call(this, a, b);
        var c = b;
        c.dc();
    };
    SplineFragment.prototype.sl = function (a, b) {
        _super.prototype.sl.call(this, a, b);
        this.uz.a = typeCast(ISortingAxis_$type, this.xAxis) !== null ? true : false;
        var c = typeCast(SplineFragmentView.$, b);
        var d = a.f;
        var e = this.getEffectiveViewport1(b);
        this.rb.a0(this, this.rv(), runOn(this, this.qw), this.r3(b), this.r4(b));
        var f = false;
        var g = this.rb.b;
        if (g != null) {
            f = true;
        }
        if (f) {
            var h = new ScalerParams(0, b.bv, b.bu, this.tw.cc, e);
            this.sh(d, -1, this.valueColumn.count, this.tw, h, b.q);
        }
        this.rb.ad(c.dh, true, false, true, false);
        this.rb.ad(c.di, true, false, true, false);
        this.rb.ad(c.dg, false, true, false, false);
        c.dg._opacity = 0.75 * this.rb.j;
        var i = c.cr.d;
        this.uz.m(c.dh, c.dg, c.di, a.f.count, a.f, true, 1, this.st(a.f, a.f.count - 1, b.bu, b.bv), i, this.gh);
    };
    Object.defineProperty(SplineFragment.prototype, "useHighMarkerFidelity", {
        get: function () {
            return this.ry;
        },
        enumerable: false,
        configurable: true
    });
    SplineFragment.$t = markType(SplineFragment, 'SplineFragment', SplineFragmentBase.$);
    return SplineFragment;
}(SplineFragmentBase));
export { SplineFragment };
/**
 * @hidden
 */
var SplineFragmentBaseValueList = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(SplineFragmentBaseValueList, _super);
    function SplineFragmentBaseValueList(a) {
        var _this = _super.call(this) || this;
        _this.a = null;
        _this.a = a;
        return _this;
    }
    SplineFragmentBaseValueList.prototype.indexOf = function (a) {
        throw new NotImplementedException(0);
    };
    SplineFragmentBaseValueList.prototype.insert = function (a, b) {
        throw new NotImplementedException(0);
    };
    SplineFragmentBaseValueList.prototype.removeAt = function (a) {
        throw new NotImplementedException(0);
    };
    SplineFragmentBaseValueList.prototype.item = function (a, b) {
        if (arguments.length === 2) {
            throw new NotImplementedException(0);
            return b;
        }
        else {
            var b_2 = false;
            if (this.a.parentSeries != null) {
                b_2 = this.a.parentSeries.s3;
            }
            var c = this.a.parentSeries;
            if (c == null) {
                return NaN;
            }
            var d = this.a.valueColumn.item(a);
            var e = Math.abs(c.st[a]) + c.ss[a];
            var f = this.a.logicalSeriesLink.ap;
            var g = this.a.logicalSeriesLink.aq;
            if (isNaN_(d) || isInfinity(d)) {
                d = 0;
            }
            if (b_2) {
                if (e == 0) {
                    d = 0;
                }
                else if (d < 0) {
                    d = (g._inner[a] + d) / e * 100;
                }
                else {
                    d = (f._inner[a] + d) / e * 100;
                }
            }
            else {
                d = d < 0 ? g._inner[a] + d : f._inner[a] + d;
            }
            return d;
        }
    };
    SplineFragmentBaseValueList.prototype.add = function (a) {
        throw new NotImplementedException(0);
    };
    SplineFragmentBaseValueList.prototype.clear = function () {
        throw new NotImplementedException(0);
    };
    SplineFragmentBaseValueList.prototype.contains = function (a) {
        throw new NotImplementedException(0);
    };
    SplineFragmentBaseValueList.prototype.copyTo = function (a, b) {
        throw new NotImplementedException(0);
    };
    Object.defineProperty(SplineFragmentBaseValueList.prototype, "count", {
        get: function () {
            return this.a.valueColumn.count;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SplineFragmentBaseValueList.prototype, "isReadOnly", {
        get: function () {
            throw new NotImplementedException(0);
        },
        enumerable: false,
        configurable: true
    });
    SplineFragmentBaseValueList.prototype.remove = function (a) {
        throw new NotImplementedException(0);
    };
    SplineFragmentBaseValueList.prototype.getEnumerator = function () {
        throw new NotImplementedException(0);
    };
    SplineFragmentBaseValueList.prototype.getEnumeratorObject = function () {
        throw new NotImplementedException(0);
    };
    SplineFragmentBaseValueList.$t = markType(SplineFragmentBaseValueList, 'SplineFragmentBaseValueList', Base.$, [IList$1_$type.specialize(Number_$type)]);
    return SplineFragmentBaseValueList;
}(Base));
export { SplineFragmentBaseValueList };
/**
 * @hidden
 */
var StackedSeriesBase = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(StackedSeriesBase, _super);
    function StackedSeriesBase() {
        var _this = _super.call(this) || this;
        _this._series = null;
        _this.seriesCreated = null;
        _this.ta = 0;
        _this.s9 = 0;
        _this.ss = null;
        _this.st = null;
        _this.s0 = null;
        _this.sx = null;
        _this.s6 = new Dictionary$2(String_$type, Boolean_$type, 0);
        _this.su = null;
        _this.series = new StackedSeriesCollection();
        var a = _this.series;
        a.collectionResetting = delegateCombine(a.collectionResetting, runOn(_this, _this.tm));
        var b = _this.series;
        b.collectionChanged = delegateCombine(b.collectionChanged, runOn(_this, _this.tl));
        _this.q8 = new StackedSeriesFramePreparer(1, _this, _this.s1, _this, _this, _this.s1.cr);
        _this.s0 = new StackedSeriesManager(_this);
        _this.sx = new StackedSeriesCollection();
        var c = _this.sx;
        c.collectionChanged = delegateCombine(c.collectionChanged, runOn(_this, _this.tl));
        var d = _this.sx;
        d.collectionResetting = delegateCombine(d.collectionResetting, runOn(_this, _this.tg));
        return _this;
    }
    StackedSeriesBase.prototype.k2 = function () {
        var e_1, _a;
        try {
            for (var _b = __values(fromEnum(this.sw)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var a = _c.value;
                a.ey();
            }
        }
        catch (e_1_1) {
            e_1 = { error: e_1_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_1)
                    throw e_1.error;
            }
        }
        _super.prototype.k2.call(this);
    };
    StackedSeriesBase.prototype.get_dr = function () {
        return false;
    };
    StackedSeriesBase.prototype.getHostReferenceValue = function () {
        return this.f2();
    };
    StackedSeriesBase.prototype.bu = function () {
        return new StackedSeriesView(this);
    };
    StackedSeriesBase.prototype.lh = function (a) {
        _super.prototype.lh.call(this, a);
        this.s1 = a;
    };
    StackedSeriesBase.prototype.li = function (a, b) {
        var e_2, _a;
        _super.prototype.li.call(this, a, b);
        try {
            for (var _b = __values(fromEnum(this.series)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var c = _c.value;
                c.visualSeriesLink.bx.bu = b;
            }
        }
        catch (e_2_1) {
            e_2 = { error: e_2_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_2)
                    throw e_2.error;
            }
        }
    };
    Object.defineProperty(StackedSeriesBase.prototype, "series", {
        get: function () {
            return this._series;
        },
        set: function (a) {
            this._series = a;
        },
        enumerable: false,
        configurable: true
    });
    StackedSeriesBase.prototype.g8 = function () {
        if (this.series == null) {
            return -1;
        }
        return this.series.count;
    };
    StackedSeriesBase.prototype.ku = function (a) {
        for (var b = 0; b < this.s0.f.count; b++) {
            var c = this.s0.f._inner[b];
            if (!a(c)) {
                break;
            }
        }
    };
    StackedSeriesBase.prototype.get_isStacked = function () {
        return true;
    };
    Object.defineProperty(StackedSeriesBase.prototype, "sw", {
        get: function () {
            return this.s2 ? this.sx : this.series;
        },
        enumerable: false,
        configurable: true
    });
    StackedSeriesBase.prototype.tg = function (a, b) {
        var e_3, _a;
        try {
            for (var _b = __values(fromEnum(this.sx)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var c = _c.value;
                if (this.s0 != null && this.s0.c.contains(c)) {
                    c.parentSeries = null;
                    this.s0.c.remove(c);
                }
            }
        }
        catch (e_3_1) {
            e_3 = { error: e_3_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_3)
                    throw e_3.error;
            }
        }
    };
    StackedSeriesBase.prototype.tm = function (a, b) {
        var e_4, _a;
        try {
            for (var _b = __values(fromEnum(this.series)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var c = _c.value;
                if (this.s0 != null && this.s0.c.contains(c)) {
                    c.parentSeries = null;
                    this.s0.c.remove(c);
                }
            }
        }
        catch (e_4_1) {
            e_4 = { error: e_4_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_4)
                    throw e_4.error;
            }
        }
    };
    StackedSeriesBase.prototype.tl = function (a, b) {
        var e_5, _a, e_6, _b;
        if (b.oldItems != null) {
            try {
                for (var _c = __values(fromEn(b.oldItems)), _d = _c.next(); !_d.done; _d = _c.next()) {
                    var c = _d.value;
                    if (this.s0 != null && this.s0.c.contains(c)) {
                        c.parentSeries = null;
                        this.s0.c.remove(c);
                    }
                }
            }
            catch (e_5_1) {
                e_5 = { error: e_5_1 };
            }
            finally {
                try {
                    if (_d && !_d.done && (_a = _c.return))
                        _a.call(_c);
                }
                finally {
                    if (e_5)
                        throw e_5.error;
                }
            }
        }
        if (b.newItems != null) {
            var d = b.newStartingIndex;
            try {
                for (var _e = __values(fromEn(b.newItems)), _f = _e.next(); !_f.done; _f = _e.next()) {
                    var e = _f.value;
                    if (this.s0 != null && !this.s0.c.contains(e)) {
                        e.parentSeries = this;
                        e.ej();
                        e.e5();
                        e.e6();
                        e.fd();
                        e.e7();
                        e.e8();
                        e.ee();
                        e.ef();
                        e.ei();
                        e.eg();
                        e.eh();
                        e.ek();
                        e.ep();
                        e.eq();
                        e.er();
                        e.ew();
                        e.ey();
                        e.es();
                        e.eu();
                        e.ev();
                        e.ew();
                        e.ex();
                        e.ez();
                        e.e0();
                        e.e1();
                        e.ed();
                        e.e3();
                        e.e4();
                        e.e9();
                        e.fa();
                        e.fb();
                        e.et();
                        e.e2();
                        e.fc();
                        e.fe();
                        if (!this.s2) {
                            this.s0.c.insert(d, e);
                            d++;
                        }
                    }
                }
            }
            catch (e_6_1) {
                e_6 = { error: e_6_1 };
            }
            finally {
                try {
                    if (_f && !_f.done && (_b = _e.return))
                        _b.call(_e);
                }
                finally {
                    if (e_6)
                        throw e_6.error;
                }
            }
        }
        if (!this.s2) {
            this.tn();
        }
    };
    StackedSeriesBase.prototype.l7 = function (a) {
        this.b8.cf.c5(a, true, false);
    };
    StackedSeriesBase.prototype.q9 = function (a) {
        if (a != null && a.q) {
            if (a.p) {
                return new StackedSeriesFramePreparer(1, typeCast(IIsCategoryBased_$type, this), typeCast(ISupportsMarkers_$type, a), a, this, a.cr);
            }
            else {
                var b = typeCast(CategorySeriesView.$, this.bw);
                return new StackedSeriesFramePreparer(1, this, typeCast(ISupportsMarkers_$type, b), this.ca.cf.o, this, b.cr);
            }
        }
        else {
            return this.q8;
        }
    };
    StackedSeriesBase.prototype.si = function (a, b) {
        a.u();
        this.tj();
        this.q9(b).d(a, b);
    };
    StackedSeriesBase.prototype.kh = function (a, b) {
        var e_7, _a;
        _super.prototype.kh.call(this, a, b);
        try {
            for (var _b = __values(fromEnum(this.sw)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var c = _c.value;
                if (c.visualSeriesLink != null) {
                    c.visualSeriesLink.kh(a, c.visualSeriesLink.bx);
                }
            }
        }
        catch (e_7_1) {
            e_7 = { error: e_7_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_7)
                    throw e_7.error;
            }
        }
    };
    StackedSeriesBase.prototype.th = function () {
        this.tj();
    };
    StackedSeriesBase.prototype.tn = function () {
        var a = this.fetchXAxis();
        if (a != null) {
            a.cw(true);
        }
        var b = this.fetchYAxis();
        if (b != null) {
            b.cw(true);
        }
    };
    StackedSeriesBase.prototype.get_s3 = function () {
        return false;
    };
    Object.defineProperty(StackedSeriesBase.prototype, "s3", {
        get: function () {
            return this.get_s3();
        },
        enumerable: false,
        configurable: true
    });
    StackedSeriesBase.prototype.eh = function (a) {
        var b = this.ch != null ? this.ch.indexOf(a) : -1;
        var c = this.ca != null ? this.ca.pg : Rect.empty;
        c = c.copy();
        var d = this.bx.bu;
        var e = new Rect(0, 0, 0, 1, 1);
        var f = this.o9(this.bx);
        if (b >= 0 && Rect.l_op_Inequality(c, null) && Rect.l_op_Inequality(d, null)) {
            var g = this.fetchXAxis();
            if (g != null) {
                var h = new ScalerParams(0, e, e, g.cc, f);
                var i = g.d8(b, h);
                if (i < c.left + 0.1 * c.width) {
                    i = i + 0.4 * c.width;
                }
                if (i > c.right - 0.1 * c.width) {
                    i = i - 0.4 * c.width;
                }
                c.x = i - 0.5 * c.width;
            }
            var j = this.fetchYAxis();
            if (j != null && this.ss != null && b < this.ss.length) {
                var k = new ScalerParams(0, e, e, j.cc, f);
                var l = j.d8(this.ss[b], k);
                var m = j.d8(this.st[b], k);
                if (!isNaN_(l) && !isNaN_(m)) {
                    var n = Math.abs(m - l);
                    if (c.height < n) {
                        c.height = n;
                        c.y = Math.min(m, l);
                    }
                    else {
                        if (m < c.top + 0.1 * c.height) {
                            m = m + 0.4 * c.height;
                        }
                        if (m > c.bottom - 0.1 * c.height) {
                            m = m - 0.4 * c.height;
                        }
                        c.y = m - 0.5 * c.height;
                    }
                }
            }
            this.b5.ap(this.ca, c, true);
        }
        return b >= 0;
    };
    StackedSeriesBase.prototype.ap = function (a) {
        if (this.st == null || this.st.length == 0 || this.ss == null || this.ss.length == 0) {
            return null;
        }
        if (a == this.fetchXAxis()) {
            var b = Math.min(this.st.length, this.ss.length);
            return new AxisRange(0, b - 1);
        }
        if (a == this.fetchYAxis()) {
            return new AxisRange(this.ta, this.s9);
        }
        return null;
    };
    StackedSeriesBase.prototype.pt = function () {
        return false;
    };
    StackedSeriesBase.prototype.kk = function (a, b, c, d) {
        this.tj();
        this.rx();
        this.l0(false);
    };
    StackedSeriesBase.prototype.sv = function () {
        return this.s1;
    };
    StackedSeriesBase.prototype.s7 = function () {
        var a = 0;
        var b = this.bx.bv;
        var c = this.bx.bu;
        var d = this.getEffectiveViewport1(this.bx);
        var e = typeCast(NumericYAxis.$, this.fetchYAxis());
        if (!b.isEmpty && !c.isEmpty && e != null) {
            var f = new ScalerParams(0, b, c, e.cc, d);
            a = e.d8(e.k5, f);
        }
        return a;
    };
    StackedSeriesBase.prototype.s8 = function () {
        var a = typeCast(NumericYAxis.$, this.fetchYAxis());
        if (a != null) {
            return a.k5;
        }
        return 0;
    };
    StackedSeriesBase.prototype.tc = function (a) {
        return this.g9 < 0 || this.sw == null || this.sw.count == 0 ? -1 : this.g9 + this.sw.indexOf(a);
    };
    StackedSeriesBase.prototype.tb = function (a) {
        var b = this.ca != null ? this.ca.pg : Rect.empty;
        var c = this.bx.bu;
        var d = this.getEffectiveViewport1(this.bx);
        var e = typeCast(CategoryAxisBase.$, this.fetchXAxis());
        var f = -1;
        if (e != null && !b.isEmpty && !c.isEmpty) {
            var g = new ScalerParams(0, b, c, e.cc, d);
            var h = this.o7(this.bx);
            var i = e.eb(h.left, g);
            var j = e.eb(h.right, g);
            var k = (a.x - b.left) / b.width;
            var l = i + (k * (j - i));
            if (e.categoryMode != 0) {
                l -= 0.5;
            }
            var m = truncate(Math.round(l));
            f = m;
        }
        return f;
    };
    StackedSeriesBase.prototype.s5 = function (a, b, c, d) {
        var e = true;
        var f = typeCast(CategoryAxisBase.$, this.fetchXAxis());
        var g = typeCast(NumericYAxis.$, this.fetchYAxis());
        if (!d.o() || c.isEmpty || b.isEmpty || f == null || f.itemsSource == null || g == null || this.ch == null || f.bh == null || g.bh == null || g.kv == g.ku) {
            e = false;
        }
        var h = d;
        var i = h.cr.d;
        if (a.valueColumn == null || a.valueColumn.count == 0 || i < 1 || a._visibility != 0) {
            e = false;
        }
        return e;
    };
    StackedSeriesBase.prototype.ti = function () {
        var e_8, _a;
        if (this.ca == null || this.s0 == null) {
            return;
        }
        if (!this.s2) {
            this.sx.clear();
            try {
                for (var _b = __values(fromEnum(this.series)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var a = _c.value;
                    if (!this.s0.c.contains(a)) {
                        this.s0.c.add(a);
                    }
                }
            }
            catch (e_8_1) {
                e_8 = { error: e_8_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_8)
                        throw e_8.error;
                }
            }
            this.tn();
            return;
        }
    };
    StackedSeriesBase.prototype.sl = function (a, b) {
        _super.prototype.sl.call(this, a, b);
        this.s0.h();
    };
    StackedSeriesBase.prototype.tk = function (a, b, c) {
    };
    StackedSeriesBase.prototype.tj = function () {
        var e_9, _a;
        if (this.ch == null) {
            return;
        }
        var a = this.ch.count;
        this.ss = new Array(a);
        this.st = new Array(a);
        for (var b = 0; b < a; b++) {
            this.ss[b] = 0;
            this.st[b] = 0;
        }
        this.ta = Number.POSITIVE_INFINITY;
        this.s9 = Number.NEGATIVE_INFINITY;
        var c = 0;
        try {
            for (var _b = __values(fromEnum(this.sw)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var d = _c.value;
                if (d.itemsSource != null && d.visualSeriesLink == null) {
                    continue;
                }
                if (d.itemsSource != null) {
                    d.x = d.visualSeriesLink.valueColumn;
                }
                if (d.itemsSource == null) {
                    this.ch.deregisterColumn(d.x);
                    d.x = this.ce(d.d4);
                }
                if (d.visualSeriesLink != null && d.itemsSource == null) {
                    d.visualSeriesLink.s3 = true;
                    d.visualSeriesLink.valueColumn = d.x;
                    d.visualSeriesLink.s3 = false;
                }
                d.aj = true;
                if (d.x != null) {
                    d.ap.clear();
                    d.aq.clear();
                    for (var e = 0; e < d.x.count; e++) {
                        var f = d.x.item(e);
                        if (f < c) {
                            d.ap.add(c);
                            d.aq.add(this.st[e]);
                            this.st[e] = this.st[e] + f;
                            if (d.aj) {
                                d.aj = false;
                            }
                        }
                        else if (f >= c) {
                            d.ap.add(this.ss[e]);
                            d.aq.add(c);
                            this.ss[e] = this.ss[e] + f;
                        }
                        else if (isNaN_(f) || isInfinity(f)) {
                            d.ap.add(this.ss[e]);
                            d.aq.add(this.st[e]);
                        }
                    }
                }
            }
        }
        catch (e_9_1) {
            e_9 = { error: e_9_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_9)
                    throw e_9.error;
            }
        }
        for (var g = 0; g < a; g++) {
            this.ta = Math.min(this.ta, this.st[g]);
            this.s9 = Math.max(this.s9, this.ss[g]);
        }
    };
    StackedSeriesBase.prototype.lm = function (a, b, c, d) {
        var e_10, _a, e_11, _b, e_12, _c, e_13, _d, e_14, _e, e_15, _f, e_16, _g, e_17, _h, e_18, _j, e_19, _k, e_20, _l, e_21, _m, e_22, _o, e_23, _p, e_24, _q, e_25, _r, e_26, _s, e_27, _t, e_28, _u, e_29, _v, e_30, _w, e_31, _x, e_32, _y, e_33, _z, e_34, _0, e_35, _1, e_36, _2, e_37, _3, e_38, _4, e_39, _5, e_40, _6, e_41, _7, e_42, _8, e_43, _9, e_44, _10, e_45, _11;
        _super.prototype.lm.call(this, a, b, c, d);
        switch (b) {
            case "SeriesViewer":
                if (c != null && d == null) {
                    this.kl(this.fetchXAxis());
                    this.kl(this.fetchYAxis());
                }
                if (c == null && d != null) {
                    this.lr(this.fetchXAxis());
                    this.lr(this.fetchYAxis());
                }
                if (this.sw != null) {
                    try {
                        for (var _12 = __values(fromEnum(this.sw)), _13 = _12.next(); !_13.done; _13 = _12.next()) {
                            var e = _13.value;
                            e.w = this.ca;
                        }
                    }
                    catch (e_10_1) {
                        e_10 = { error: e_10_1 };
                    }
                    finally {
                        try {
                            if (_13 && !_13.done && (_a = _12.return))
                                _a.call(_12);
                        }
                        finally {
                            if (e_10)
                                throw e_10.error;
                        }
                    }
                    this.l0(false);
                }
                break;
            case "ItemsSource":
                if (this.sw != null) {
                    try {
                        for (var _14 = __values(fromEnum(this.sw)), _15 = _14.next(); !_15.done; _15 = _14.next()) {
                            var f = _15.value;
                            if (f.itemsSource == null) {
                                if (f.visualSeriesLink != null) {
                                    f.visualSeriesLink.itemsSource = d;
                                }
                            }
                        }
                    }
                    catch (e_11_1) {
                        e_11 = { error: e_11_1 };
                    }
                    finally {
                        try {
                            if (_15 && !_15.done && (_b = _14.return))
                                _b.call(_14);
                        }
                        finally {
                            if (e_11)
                                throw e_11.error;
                        }
                    }
                }
                break;
            case "FastItemsSource":
                if (this.s2) {
                    this.ti();
                }
                if (!this.rx()) {
                    this.s1.cr.g(this.gh);
                }
                this.l0(false);
                break;
            case StackedSeriesBase.$$p[0]:
                this.ti();
                break;
            case StackedSeriesBase.$$p[1]:
                if (this.ca != null) {
                    this.ca.km(this.s0.f);
                }
                break;
            case StackedSeriesBase.$$p[2]:
                try {
                    for (var _16 = __values(fromEnum(this.sw)), _17 = _16.next(); !_17.done; _17 = _16.next()) {
                        var g = _17.value;
                        g.fe();
                    }
                }
                catch (e_12_1) {
                    e_12 = { error: e_12_1 };
                }
                finally {
                    try {
                        if (_17 && !_17.done && (_c = _16.return))
                            _c.call(_16);
                    }
                    finally {
                        if (e_12)
                            throw e_12.error;
                    }
                }
                break;
            case "Brush":
                try {
                    for (var _18 = __values(fromEnum(this.sw)), _19 = _18.next(); !_19.done; _19 = _18.next()) {
                        var h = _19.value;
                        h.ee();
                    }
                }
                catch (e_13_1) {
                    e_13 = { error: e_13_1 };
                }
                finally {
                    try {
                        if (_19 && !_19.done && (_d = _18.return))
                            _d.call(_18);
                    }
                    finally {
                        if (e_13)
                            throw e_13.error;
                    }
                }
                break;
            case "DashArray":
                try {
                    for (var _20 = __values(fromEnum(this.sw)), _21 = _20.next(); !_21.done; _21 = _20.next()) {
                        var i = _21.value;
                        i.ef();
                    }
                }
                catch (e_14_1) {
                    e_14 = { error: e_14_1 };
                }
                finally {
                    try {
                        if (_21 && !_21.done && (_e = _20.return))
                            _e.call(_20);
                    }
                    finally {
                        if (e_14)
                            throw e_14.error;
                    }
                }
                break;
            case "HighlightingFadeOpacity":
                try {
                    for (var _22 = __values(fromEnum(this.sw)), _23 = _22.next(); !_23.done; _23 = _22.next()) {
                        var j = _23.value;
                        j.ei();
                    }
                }
                catch (e_15_1) {
                    e_15 = { error: e_15_1 };
                }
                finally {
                    try {
                        if (_23 && !_23.done && (_f = _22.return))
                            _f.call(_22);
                    }
                    finally {
                        if (e_15)
                            throw e_15.error;
                    }
                }
                break;
            case "DashCap":
                try {
                    for (var _24 = __values(fromEnum(this.sw)), _25 = _24.next(); !_25.done; _25 = _24.next()) {
                        var k = _25.value;
                        k.eg();
                    }
                }
                catch (e_16_1) {
                    e_16 = { error: e_16_1 };
                }
                finally {
                    try {
                        if (_25 && !_25.done && (_g = _24.return))
                            _g.call(_24);
                    }
                    finally {
                        if (e_16)
                            throw e_16.error;
                    }
                }
                break;
            case "IsDropShadowEnabled":
                try {
                    for (var _26 = __values(fromEnum(this.sw)), _27 = _26.next(); !_27.done; _27 = _26.next()) {
                        var l = _27.value;
                        l.ej();
                    }
                }
                catch (e_17_1) {
                    e_17 = { error: e_17_1 };
                }
                finally {
                    try {
                        if (_27 && !_27.done && (_h = _26.return))
                            _h.call(_26);
                    }
                    finally {
                        if (e_17)
                            throw e_17.error;
                    }
                }
                break;
            case "ShadowBlur":
                try {
                    for (var _28 = __values(fromEnum(this.sw)), _29 = _28.next(); !_29.done; _29 = _28.next()) {
                        var m = _29.value;
                        m.e5();
                    }
                }
                catch (e_18_1) {
                    e_18 = { error: e_18_1 };
                }
                finally {
                    try {
                        if (_29 && !_29.done && (_j = _28.return))
                            _j.call(_28);
                    }
                    finally {
                        if (e_18)
                            throw e_18.error;
                    }
                }
                break;
            case "ShadowColor":
                try {
                    for (var _30 = __values(fromEnum(this.sw)), _31 = _30.next(); !_31.done; _31 = _30.next()) {
                        var n = _31.value;
                        n.e6();
                    }
                }
                catch (e_19_1) {
                    e_19 = { error: e_19_1 };
                }
                finally {
                    try {
                        if (_31 && !_31.done && (_k = _30.return))
                            _k.call(_30);
                    }
                    finally {
                        if (e_19)
                            throw e_19.error;
                    }
                }
                break;
            case "UseSingleShadow":
                try {
                    for (var _32 = __values(fromEnum(this.sw)), _33 = _32.next(); !_33.done; _33 = _32.next()) {
                        var o = _33.value;
                        o.fd();
                    }
                }
                catch (e_20_1) {
                    e_20 = { error: e_20_1 };
                }
                finally {
                    try {
                        if (_33 && !_33.done && (_l = _32.return))
                            _l.call(_32);
                    }
                    finally {
                        if (e_20)
                            throw e_20.error;
                    }
                }
                break;
            case "ShadowOffsetX":
                try {
                    for (var _34 = __values(fromEnum(this.sw)), _35 = _34.next(); !_35.done; _35 = _34.next()) {
                        var p = _35.value;
                        p.e7();
                    }
                }
                catch (e_21_1) {
                    e_21 = { error: e_21_1 };
                }
                finally {
                    try {
                        if (_35 && !_35.done && (_m = _34.return))
                            _m.call(_34);
                    }
                    finally {
                        if (e_21)
                            throw e_21.error;
                    }
                }
                break;
            case "ShadowOffsetY":
                try {
                    for (var _36 = __values(fromEnum(this.sw)), _37 = _36.next(); !_37.done; _37 = _36.next()) {
                        var q = _37.value;
                        q.e8();
                    }
                }
                catch (e_22_1) {
                    e_22 = { error: e_22_1 };
                }
                finally {
                    try {
                        if (_37 && !_37.done && (_o = _36.return))
                            _o.call(_36);
                    }
                    finally {
                        if (e_22)
                            throw e_22.error;
                    }
                }
                break;
            case "EndCap":
                try {
                    for (var _38 = __values(fromEnum(this.sw)), _39 = _38.next(); !_39.done; _39 = _38.next()) {
                        var r = _39.value;
                        r.eh();
                    }
                }
                catch (e_23_1) {
                    e_23 = { error: e_23_1 };
                }
                finally {
                    try {
                        if (_39 && !_39.done && (_p = _38.return))
                            _p.call(_38);
                    }
                    finally {
                        if (e_23)
                            throw e_23.error;
                    }
                }
                break;
            case "IsHitTestVisible":
                try {
                    for (var _40 = __values(fromEnum(this.sw)), _41 = _40.next(); !_41.done; _41 = _40.next()) {
                        var s = _41.value;
                        s.ek();
                    }
                }
                catch (e_24_1) {
                    e_24 = { error: e_24_1 };
                }
                finally {
                    try {
                        if (_41 && !_41.done && (_q = _40.return))
                            _q.call(_40);
                    }
                    finally {
                        if (e_24)
                            throw e_24.error;
                    }
                }
                break;
            case "LegendItemBadgeTemplate":
                try {
                    for (var _42 = __values(fromEnum(this.sw)), _43 = _42.next(); !_43.done; _43 = _42.next()) {
                        var t = _43.value;
                        t.ep();
                    }
                }
                catch (e_25_1) {
                    e_25 = { error: e_25_1 };
                }
                finally {
                    try {
                        if (_43 && !_43.done && (_r = _42.return))
                            _r.call(_42);
                    }
                    finally {
                        if (e_25)
                            throw e_25.error;
                    }
                }
                break;
            case "LegendItemTemplate":
                try {
                    for (var _44 = __values(fromEnum(this.sw)), _45 = _44.next(); !_45.done; _45 = _44.next()) {
                        var u = _45.value;
                        u.eq();
                    }
                }
                catch (e_26_1) {
                    e_26 = { error: e_26_1 };
                }
                finally {
                    try {
                        if (_45 && !_45.done && (_s = _44.return))
                            _s.call(_44);
                    }
                    finally {
                        if (e_26)
                            throw e_26.error;
                    }
                }
                break;
            case "LegendItemVisibility":
                try {
                    for (var _46 = __values(fromEnum(this.sw)), _47 = _46.next(); !_47.done; _47 = _46.next()) {
                        var v = _47.value;
                        v.er();
                    }
                }
                catch (e_27_1) {
                    e_27 = { error: e_27_1 };
                }
                finally {
                    try {
                        if (_47 && !_47.done && (_t = _46.return))
                            _t.call(_46);
                    }
                    finally {
                        if (e_27)
                            throw e_27.error;
                    }
                }
                break;
            case "LegendItemBadgeShape":
                try {
                    for (var _48 = __values(fromEnum(this.sw)), _49 = _48.next(); !_49.done; _49 = _48.next()) {
                        var w = _49.value;
                        w.eo();
                    }
                }
                catch (e_28_1) {
                    e_28 = { error: e_28_1 };
                }
                finally {
                    try {
                        if (_49 && !_49.done && (_u = _48.return))
                            _u.call(_48);
                    }
                    finally {
                        if (e_28)
                            throw e_28.error;
                    }
                }
                break;
            case "LegendItemBadgeMode":
                try {
                    for (var _50 = __values(fromEnum(this.sw)), _51 = _50.next(); !_51.done; _51 = _50.next()) {
                        var x = _51.value;
                        x.en();
                    }
                }
                catch (e_29_1) {
                    e_29 = { error: e_29_1 };
                }
                finally {
                    try {
                        if (_51 && !_51.done && (_v = _50.return))
                            _v.call(_50);
                    }
                    finally {
                        if (e_29)
                            throw e_29.error;
                    }
                }
                break;
            case "MarkerTemplate":
                try {
                    for (var _52 = __values(fromEnum(this.sw)), _53 = _52.next(); !_53.done; _53 = _52.next()) {
                        var y = _53.value;
                        y.ew();
                    }
                }
                catch (e_30_1) {
                    e_30 = { error: e_30_1 };
                }
                finally {
                    try {
                        if (_53 && !_53.done && (_w = _52.return))
                            _w.call(_52);
                    }
                    finally {
                        if (e_30)
                            throw e_30.error;
                    }
                }
                break;
            case "MarkerType":
                try {
                    for (var _54 = __values(fromEnum(this.sw)), _55 = _54.next(); !_55.done; _55 = _54.next()) {
                        var z = _55.value;
                        z.ey();
                    }
                }
                catch (e_31_1) {
                    e_31 = { error: e_31_1 };
                }
                finally {
                    try {
                        if (_55 && !_55.done && (_x = _54.return))
                            _x.call(_54);
                    }
                    finally {
                        if (e_31)
                            throw e_31.error;
                    }
                }
                break;
            case "MarkerThickness":
                try {
                    for (var _56 = __values(fromEnum(this.sw)), _57 = _56.next(); !_57.done; _57 = _56.next()) {
                        var aa = _57.value;
                        aa.ex();
                    }
                }
                catch (e_32_1) {
                    e_32 = { error: e_32_1 };
                }
                finally {
                    try {
                        if (_57 && !_57.done && (_y = _56.return))
                            _y.call(_56);
                    }
                    finally {
                        if (e_32)
                            throw e_32.error;
                    }
                }
                break;
            case "MarkerBrush":
                try {
                    for (var _58 = __values(fromEnum(this.sw)), _59 = _58.next(); !_59.done; _59 = _58.next()) {
                        var ab = _59.value;
                        ab.es();
                    }
                }
                catch (e_33_1) {
                    e_33 = { error: e_33_1 };
                }
                finally {
                    try {
                        if (_59 && !_59.done && (_z = _58.return))
                            _z.call(_58);
                    }
                    finally {
                        if (e_33)
                            throw e_33.error;
                    }
                }
                break;
            case "MarkerOutline":
                try {
                    for (var _60 = __values(fromEnum(this.sw)), _61 = _60.next(); !_61.done; _61 = _60.next()) {
                        var ac = _61.value;
                        ac.eu();
                    }
                }
                catch (e_34_1) {
                    e_34 = { error: e_34_1 };
                }
                finally {
                    try {
                        if (_61 && !_61.done && (_0 = _60.return))
                            _0.call(_60);
                    }
                    finally {
                        if (e_34)
                            throw e_34.error;
                    }
                }
                break;
            case "MarkerStyle":
                try {
                    for (var _62 = __values(fromEnum(this.sw)), _63 = _62.next(); !_63.done; _63 = _62.next()) {
                        var ad = _63.value;
                        ad.ev();
                    }
                }
                catch (e_35_1) {
                    e_35 = { error: e_35_1 };
                }
                finally {
                    try {
                        if (_63 && !_63.done && (_1 = _62.return))
                            _1.call(_62);
                    }
                    finally {
                        if (e_35)
                            throw e_35.error;
                    }
                }
                break;
            case "Opacity":
                try {
                    for (var _64 = __values(fromEnum(this.sw)), _65 = _64.next(); !_65.done; _65 = _64.next()) {
                        var ae = _65.value;
                        ae.ez();
                    }
                }
                catch (e_36_1) {
                    e_36 = { error: e_36_1 };
                }
                finally {
                    try {
                        if (_65 && !_65.done && (_2 = _64.return))
                            _2.call(_64);
                    }
                    finally {
                        if (e_36)
                            throw e_36.error;
                    }
                }
                break;
            case "OpacityMask":
                try {
                    for (var _66 = __values(fromEnum(this.sw)), _67 = _66.next(); !_67.done; _67 = _66.next()) {
                        var af = _67.value;
                        af.e0();
                    }
                }
                catch (e_37_1) {
                    e_37 = { error: e_37_1 };
                }
                finally {
                    try {
                        if (_67 && !_67.done && (_3 = _66.return))
                            _3.call(_66);
                    }
                    finally {
                        if (e_37)
                            throw e_37.error;
                    }
                }
                break;
            case "AreaFillOpacity":
                try {
                    for (var _68 = __values(fromEnum(this.sw)), _69 = _68.next(); !_69.done; _69 = _68.next()) {
                        var ag = _69.value;
                        ag.ed();
                    }
                }
                catch (e_38_1) {
                    e_38 = { error: e_38_1 };
                }
                finally {
                    try {
                        if (_69 && !_69.done && (_4 = _68.return))
                            _4.call(_68);
                    }
                    finally {
                        if (e_38)
                            throw e_38.error;
                    }
                }
                break;
            case "Outline":
                try {
                    for (var _70 = __values(fromEnum(this.sw)), _71 = _70.next(); !_71.done; _71 = _70.next()) {
                        var ah = _71.value;
                        ah.e1();
                    }
                }
                catch (e_39_1) {
                    e_39 = { error: e_39_1 };
                }
                finally {
                    try {
                        if (_71 && !_71.done && (_5 = _70.return))
                            _5.call(_70);
                    }
                    finally {
                        if (e_39)
                            throw e_39.error;
                    }
                }
                break;
            case "StartCap":
                try {
                    for (var _72 = __values(fromEnum(this.sw)), _73 = _72.next(); !_73.done; _73 = _72.next()) {
                        var ai = _73.value;
                        ai.e9();
                    }
                }
                catch (e_40_1) {
                    e_40 = { error: e_40_1 };
                }
                finally {
                    try {
                        if (_73 && !_73.done && (_6 = _72.return))
                            _6.call(_72);
                    }
                    finally {
                        if (e_40)
                            throw e_40.error;
                    }
                }
                break;
            case "OutlineMode":
                try {
                    for (var _74 = __values(fromEnum(this.sw)), _75 = _74.next(); !_75.done; _75 = _74.next()) {
                        var aj = _75.value;
                        aj.e2();
                    }
                }
                catch (e_41_1) {
                    e_41 = { error: e_41_1 };
                }
                finally {
                    try {
                        if (_75 && !_75.done && (_7 = _74.return))
                            _7.call(_74);
                    }
                    finally {
                        if (e_41)
                            throw e_41.error;
                    }
                }
                break;
            case "MarkerFillOpacity":
                try {
                    for (var _76 = __values(fromEnum(this.sw)), _77 = _76.next(); !_77.done; _77 = _76.next()) {
                        var ak = _77.value;
                        ak.et();
                    }
                }
                catch (e_42_1) {
                    e_42 = { error: e_42_1 };
                }
                finally {
                    try {
                        if (_77 && !_77.done && (_8 = _76.return))
                            _8.call(_76);
                    }
                    finally {
                        if (e_42)
                            throw e_42.error;
                    }
                }
                break;
            case "Thickness":
                try {
                    for (var _78 = __values(fromEnum(this.sw)), _79 = _78.next(); !_79.done; _79 = _78.next()) {
                        var al = _79.value;
                        al.fa();
                    }
                }
                catch (e_43_1) {
                    e_43 = { error: e_43_1 };
                }
                finally {
                    try {
                        if (_79 && !_79.done && (_9 = _78.return))
                            _9.call(_78);
                    }
                    finally {
                        if (e_43)
                            throw e_43.error;
                    }
                }
                break;
            case "ToolTip":
                try {
                    for (var _80 = __values(fromEnum(this.sw)), _81 = _80.next(); !_81.done; _81 = _80.next()) {
                        var am = _81.value;
                        am.fb();
                    }
                }
                catch (e_44_1) {
                    e_44 = { error: e_44_1 };
                }
                finally {
                    try {
                        if (_81 && !_81.done && (_10 = _80.return))
                            _10.call(_80);
                    }
                    finally {
                        if (e_44)
                            throw e_44.error;
                    }
                }
                break;
            case "UseLightweightMarkers":
                try {
                    for (var _82 = __values(fromEnum(this.sw)), _83 = _82.next(); !_83.done; _83 = _82.next()) {
                        var an = _83.value;
                        an.fc();
                    }
                }
                catch (e_45_1) {
                    e_45 = { error: e_45_1 };
                }
                finally {
                    try {
                        if (_83 && !_83.done && (_11 = _82.return))
                            _11.call(_82);
                    }
                    finally {
                        if (e_45)
                            throw e_45.error;
                    }
                }
                break;
        }
    };
    Object.defineProperty(StackedSeriesBase.prototype, "currentCategoryMode", {
        get: function () {
            return this.preferredCategoryMode(typeCast(CategoryAxisBase.$, this.q2()));
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedSeriesBase.prototype, "scaler", {
        get: function () {
            return typeCast(ICategoryScaler_$type, this.q2());
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedSeriesBase.prototype, "yScaler", {
        get: function () {
            return typeCast(IScaler_$type, this.rn());
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedSeriesBase.prototype, "bucketizer", {
        get: function () {
            return this.rc.cr;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedSeriesBase.prototype, "currentMode2Index", {
        get: function () {
            return this.r6();
        },
        enumerable: false,
        configurable: true
    });
    StackedSeriesBase.prototype.provideCollisionDetector = function () {
        return new CollisionAvoider();
    };
    StackedSeriesBase.prototype.ek = function () {
        return false;
    };
    StackedSeriesBase.prototype.get_dh = function () {
        return false;
    };
    StackedSeriesBase.prototype.l2 = function (a, b) {
        var e_46, _a;
        var c = this.et;
        _super.prototype.l2.call(this, a, b);
        if (!c) {
            this.bx.a2(b);
            return;
        }
        this.bx.a2(b);
        if (this.ct(this.bw)) {
            return;
        }
        try {
            for (var _b = __values(fromEnum(this.series)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var d = _c.value;
                d.visualSeriesLink.l2(a, b);
            }
        }
        catch (e_46_1) {
            e_46 = { error: e_46_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_46)
                    throw e_46.error;
            }
        }
        this.et = false;
    };
    StackedSeriesBase.prototype.lz = function (a, b, c, d, e) {
        var e_47, _a;
        _super.prototype.lz.call(this, a, b, c, d, e);
        var f = this.a4.a$h.item(d);
        f.cr.g(this.gh);
        f.a1(c);
        if (this.ct(f)) {
            return;
        }
        if (this.su == null) {
            this.su = new CategoryFrame(3);
        }
        this.su.u();
        this.tj();
        this.q9(f).d(this.su, f);
        this.sl(this.su, f);
        try {
            for (var _b = __values(fromEnum(this.series)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var g = _c.value;
                g.visualSeriesLink.lz(a, b, c, d, e);
            }
        }
        catch (e_47_1) {
            e_47 = { error: e_47_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_47)
                    throw e_47.error;
            }
        }
    };
    StackedSeriesBase.prototype.hg = function () {
        var e_48, _a;
        var a = this.a6.exportStackedVisualData(this, this.pf);
        try {
            for (var _b = __values(fromEnum(this.series)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var b = _c.value;
                var c = this.a6.createFragmentVisualData(this, this.pf, getInstanceType(b).typeName, b.dk);
                b.visualSeriesLink.bx.al(c);
                this.a6.addSubSeriesVisualData(a, c);
            }
        }
        catch (e_48_1) {
            e_48 = { error: e_48_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_48)
                    throw e_48.error;
            }
        }
        this.kr(a);
        this.bx.al(a);
        return a;
    };
    Object.defineProperty(StackedSeriesBase.prototype, "mayContainUnknowns", {
        get: function () {
            return true;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedSeriesBase.prototype, "useHighMarkerFidelity", {
        get: function () {
            return this.ry;
        },
        enumerable: false,
        configurable: true
    });
    StackedSeriesBase.$t = markType(StackedSeriesBase, 'StackedSeriesBase', CategorySeries.$, [IIsCategoryBased_$type]);
    StackedSeriesBase.$$p = markDep(DependencyProperty, PropertyMetadata, StackedSeriesBase, 'raisePropertyChanged', ['AutoGenerateSeries:s2:to', [0, false], 'ReverseLegendOrder:s4:tp', [0, false], 'SeriesVisibility:tr:tq', [Visibility_$type, enumGetBox(Visibility_$type, 0)]]);
    return StackedSeriesBase;
}(CategorySeries));
export { StackedSeriesBase };
/**
 * @hidden
 */
var HorizontalStackedSeriesBase = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(HorizontalStackedSeriesBase, _super);
    function HorizontalStackedSeriesBase() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    HorizontalStackedSeriesBase.prototype.getOffsetValue = function () {
        return this.q8.r(this.xAxis, this.bx.bv, this.bx.bu, this.getEffectiveViewport1(this.bx));
    };
    HorizontalStackedSeriesBase.prototype.getCategoryWidth = function () {
        return this.xAxis.getCategorySize(this.bx.bv, this.bx.bu, this.getEffectiveViewport1(this.bx));
    };
    HorizontalStackedSeriesBase.prototype.fetchXAxis = function () {
        return this.xAxis;
    };
    HorizontalStackedSeriesBase.prototype.fetchYAxis = function () {
        return this.yAxis;
    };
    HorizontalStackedSeriesBase.prototype.ag = function () {
        return [this.fetchXAxis(), this.fetchYAxis()];
    };
    HorizontalStackedSeriesBase.prototype.rx = function () {
        return this.yAxis != null && this.yAxis.cv();
    };
    HorizontalStackedSeriesBase.prototype.ma = function () {
        var e_49, _a;
        var a = (typeCast(XamDataChart.$, this.ca));
        if (a != null) {
            this.fi = isNaN_(this.fq) ? a.p9.fk : this.fq;
            try {
                for (var _b = __values(fromEnum(this.sw)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var b = _c.value;
                    b.ed();
                }
            }
            catch (e_49_1) {
                e_49 = { error: e_49_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_49)
                        throw e_49.error;
                }
            }
        }
    };
    HorizontalStackedSeriesBase.prototype.lm = function (a, b, c, d) {
        _super.prototype.lm.call(this, a, b, c, d);
        switch (b) {
            case HorizontalStackedSeriesBase.$$p[0]:
                if (c != d) {
                    this.kl(typeCast(Axis.$, c));
                    this.lr(typeCast(Axis.$, d));
                    this.rc.cr.g(this.gh);
                    this.l0(false);
                    this.k7();
                }
                break;
            case HorizontalStackedSeriesBase.$$p[1]:
                if (c != d) {
                    this.kl(typeCast(Axis.$, c));
                    this.lr(typeCast(Axis.$, d));
                    this.rc.cr.g(this.gh);
                    this.rx();
                    this.l0(false);
                    this.k7();
                }
                break;
        }
    };
    HorizontalStackedSeriesBase.prototype.tv = function (a) {
        if (typeCast(NumericYAxis.$, a) !== null) {
            return true;
        }
        return false;
    };
    HorizontalStackedSeriesBase.prototype.tu = function (a) {
        if (typeCast(CategoryXAxis.$, a) !== null || a.b9) {
            return true;
        }
        return false;
    };
    Object.defineProperty(HorizontalStackedSeriesBase.prototype, "useHighMarkerFidelity", {
        get: function () {
            return this.ry;
        },
        enumerable: false,
        configurable: true
    });
    HorizontalStackedSeriesBase.$t = markType(HorizontalStackedSeriesBase, 'HorizontalStackedSeriesBase', StackedSeriesBase.$);
    HorizontalStackedSeriesBase.$$p = markDep(DependencyProperty, PropertyMetadata, HorizontalStackedSeriesBase, 'raisePropertyChanged', ['XAxis::ty', [CategoryAxisBase.$, null], 'YAxis::tz', [NumericYAxis.$, null]]);
    return HorizontalStackedSeriesBase;
}(StackedSeriesBase));
export { HorizontalStackedSeriesBase };
/**
 * @hidden
 */
var StackedAreaSeries = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(StackedAreaSeries, _super);
    function StackedAreaSeries() {
        var _this = _super.call(this) || this;
        _this.ab = StackedAreaSeries.$;
        return _this;
    }
    StackedAreaSeries.prototype.get_c7 = function () {
        return true;
    };
    StackedAreaSeries.prototype.ac = function () {
        _super.prototype.ac.call(this);
        this.l0(false);
    };
    StackedAreaSeries.prototype.bu = function () {
        return new StackedAreaSeriesView(this);
    };
    StackedAreaSeries.prototype.lh = function (a) {
        _super.prototype.lh.call(this, a);
        this.t0 = a;
    };
    StackedAreaSeries.prototype.ap = function (a) {
        if (this.itemsSource == null) {
            return null;
        }
        if (a == this.xAxis) {
            return new AxisRange(0, this.ch.count - 1);
        }
        if (a == this.yAxis) {
            this.tj();
            return new AxisRange(this.ta, this.s9);
        }
        return null;
    };
    StackedAreaSeries.prototype.preferredCategoryMode = function (a) {
        return 0;
    };
    Object.defineProperty(StackedAreaSeries.prototype, "useHighMarkerFidelity", {
        get: function () {
            return this.ry;
        },
        enumerable: false,
        configurable: true
    });
    StackedAreaSeries.$t = markType(StackedAreaSeries, 'StackedAreaSeries', HorizontalStackedSeriesBase.$);
    return StackedAreaSeries;
}(HorizontalStackedSeriesBase));
export { StackedAreaSeries };
/**
 * @hidden
 */
var VerticalStackedSeriesBase = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(VerticalStackedSeriesBase, _super);
    function VerticalStackedSeriesBase() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    VerticalStackedSeriesBase.prototype.q2 = function () {
        return this.yAxis;
    };
    VerticalStackedSeriesBase.prototype.rn = function () {
        return this.xAxis;
    };
    VerticalStackedSeriesBase.prototype.getOffsetValue = function () {
        return this.q8.r(this.yAxis, this.bx.bv, this.bx.bu, this.getEffectiveViewport1(this.bx));
    };
    VerticalStackedSeriesBase.prototype.getCategoryWidth = function () {
        return this.yAxis.getCategorySize(this.bx.bv, this.bx.bu, this.getEffectiveViewport1(this.bx));
    };
    VerticalStackedSeriesBase.prototype.get_isVertical = function () {
        return true;
    };
    VerticalStackedSeriesBase.prototype.fetchXAxis = function () {
        return this.xAxis;
    };
    VerticalStackedSeriesBase.prototype.fetchYAxis = function () {
        return this.yAxis;
    };
    VerticalStackedSeriesBase.prototype.rx = function () {
        return this.xAxis != null && this.xAxis.cv();
    };
    VerticalStackedSeriesBase.prototype.lm = function (a, b, c, d) {
        _super.prototype.lm.call(this, a, b, c, d);
        switch (b) {
            case VerticalStackedSeriesBase.$$p[0]:
                if (c != d) {
                    this.kl(typeCast(Axis.$, c));
                    this.lr(typeCast(Axis.$, d));
                    this.rc.cr.g(this.gh);
                    this.l0(false);
                    this.k7();
                }
                break;
            case VerticalStackedSeriesBase.$$p[1]:
                if (c != d) {
                    this.kl(typeCast(Axis.$, c));
                    this.lr(typeCast(Axis.$, d));
                    this.rc.cr.g(this.gh);
                    this.rx();
                    this.l0(false);
                    this.k7();
                }
                break;
        }
    };
    VerticalStackedSeriesBase.prototype.tv = function (a) {
        if (typeCast(CategoryYAxis.$, a) !== null) {
            return true;
        }
        return false;
    };
    VerticalStackedSeriesBase.prototype.tu = function (a) {
        if (typeCast(NumericXAxis.$, a) !== null) {
            return true;
        }
        return false;
    };
    Object.defineProperty(VerticalStackedSeriesBase.prototype, "useHighMarkerFidelity", {
        get: function () {
            return this.ry;
        },
        enumerable: false,
        configurable: true
    });
    VerticalStackedSeriesBase.$t = markType(VerticalStackedSeriesBase, 'VerticalStackedSeriesBase', StackedSeriesBase.$);
    VerticalStackedSeriesBase.$$p = markDep(DependencyProperty, PropertyMetadata, VerticalStackedSeriesBase, 'raisePropertyChanged', ['XAxis::ty', [NumericXAxis.$, null], 'YAxis::tz', [CategoryYAxis.$, null]]);
    return VerticalStackedSeriesBase;
}(StackedSeriesBase));
export { VerticalStackedSeriesBase };
/**
 * @hidden
 */
var StackedBarSeries = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(StackedBarSeries, _super);
    function StackedBarSeries() {
        var _this = _super.call(this) || this;
        _this.ab = StackedBarSeries.$;
        return _this;
    }
    StackedBarSeries.prototype.get_c9 = function () {
        return true;
    };
    StackedBarSeries.prototype.get_dw = function () {
        return true;
    };
    StackedBarSeries.prototype.ac = function () {
        _super.prototype.ac.call(this);
        this.l0(false);
    };
    StackedBarSeries.prototype.bu = function () {
        return new StackedBarSeriesView(this);
    };
    StackedBarSeries.prototype.lh = function (a) {
        _super.prototype.lh.call(this, a);
        this.t0 = a;
    };
    StackedBarSeries.prototype.sv = function () {
        return this.t0;
    };
    StackedBarSeries.prototype.preferredCategoryMode = function (a) {
        return 2;
    };
    StackedBarSeries.prototype.r6 = function () {
        var e_50, _a;
        var a = 0;
        try {
            for (var _b = __values(fromEnum(this.ca.series)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var b = _c.value;
                if (b == this) {
                    return a;
                }
                var c = typeCast(IBarSeries_$type, b);
                if (c != null && c.yAxis == this.yAxis && c.getPreferredCategoryMode() == 2) {
                    a++;
                }
            }
        }
        catch (e_50_1) {
            e_50 = { error: e_50_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_50)
                    throw e_50.error;
            }
        }
        return -1;
    };
    StackedBarSeries.prototype.s7 = function () {
        var a = 0;
        var b = this.ca != null ? this.ca.pg : Rect.empty;
        var c = this.bx.bu;
        if (!b.isEmpty && !c.isEmpty && this.xAxis != null) {
            var d = this.getEffectiveViewport1(this.bx);
            var e = new ScalerParams(0, b, c, this.xAxis.cc, d);
            a = this.xAxis.d8(this.xAxis.k5, e);
        }
        return a;
    };
    StackedBarSeries.prototype.s8 = function () {
        if (this.xAxis != null) {
            return this.xAxis.k5;
        }
        return 0;
    };
    StackedBarSeries.prototype.ap = function (a) {
        if (this.itemsSource == null) {
            return null;
        }
        if (a == this.yAxis) {
            return new AxisRange(0, this.ch.count - 1);
        }
        if (a == this.xAxis) {
            this.tj();
            return new AxisRange(this.ta, this.s9);
        }
        return null;
    };
    StackedBarSeries.prototype.eh = function (a) {
        var b = this.ch != null ? this.ch.indexOf(a) : -1;
        var c = this.ca != null ? this.ca.pg : Rect.empty;
        c = c.copy();
        var d = this.bx.bu;
        var e = new Rect(0, 0, 0, 1, 1);
        var f = this.o9(this.bx);
        var g = new ScalerParams(0, e, e, this.xAxis.cc, f);
        var h = new ScalerParams(0, e, e, this.yAxis.cc, f);
        if (b >= 0 && Rect.l_op_Inequality(c, null) && Rect.l_op_Inequality(d, null)) {
            if (this.yAxis != null) {
                var i = this.yAxis.d8(b, h);
                if (i < c.top + 0.1 * c.height) {
                    i = i + 0.4 * c.height;
                }
                if (i > c.bottom - 0.1 * c.height) {
                    i = i - 0.4 * c.height;
                }
                c.y = i - 0.5 * c.height;
            }
            if (this.xAxis != null && this.ss != null && b < this.ss.length) {
                var j = this.xAxis.d8(this.ss[b], g);
                var k = this.xAxis.d8(this.st[b], g);
                if (!isNaN_(j) && !isNaN_(k)) {
                    var l = Math.abs(k - j);
                    if (c.width < l) {
                        c.width = l;
                        c.x = Math.min(k, j);
                    }
                    else {
                        if (k < c.left + 0.1 * c.width) {
                            k = k + 0.4 * c.width;
                        }
                        if (k > c.right - 0.1 * c.width) {
                            k = k - 0.4 * c.width;
                        }
                        c.x = k - 0.5 * c.width;
                    }
                }
            }
            this.b5.ap(this.ca, c, true);
        }
        return b >= 0;
    };
    StackedBarSeries.prototype.e3 = function (a, b, c) {
        var d = true;
        var e = c;
        if (!c.o() || b.isEmpty || a.isEmpty || this.yAxis == null || this.yAxis.itemsSource == null || this.xAxis == null || this.ch == null || this.xAxis.bh == null || this.yAxis.bh == null || this.xAxis.kv == this.xAxis.ku) {
            e.cr.d = 0;
            d = false;
        }
        return d;
    };
    StackedBarSeries.prototype.kk = function (a, b, c, d) {
        switch (a) {
            case 4:
            case 1:
            case 0:
                this.rc.cr.g(this.gh);
                break;
        }
        switch (a) {
            case 4:
                if (this.xAxis != null && !this.xAxis.cv()) {
                    this.l0(true);
                }
                break;
            case 1:
                if (this.xAxis != null && !this.xAxis.cv()) {
                    this.l0(true);
                }
                break;
            case 0:
                if (this.xAxis != null && !this.xAxis.cv()) {
                    this.l0(true);
                }
                break;
            case 2:
                if (this.rc.cr.d > 0) {
                    this.l0(true);
                }
                break;
            case 3:
                if (this.xAxis != null && !this.xAxis.cv()) {
                    this.l0(true);
                }
                break;
        }
    };
    StackedBarSeries.prototype.g0 = function (a) {
        var b = this.ca != null ? this.ca.pg : Rect.empty;
        var c = this.bx.bu;
        var d = this.getEffectiveViewport1(this.bx);
        var e = -1;
        if (this.yAxis != null && !b.isEmpty && !c.isEmpty) {
            var f = new ScalerParams(0, b, c, this.yAxis.cc, d);
            var g = this.o7(this.bx);
            var h = this.yAxis.eb(g.top, f);
            var i = this.yAxis.eb(g.bottom, f);
            var j = (a.y - b.top) / b.height;
            var k = h + (j * (i - h));
            if (this.yAxis.categoryMode != 0) {
                k -= 0.5;
            }
            var l = truncate(Math.round(k));
            e = l;
        }
        return e;
    };
    StackedBarSeries.prototype.hh = function (a) {
        var b = this.g0(a);
        return b >= 0 && this.ch != null && b < this.ch.count ? this.ch.item(b) : null;
    };
    StackedBarSeries.prototype.tn = function () {
        if (this.xAxis != null) {
            this.xAxis.cw(true);
        }
        if (this.yAxis != null) {
            this.yAxis.cw(true);
        }
    };
    StackedBarSeries.prototype.tb = function (a) {
        return this.g0(a);
    };
    StackedBarSeries.prototype.s5 = function (a, b, c, d) {
        var e = true;
        if (!d.o() || c.isEmpty || b.isEmpty || this.yAxis == null || this.yAxis.itemsSource == null || this.xAxis == null || this.ch == null || this.xAxis.bh == null || this.yAxis.bh == null) {
            e = false;
        }
        var f = d;
        if (a.valueColumn == null || a.valueColumn.count == 0 || f.cr.d < 1) {
            e = false;
        }
        return e;
    };
    StackedBarSeries.prototype.f1 = function () {
        return this.yAxis.ki(this.bx.bv, this.bx.bu, this.getEffectiveViewport1(this.bx));
    };
    StackedBarSeries.prototype.tk = function (a, b, c) {
        var e_51, _a;
        var d = typeCast(BarFragment.$, a);
        var e = typeCast(ColumnFragmentView.$, c);
        if (!this.e3(c.bu, c.bv, c) || d == null || e == null) {
            return;
        }
        var f = this.yAxis.ki(c.bv, c.bu, this.getEffectiveViewport1(c));
        if (isNaN_(f) || isInfinity(f)) {
            d.uq.db.count = 0;
            return;
        }
        var g = 0;
        d.rb.a0(d, d.rv(), function (h, i) { return d.qw(h, i); }, d.r3(c), d.r4(c));
        d.rb.r = d.ut;
        d.rb.s = d.uu;
        d.rb.k = d.ut;
        d.rb.l = d.uu;
        var h = d.valueColumn.count;
        var i = c.bv;
        var j = c.bu;
        var k = this.getEffectiveViewport1(c);
        var l = false;
        var m = d.rb.b;
        if (m != null) {
            l = true;
        }
        var n = b.f;
        var o = d.q2();
        var p = new ScalerParams(0, i, j, o.cc, k);
        var q = 0;
        try {
            for (var _b = __values(fromEnum(b.f)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var r = _c.value;
                if (isInfinity(r[0]) || isNaN_(r[0]) || isInfinity(r[1]) || isInfinity(r[2]) || isNaN_(r[1]) || isNaN_(r[2])) {
                    q++;
                    continue;
                }
                var s = r[0] - 0.5 * f;
                var t = r[1];
                var u = r[2];
                u = Math.max(u, -100);
                t = Math.min(t, c.bu.right + 100);
                var v = e.db.item(g);
                v.height = f;
                v.width = Math.abs(t - u);
                if (l) {
                    d.sh(n, q, h, o, p, c.q);
                }
                d.rb.ad(v, false, false, false, false);
                v.am = d.rb.k;
                v.an = d.rb.l;
                e.di(v, Math.min(t, u), s);
                g++;
                q++;
            }
        }
        catch (e_51_1) {
            e_51 = { error: e_51_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_51)
                    throw e_51.error;
            }
        }
        e.db.count = g;
    };
    StackedBarSeries.prototype.lm = function (a, b, c, d) {
        var e_52, _a;
        _super.prototype.lm.call(this, a, b, c, d);
        switch (b) {
            case StackedBarSeries.$$p[0]:
            case StackedBarSeries.$$p[1]:
                try {
                    for (var _b = __values(fromEnum(this.sw)), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var e = _c.value;
                        e.e3();
                        e.e4();
                    }
                }
                catch (e_52_1) {
                    e_52 = { error: e_52_1 };
                }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return))
                            _a.call(_b);
                    }
                    finally {
                        if (e_52)
                            throw e_52.error;
                    }
                }
                this.l0(false);
                break;
            case "SyncLink":
                if (this.xAxis != null) {
                    this.xAxis.cv();
                }
                break;
            case "FastItemsSource":
                if (this.xAxis != null && !this.xAxis.cv()) {
                    this.t0.cr.g(this.gh);
                }
                this.l0(false);
                break;
            case "SeriesViewer":
                if (c != null && d == null) {
                    this.kl(this.xAxis);
                    this.kl(this.yAxis);
                }
                if (c == null && d != null) {
                    this.lr(this.xAxis);
                    this.lr(this.yAxis);
                }
                this.t0.cr.g(this.gh);
                this.l0(false);
                if (this.xAxis != null) {
                    this.xAxis.cv();
                }
                break;
        }
    };
    StackedBarSeries.prototype.getPreferredCategoryMode = function () {
        return this.preferredCategoryMode(this.yAxis);
    };
    Object.defineProperty(StackedBarSeries.prototype, "useHighMarkerFidelity", {
        get: function () {
            return this.ry;
        },
        enumerable: false,
        configurable: true
    });
    StackedBarSeries.$t = markType(StackedBarSeries, 'StackedBarSeries', VerticalStackedSeriesBase.$, [IBarSeries_$type]);
    StackedBarSeries.$$p = markDep(DependencyProperty, PropertyMetadata, StackedBarSeries, 'raisePropertyChanged', ['RadiusX:t1:t5', [1, 0], 'RadiusY:t2:t6', [1, 0]]);
    return StackedBarSeries;
}(VerticalStackedSeriesBase));
export { StackedBarSeries };
/**
 * @hidden
 */
var StackedColumnSeries = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(StackedColumnSeries, _super);
    function StackedColumnSeries() {
        var _this = _super.call(this) || this;
        _this.ab = StackedColumnSeries.$;
        return _this;
    }
    StackedColumnSeries.prototype.get_db = function () {
        return true;
    };
    StackedColumnSeries.prototype.get_dw = function () {
        return true;
    };
    StackedColumnSeries.prototype.bu = function () {
        return new StackedColumnSeriesView(this);
    };
    StackedColumnSeries.prototype.lh = function (a) {
        _super.prototype.lh.call(this, a);
        this.t0 = a;
    };
    StackedColumnSeries.prototype.sv = function () {
        return this.t0;
    };
    StackedColumnSeries.prototype.preferredCategoryMode = function (a) {
        return 2;
    };
    StackedColumnSeries.prototype.ap = function (a) {
        if (this.itemsSource == null) {
            return null;
        }
        if (a == this.xAxis) {
            return new AxisRange(0, this.ch.count - 1);
        }
        if (a == this.yAxis) {
            this.tj();
            return new AxisRange(this.ta, this.s9);
        }
        return null;
    };
    StackedColumnSeries.prototype.f1 = function () {
        var a = this.getEffectiveViewport1(this.bx);
        return this.xAxis.ki(this.bx.bv, this.bx.bu, a);
    };
    StackedColumnSeries.prototype.tk = function (a, b, c) {
        var e_53, _a;
        var d = typeCast(ColumnFragment.$, a);
        var e = typeCast(ColumnFragmentView.$, c);
        if (!this.e3(c.bu, c.bv, c) || d == null || e == null) {
            return;
        }
        if (d == null) {
            return;
        }
        var f = this.getEffectiveViewport1(c);
        var g = this.xAxis.ki(c.bv, c.bu, f);
        if (isNaN_(g) || isInfinity(g)) {
            d.uq.db.count = 0;
            return;
        }
        var h = 0;
        d.rb.a0(d, d.rv(), function (i, j) { return d.qw(i, j); }, d.r3(c), d.r4(c));
        d.rb.r = d.ut;
        d.rb.s = d.uu;
        d.rb.k = d.ut;
        d.rb.l = d.uu;
        var i = c.bv;
        var j = c.bu;
        var k = this.getEffectiveViewport1(c);
        var l = false;
        var m = d.rb.b;
        if (m != null) {
            l = true;
        }
        var n = b.f;
        var o = d.q2();
        var p = new ScalerParams(0, i, j, o.cc, k);
        var q = d.valueColumn.count;
        var r = 0;
        try {
            for (var _b = __values(fromEnum(b.f)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var s = _c.value;
                if (isInfinity(s[0]) || isNaN_(s[0]) || isInfinity(s[1]) || isInfinity(s[2]) || isNaN_(s[1]) || isNaN_(s[2])) {
                    r++;
                    continue;
                }
                var t = s[0] - 0.5 * g;
                var u = s[1];
                var v = s[2];
                u = Math.max(u, -100);
                v = Math.min(v, c.bu.bottom + 100);
                var w = e.db.item(h);
                w.width = g;
                w.height = Math.abs(v - u);
                if (l) {
                    d.sh(n, r, q, o, p, c.q);
                }
                d.rb.ad(w, false, false, false, false);
                w.am = d.rb.k;
                w.an = d.rb.l;
                e.di(w, t, Math.min(v, u));
                h++;
                r++;
            }
        }
        catch (e_53_1) {
            e_53 = { error: e_53_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_53)
                    throw e_53.error;
            }
        }
        e.db.count = h;
    };
    StackedColumnSeries.prototype.lm = function (a, b, c, d) {
        var e_54, _a;
        _super.prototype.lm.call(this, a, b, c, d);
        switch (b) {
            case StackedColumnSeries.$$p[0]:
            case StackedColumnSeries.$$p[1]:
                try {
                    for (var _b = __values(fromEnum(this.sw)), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var e = _c.value;
                        e.e3();
                        e.e4();
                    }
                }
                catch (e_54_1) {
                    e_54 = { error: e_54_1 };
                }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return))
                            _a.call(_b);
                    }
                    finally {
                        if (e_54)
                            throw e_54.error;
                    }
                }
                this.l0(false);
                break;
            case "SyncLink":
                if (this.yAxis != null) {
                    this.yAxis.cv();
                }
                break;
            case "SeriesViewer":
                if (this.yAxis != null) {
                    this.yAxis.cv();
                }
                break;
        }
    };
    Object.defineProperty(StackedColumnSeries.prototype, "useHighMarkerFidelity", {
        get: function () {
            return this.ry;
        },
        enumerable: false,
        configurable: true
    });
    StackedColumnSeries.$t = markType(StackedColumnSeries, 'StackedColumnSeries', HorizontalStackedSeriesBase.$);
    StackedColumnSeries.$$p = markDep(DependencyProperty, PropertyMetadata, StackedColumnSeries, 'raisePropertyChanged', ['RadiusX:t1:t5', [1, 0], 'RadiusY:t2:t6', [1, 0]]);
    return StackedColumnSeries;
}(HorizontalStackedSeriesBase));
export { StackedColumnSeries };
/**
 * @hidden
 */
var StackedSplineAreaSeries = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(StackedSplineAreaSeries, _super);
    function StackedSplineAreaSeries() {
        var _this = _super.call(this) || this;
        _this.ab = StackedSplineAreaSeries.$;
        return _this;
    }
    StackedSplineAreaSeries.prototype.get_c7 = function () {
        return true;
    };
    StackedSplineAreaSeries.prototype.get_ea = function () {
        return true;
    };
    StackedSplineAreaSeries.prototype.ac = function () {
        _super.prototype.ac.call(this);
        this.l0(false);
    };
    StackedSplineAreaSeries.prototype.bu = function () {
        return new StackedSplineAreaSeriesView(this);
    };
    StackedSplineAreaSeries.prototype.lh = function (a) {
        _super.prototype.lh.call(this, a);
        this.t0 = a;
    };
    StackedSplineAreaSeries.prototype.ap = function (a) {
        if (this.itemsSource == null) {
            return null;
        }
        if (a == this.xAxis) {
            return new AxisRange(0, this.ch.count - 1);
        }
        if (a == this.yAxis) {
            this.tj();
            return new AxisRange(this.ta, this.s9);
        }
        return null;
    };
    StackedSplineAreaSeries.prototype.preferredCategoryMode = function (a) {
        return 0;
    };
    StackedSplineAreaSeries.prototype.lm = function (a, b, c, d) {
        var e_55, _a;
        _super.prototype.lm.call(this, a, b, c, d);
        switch (b) {
            case StackedSplineAreaSeries.$$p[0]:
                try {
                    for (var _b = __values(fromEnum(this.sw)), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var e = _c.value;
                        e.el();
                    }
                }
                catch (e_55_1) {
                    e_55 = { error: e_55_1 };
                }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return))
                            _a.call(_b);
                    }
                    finally {
                        if (e_55)
                            throw e_55.error;
                    }
                }
                break;
        }
    };
    Object.defineProperty(StackedSplineAreaSeries.prototype, "useHighMarkerFidelity", {
        get: function () {
            return this.ry;
        },
        enumerable: false,
        configurable: true
    });
    StackedSplineAreaSeries.$t = markType(StackedSplineAreaSeries, 'StackedSplineAreaSeries', HorizontalStackedSeriesBase.$);
    StackedSplineAreaSeries.$$p = markDep(DependencyProperty, PropertyMetadata, StackedSplineAreaSeries, 'raisePropertyChanged', ['IsSplineShapePartOfRange:t1:t3', [0, false]]);
    return StackedSplineAreaSeries;
}(HorizontalStackedSeriesBase));
export { StackedSplineAreaSeries };
/**
 * @hidden
 */
var StackedSplineSeries = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(StackedSplineSeries, _super);
    function StackedSplineSeries() {
        var _this = _super.call(this) || this;
        _this.ab = StackedSplineSeries.$;
        return _this;
    }
    StackedSplineSeries.prototype.get_ea = function () {
        return true;
    };
    StackedSplineSeries.prototype.ac = function () {
        _super.prototype.ac.call(this);
        this.l0(false);
    };
    StackedSplineSeries.prototype.bu = function () {
        return new StackedSplineSeriesView(this);
    };
    StackedSplineSeries.prototype.lh = function (a) {
        _super.prototype.lh.call(this, a);
        this.t0 = a;
    };
    StackedSplineSeries.prototype.ap = function (a) {
        if (this.itemsSource == null) {
            return null;
        }
        if (a == this.xAxis) {
            return new AxisRange(0, this.ch.count - 1);
        }
        if (a == this.yAxis) {
            this.tj();
            return new AxisRange(this.ta, this.s9);
        }
        return null;
    };
    StackedSplineSeries.prototype.preferredCategoryMode = function (a) {
        return 0;
    };
    Object.defineProperty(StackedSplineSeries.prototype, "useHighMarkerFidelity", {
        get: function () {
            return this.ry;
        },
        enumerable: false,
        configurable: true
    });
    StackedSplineSeries.$t = markType(StackedSplineSeries, 'StackedSplineSeries', HorizontalStackedSeriesBase.$);
    StackedSplineSeries.$$p = markDep(DependencyProperty, PropertyMetadata, StackedSplineSeries, 'raisePropertyChanged', ['IsSplineShapePartOfRange:t1:t3', [0, false]]);
    return StackedSplineSeries;
}(HorizontalStackedSeriesBase));
export { StackedSplineSeries };
/**
 * @hidden
 */
var StackedFragmentSeries = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(StackedFragmentSeries, _super);
    function StackedFragmentSeries() {
        var _this = _super.call(this) || this;
        _this.y = false;
        _this.z = false;
        _this._parentSeries = null;
        _this.br = 0;
        _this.w = null;
        _this.x = null;
        _this._visualSeriesLink = null;
        _this.ap = null;
        _this.aq = null;
        _this.ao = null;
        _this.aj = false;
        _this.bm = null;
        _this.propertyChanged = null;
        _this.propertyUpdated = null;
        _this.ap = new List$1(Number_$type, 0);
        _this.aq = new List$1(Number_$type, 0);
        _this.ao = new List$1(Array_$type, 0);
        _this.propertyUpdated = delegateCombine(_this.propertyUpdated, function (a, b) { return _this.d9(a, b.propertyName, b.oldValue, b.newValue); });
        return _this;
    }
    Object.defineProperty(StackedFragmentSeries.prototype, "parentSeries", {
        get: function () {
            return this._parentSeries;
        },
        set: function (a) {
            this._parentSeries = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedFragmentSeries.prototype, "visualSeriesLink", {
        get: function () {
            return this._visualSeriesLink;
        },
        set: function (a) {
            this._visualSeriesLink = a;
        },
        enumerable: false,
        configurable: true
    });
    StackedFragmentSeries.prototype.bn = function (a) {
        if (this.visualSeriesLink != null) {
            return this.visualSeriesLink.g0(a);
        }
        return -1;
    };
    StackedFragmentSeries.prototype.bt = function (a) {
        if (this.visualSeriesLink != null) {
            return this.visualSeriesLink.hh(a);
        }
        return null;
    };
    StackedFragmentSeries.prototype.bq = function (a, b) {
        if (this.visualSeriesLink != null) {
            return this.visualSeriesLink.g6(a, b);
        }
        return -1;
    };
    StackedFragmentSeries.prototype.bp = function (a, b) {
        if (this.visualSeriesLink != null) {
            return this.visualSeriesLink.g4(a, b);
        }
        return -1;
    };
    StackedFragmentSeries.prototype.ba = function (a, b, c) {
        if (this.visualSeriesLink != null) {
            return this.visualSeriesLink.f8(a, b, c);
        }
        return NaN;
    };
    StackedFragmentSeries.prototype.ij = function (a, b, c) {
        if (this.visualSeriesLink != null) {
            return this.visualSeriesLink.o2(a, b, c);
        }
        return { $type: Point_$type, x: NaN, y: NaN };
    };
    StackedFragmentSeries.prototype.io = function (a) {
        if (this.visualSeriesLink != null) {
            return this.visualSeriesLink.pb(a);
        }
        return Rect.empty;
    };
    StackedFragmentSeries.prototype.j = function (a) {
        if (this.visualSeriesLink != null) {
            return this.visualSeriesLink.ak(a);
        }
        return null;
    };
    StackedFragmentSeries.prototype.ip = function (a) {
        if (this.visualSeriesLink != null) {
            return this.visualSeriesLink.pc(a);
        }
        return Rect.empty;
    };
    StackedFragmentSeries.prototype.k = function (a) {
        if (this.visualSeriesLink != null) {
            return this.visualSeriesLink.al(a);
        }
        return null;
    };
    StackedFragmentSeries.prototype.iq = function (a) {
        if (this.visualSeriesLink != null) {
            return this.visualSeriesLink.pd(a);
        }
        return Rect.empty;
    };
    StackedFragmentSeries.prototype.ir = function (a) {
        if (this.visualSeriesLink != null) {
            return this.visualSeriesLink.pe(a);
        }
        return Rect.empty;
    };
    StackedFragmentSeries.prototype.a6 = function (a, b, c) {
        if (this.visualSeriesLink != null) {
            return this.visualSeriesLink.f4(a, b, c);
        }
        return NaN;
    };
    StackedFragmentSeries.prototype.ie = function (a, b, c) {
        if (this.visualSeriesLink != null) {
            return this.visualSeriesLink.oy(a, b, c);
        }
        return { $type: Point_$type, x: NaN, y: NaN };
    };
    StackedFragmentSeries.prototype.a8 = function (a, b, c) {
        if (this.visualSeriesLink != null) {
            return this.visualSeriesLink.f6(a, b, c);
        }
        return NaN;
    };
    StackedFragmentSeries.prototype.ih = function (a, b, c) {
        if (this.visualSeriesLink != null) {
            return this.visualSeriesLink.o0(a, b, c);
        }
        return { $type: Point_$type, x: NaN, y: NaN };
    };
    StackedFragmentSeries.prototype.ik = function (a, b, c) {
        if (this.visualSeriesLink != null) {
            return this.visualSeriesLink.o3(a, b, c);
        }
        return { $type: Point_$type, x: NaN, y: NaN };
    };
    StackedFragmentSeries.prototype.bb = function (a, b, c) {
        if (this.visualSeriesLink != null) {
            return this.visualSeriesLink.f9(a, b, c);
        }
        return NaN;
    };
    StackedFragmentSeries.prototype.ig = function (a, b, c) {
        if (this.visualSeriesLink != null) {
            return this.visualSeriesLink.oz(a, b, c);
        }
        return { $type: Point_$type, x: NaN, y: NaN };
    };
    StackedFragmentSeries.prototype.a7 = function (a, b, c) {
        if (this.visualSeriesLink != null) {
            return this.visualSeriesLink.f5(a, b, c);
        }
        return NaN;
    };
    StackedFragmentSeries.prototype.ii = function (a, b, c) {
        if (this.visualSeriesLink != null) {
            return this.visualSeriesLink.o1(a, b, c);
        }
        return { $type: Point_$type, x: NaN, y: NaN };
    };
    StackedFragmentSeries.prototype.a9 = function (a, b, c) {
        if (this.visualSeriesLink != null) {
            return this.visualSeriesLink.f7(a, b, c);
        }
        return NaN;
    };
    StackedFragmentSeries.prototype.bo = function (a) {
        if (this.visualSeriesLink != null) {
            return this.visualSeriesLink.g1(a);
        }
        return -1;
    };
    StackedFragmentSeries.prototype.a5 = function () {
        if (this.visualSeriesLink != null) {
            return this.visualSeriesLink.f1();
        }
        return 0;
    };
    StackedFragmentSeries.prototype.a4 = function (a) {
        if (this.visualSeriesLink != null) {
            return this.visualSeriesLink.fx(a);
        }
        return NaN;
    };
    StackedFragmentSeries.prototype.bu = function (a) {
        if (this.visualSeriesLink != null) {
            return this.visualSeriesLink.hi(a);
        }
        return null;
    };
    StackedFragmentSeries.prototype.af = function (a, b, c) {
        if (this.visualSeriesLink != null) {
            return this.visualSeriesLink.cx(a, b, c);
        }
        return false;
    };
    StackedFragmentSeries.prototype.il = function (a) {
        if (this.visualSeriesLink != null) {
            return this.visualSeriesLink.o5(a);
        }
        return { $type: Point_$type, x: NaN, y: NaN };
    };
    StackedFragmentSeries.prototype.id = function (a) {
        if (this.visualSeriesLink != null) {
            return this.visualSeriesLink.ox(a);
        }
        return { $type: Point_$type, x: NaN, y: NaN };
    };
    StackedFragmentSeries.prototype.ak = function (a) {
        if (this.visualSeriesLink != null) {
            return this.visualSeriesLink.eh(a);
        }
        return false;
    };
    StackedFragmentSeries.prototype.im = function () {
        if (this.visualSeriesLink != null) {
            return this.visualSeriesLink.getEffectiveViewport();
        }
        return Rect.empty;
    };
    StackedFragmentSeries.prototype.d8 = function () {
        if (this.visualSeriesLink != null) {
            this.visualSeriesLink.k9();
        }
    };
    StackedFragmentSeries.prototype.ec = function (a) {
        if (this.visualSeriesLink != null) {
            this.visualSeriesLink.l7(a);
        }
    };
    StackedFragmentSeries.prototype.al = function (a, b) {
        if (this.visualSeriesLink != null) {
            return this.visualSeriesLink.ep(a, b);
        }
        return false;
    };
    StackedFragmentSeries.prototype.d7 = function (a) {
        if (this.visualSeriesLink != null) {
            this.visualSeriesLink.kz(a);
        }
    };
    StackedFragmentSeries.prototype.provideRenderer = function (a) {
        this.bm = a;
        if (this.visualSeriesLink != null) {
            this.visualSeriesLink.provideRenderer(a);
        }
    };
    StackedFragmentSeries.prototype.fe = function () {
        if (this.parentSeries == null) {
            return;
        }
        this.iv = this.parentSeries._visibility != 0 ? 1 : this.ix;
        if (this.visualSeriesLink != null) {
            this.visualSeriesLink._visibility = this.iv;
        }
    };
    StackedFragmentSeries.prototype.ew = function () {
        if (this.parentSeries == null) {
            return;
        }
        this.fh = this.fk != null ? this.fk : this.parentSeries.qd;
        if (this.visualSeriesLink != null) {
            this.visualSeriesLink.qd = this.fh;
        }
    };
    StackedFragmentSeries.prototype.ey = function () {
        if (this.parentSeries == null) {
            return;
        }
        var a = this.r == 0 || this.r == 2;
        this.q = 0;
        this.q = a ? this.parentSeries.pr : this.r;
        if (this.visualSeriesLink != null) {
            this.visualSeriesLink.pr = this.q;
        }
    };
    StackedFragmentSeries.prototype.ee = function () {
        if (this.parentSeries == null) {
            return;
        }
        this.h2 = this.hx != null ? this.hx : this.parentSeries.oj;
        if (this.visualSeriesLink != null) {
            this.visualSeriesLink.oj = this.h2;
        }
    };
    StackedFragmentSeries.prototype.ef = function () {
        if (this.parentSeries == null) {
            return;
        }
        this.h5 = this.h6 != null ? this.h6 : this.parentSeries.os;
        if (this.visualSeriesLink != null) {
            this.visualSeriesLink.os = this.h5;
        }
    };
    StackedFragmentSeries.prototype.ei = function () {
        if (this.parentSeries == null) {
            return;
        }
        this.at = !isNaN_(this.bc) ? this.bc : this.parentSeries.gd;
        if (this.visualSeriesLink != null) {
            this.visualSeriesLink.gd = this.at;
        }
    };
    StackedFragmentSeries.prototype.e2 = function () {
        if (this.parentSeries == null) {
            return;
        }
        this.t = this.u != 0 ? this.u : this.parentSeries.bs;
        if (this.visualSeriesLink != null) {
            this.visualSeriesLink.bs = this.t;
        }
    };
    StackedFragmentSeries.prototype.et = function () {
        if (this.parentSeries == null) {
            return;
        }
        this.au = !isNaN_(this.bd) ? this.bd : this.parentSeries.ge;
        if (this.visualSeriesLink != null) {
            this.visualSeriesLink.ge = this.au;
        }
    };
    StackedFragmentSeries.prototype.eg = function () {
        if (this.parentSeries == null) {
            return;
        }
        this.h7 = this.ia;
        if (this.visualSeriesLink != null) {
            this.visualSeriesLink.ot = this.h7;
        }
    };
    StackedFragmentSeries.prototype.ej = function () {
        if (this.parentSeries == null) {
            return;
        }
        if (!this.y) {
            this.aa = this.parentSeries.dg;
        }
        else {
            this.aa = this.ag;
        }
        if (this.visualSeriesLink != null) {
            this.visualSeriesLink.dg = this.aa;
        }
    };
    StackedFragmentSeries.prototype.e5 = function () {
        if (this.parentSeries == null) {
            return;
        }
        this.az = !isNaN_(this.bi) ? this.bi : this.parentSeries.gj;
        if (this.visualSeriesLink != null && !isNaN_(this.az)) {
            this.visualSeriesLink.gj = this.az;
        }
    };
    StackedFragmentSeries.prototype.e6 = function () {
        if (this.parentSeries == null) {
            return;
        }
        this.h3 = Color.e(toNullable(Color.$, this.h4), toNullable(Color.$, null)) ? this.h4 : this.parentSeries.or;
        if (this.visualSeriesLink != null && Color.e(toNullable(Color.$, this.h3), toNullable(Color.$, null))) {
            this.visualSeriesLink.or = this.h3;
        }
    };
    StackedFragmentSeries.prototype.fd = function () {
        if (this.parentSeries == null) {
            return;
        }
        if (!this.z) {
            this.ae = this.parentSeries.e1;
        }
        else {
            this.ae = this.an;
        }
        if (this.visualSeriesLink != null) {
            this.visualSeriesLink.e1 = this.ae;
        }
    };
    StackedFragmentSeries.prototype.e7 = function () {
        if (this.parentSeries == null) {
            return;
        }
        this.a0 = !isNaN_(this.bj) ? this.bj : this.parentSeries.gk;
        if (this.visualSeriesLink != null && !isNaN_(this.a0)) {
            this.visualSeriesLink.gk = this.a0;
        }
    };
    StackedFragmentSeries.prototype.e8 = function () {
        if (this.parentSeries == null) {
            return;
        }
        this.a1 = !isNaN_(this.bk) ? this.bk : this.parentSeries.gl;
        if (this.visualSeriesLink != null && !isNaN_(this.a1)) {
            this.visualSeriesLink.gl = this.a1;
        }
    };
    StackedFragmentSeries.prototype.eh = function () {
        if (this.parentSeries == null) {
            return;
        }
        this.h8 = this.ib;
        if (this.visualSeriesLink != null) {
            this.visualSeriesLink.ou = this.h8;
        }
    };
    StackedFragmentSeries.prototype.ek = function () {
        if (this.parentSeries == null) {
            return;
        }
        this.ab = this.ah;
    };
    StackedFragmentSeries.prototype.ep = function () {
        if (this.parentSeries == null) {
            return;
        }
        this.ff = this.fi != null ? this.fi : this.parentSeries.legendItemBadgeTemplate;
        if (this.visualSeriesLink != null) {
            if (this.ff != null) {
                this.visualSeriesLink.legendItemBadgeTemplate = this.ff;
            }
            else {
                this.visualSeriesLink.legendItemBadgeTemplate = null;
            }
        }
    };
    StackedFragmentSeries.prototype.eq = function () {
        if (this.parentSeries == null) {
            return;
        }
        this.fg = this.fj != null ? this.fj : this.parentSeries.legendItemTemplate;
        if (this.visualSeriesLink != null) {
            if (this.fg != null) {
                this.visualSeriesLink.legendItemTemplate = this.fg;
            }
            else {
                this.visualSeriesLink.legendItemTemplate = null;
            }
        }
    };
    StackedFragmentSeries.prototype.er = function () {
        if (this.parentSeries == null) {
            return;
        }
        this.iu = this.parentSeries.ph != 0 ? 1 : this.iw;
        if (this.visualSeriesLink != null) {
            this.visualSeriesLink.ph = this.iu;
        }
    };
    StackedFragmentSeries.prototype.eo = function () {
        if (this.parentSeries == null) {
            return;
        }
        this.o = this.p != 0 ? this.p : this.parentSeries.a9;
        if (this.visualSeriesLink != null) {
            if (this.o != 0) {
                this.visualSeriesLink.a9 = this.o;
            }
            else {
                this.visualSeriesLink.a9 = 0;
            }
        }
    };
    StackedFragmentSeries.prototype.en = function () {
        if (this.parentSeries == null) {
            return;
        }
        this.m = this.n != 0 ? this.n : this.parentSeries.a7;
        if (this.visualSeriesLink != null) {
            if (this.m != 0) {
                this.visualSeriesLink.a7 = this.m;
            }
            else {
                this.visualSeriesLink.a7 = 0;
            }
        }
    };
    StackedFragmentSeries.prototype.es = function () {
        if (this.parentSeries == null) {
            return;
        }
        this.ht = this.hy != null ? this.hy : this.parentSeries.qt;
        if (this.visualSeriesLink != null) {
            this.visualSeriesLink.qt = this.ht;
        }
    };
    StackedFragmentSeries.prototype.eu = function () {
        if (this.parentSeries == null) {
            return;
        }
        this.hu = this.hz != null ? this.hz : this.parentSeries.qu;
        if (this.visualSeriesLink != null) {
            this.visualSeriesLink.qu = this.hu;
        }
    };
    StackedFragmentSeries.prototype.ev = function () {
        if (this.parentSeries == null) {
            return;
        }
        this.is = this.it != null ? this.it : this.parentSeries.qv;
        if (this.visualSeriesLink != null) {
            if (this.is != null) {
                this.visualSeriesLink.qv = this.is;
            }
            else {
                this.visualSeriesLink.qv = null;
            }
        }
    };
    StackedFragmentSeries.prototype.ez = function () {
        if (this.parentSeries == null) {
            return;
        }
        this.aw = !isNaN_(this.bf) ? this.bf : this.parentSeries._opacity;
        if (this.visualSeriesLink != null) {
            this.visualSeriesLink._opacity = this.aw;
        }
    };
    StackedFragmentSeries.prototype.e0 = function () {
    };
    StackedFragmentSeries.prototype.e1 = function () {
        if (this.parentSeries == null) {
            return;
        }
        this.hw = this.h1 != null ? this.h1 : this.parentSeries.oo;
        if (this.visualSeriesLink != null) {
            this.visualSeriesLink.oo = this.hw;
        }
    };
    StackedFragmentSeries.prototype.em = function () {
        if (this.visualSeriesLink != null) {
            this.visualSeriesLink.itemsSource = this.itemsSource;
        }
    };
    StackedFragmentSeries.prototype.ed = function () {
        if (this.parentSeries == null) {
            return;
        }
        var a = NaN;
        if (this.parentSeries.isStacked && this.parentSeries.c7 && !this.parentSeries.ea) {
            a = this.parentSeries.fi;
        }
        if (this.parentSeries.isStacked && this.parentSeries.c7 && this.parentSeries.ea) {
            a = this.parentSeries.fi;
        }
        this.as = !isNaN_(this.a3) ? this.a3 : a;
        if (this.visualSeriesLink != null) {
            if (typeCast(AreaFragment.$, this.visualSeriesLink) !== null) {
                this.visualSeriesLink.fq = this.as;
            }
            if (typeCast(SplineAreaFragment.$, this.visualSeriesLink) !== null) {
                this.visualSeriesLink.fq = this.as;
            }
        }
    };
    StackedFragmentSeries.prototype.el = function () {
        if (this.parentSeries == null) {
            return;
        }
        var a = false;
        if (this.parentSeries.isStacked && this.parentSeries.ea && this.parentSeries.c7) {
            a = this.parentSeries.t1;
        }
        if (this.parentSeries.isStacked && this.parentSeries.c9) {
            a = this.parentSeries.t1;
        }
        this.ac = a;
        if (this.visualSeriesLink != null) {
            if (typeCast(SplineFragment.$, this.visualSeriesLink) !== null) {
                this.visualSeriesLink.uk = this.ac;
            }
            if (typeCast(SplineAreaFragment.$, this.visualSeriesLink) !== null) {
                this.visualSeriesLink.uk = this.ac;
            }
        }
    };
    StackedFragmentSeries.prototype.e3 = function () {
        if (this.parentSeries == null) {
            return;
        }
        var a = NaN;
        if (this.parentSeries.isStacked && this.parentSeries.db) {
            a = this.parentSeries.t1;
        }
        if (this.parentSeries.isStacked && this.parentSeries.c9) {
            a = this.parentSeries.t1;
        }
        this.ax = !isNaN_(a) ? a : this.bg;
        if (this.visualSeriesLink != null) {
            if (typeCast(ColumnFragment.$, this.visualSeriesLink) !== null) {
                this.visualSeriesLink.ut = this.ax;
            }
            if (typeCast(BarFragment.$, this.visualSeriesLink) !== null) {
                this.visualSeriesLink.ut = this.ax;
            }
        }
    };
    StackedFragmentSeries.prototype.e4 = function () {
        if (this.parentSeries == null) {
            return;
        }
        var a = NaN;
        if (this.parentSeries.isStacked && this.parentSeries.db) {
            a = this.parentSeries.t2;
        }
        if (this.parentSeries.isStacked && this.parentSeries.c9) {
            a = this.parentSeries.t2;
        }
        this.ay = !isNaN_(a) ? a : this.bh;
        if (this.visualSeriesLink != null) {
            if (typeCast(ColumnFragment.$, this.visualSeriesLink) !== null) {
                this.visualSeriesLink.uu = this.ay;
            }
            if (typeCast(BarFragment.$, this.visualSeriesLink) !== null) {
                this.visualSeriesLink.uu = this.ay;
            }
        }
    };
    StackedFragmentSeries.prototype.e9 = function () {
        if (this.parentSeries == null) {
            return;
        }
        this.h9 = this.ic;
        if (this.visualSeriesLink != null) {
            this.visualSeriesLink.ov = this.h9;
        }
    };
    StackedFragmentSeries.prototype.fa = function () {
        if (this.parentSeries == null) {
            return;
        }
        this.a2 = !isNaN_(this.bl) ? this.bl : this.parentSeries.gm;
        if (this.visualSeriesLink != null) {
            this.visualSeriesLink.gm = this.a2;
        }
    };
    StackedFragmentSeries.prototype.ex = function () {
        if (this.parentSeries == null) {
            return;
        }
        this.av = !isNaN_(this.be) ? this.be : this.parentSeries.pw;
        if (this.visualSeriesLink != null) {
            this.visualSeriesLink.pw = this.av;
        }
    };
    StackedFragmentSeries.prototype.fb = function () {
        if (this.parentSeries == null) {
            return;
        }
        if (this.visualSeriesLink != null) {
            this.visualSeriesLink.toolTip = this.bw;
        }
    };
    StackedFragmentSeries.prototype.fc = function () {
        if (this.parentSeries == null) {
            return;
        }
        this.ad = this.am;
        if (this.visualSeriesLink != null) {
            this.visualSeriesLink.pv = this.ad;
        }
    };
    StackedFragmentSeries.prototype.eb = function (a, b, c) {
        if (this.propertyChanged != null) {
            this.propertyChanged(this, new PropertyChangedEventArgs(a));
        }
        if (this.propertyUpdated != null) {
            this.propertyUpdated(this, new PropertyUpdatedEventArgs(a, b, c));
        }
    };
    StackedFragmentSeries.prototype.d9 = function (a, b, c, d) {
        if (this.parentSeries == null) {
            return;
        }
        switch (b) {
            case StackedFragmentSeries.$$p[73]:
                if (this.parentSeries == null || this.visualSeriesLink == null) {
                    return;
                }
                this.visualSeriesLink.hp = d;
                break;
            case StackedFragmentSeries.$$p[78]:
                this.fe();
                break;
            case StackedFragmentSeries.$$p[38]:
                this.ee();
                break;
            case StackedFragmentSeries.$$p[39]:
                this.ef();
                break;
            case StackedFragmentSeries.$$p[40]:
                this.eg();
                break;
            case StackedFragmentSeries.$$p[43]:
                this.y = true;
                this.ej();
                break;
            case StackedFragmentSeries.$$p[67]:
                this.e5();
                break;
            case StackedFragmentSeries.$$p[68]:
                this.e6();
                break;
            case StackedFragmentSeries.$$p[76]:
                this.y = true;
                this.fd();
                break;
            case StackedFragmentSeries.$$p[69]:
                this.e7();
                break;
            case StackedFragmentSeries.$$p[70]:
                this.e8();
                break;
            case StackedFragmentSeries.$$p[41]:
                this.eh();
                break;
            case StackedFragmentSeries.$$p[44]:
                this.ek();
                break;
            case StackedFragmentSeries.$$p[56]:
                this.ew();
                break;
            case StackedFragmentSeries.$$p[58]:
                this.ey();
                break;
            case StackedFragmentSeries.$$p[49]:
                this.ep();
                break;
            case StackedFragmentSeries.$$p[50]:
                this.eq();
                break;
            case StackedFragmentSeries.$$p[51]:
                this.er();
                break;
            case StackedFragmentSeries.$$p[48]:
                this.eo();
                break;
            case StackedFragmentSeries.$$p[47]:
                this.en();
                break;
            case StackedFragmentSeries.$$p[52]:
                this.es();
                break;
            case StackedFragmentSeries.$$p[54]:
                this.eu();
                break;
            case StackedFragmentSeries.$$p[55]:
                this.ev();
                break;
            case StackedFragmentSeries.$$p[57]:
                this.ex();
                break;
            case StackedFragmentSeries.$$p[61]:
                this.ez();
                break;
            case StackedFragmentSeries.$$p[60]:
                this.e0();
                break;
            case StackedFragmentSeries.$$p[46]:
                this.em();
                break;
            case StackedFragmentSeries.$$p[63]:
                this.e1();
                break;
            case StackedFragmentSeries.$$p[62]:
                this.e2();
                break;
            case StackedFragmentSeries.$$p[53]:
                this.et();
                break;
            case StackedFragmentSeries.$$p[37]:
                this.ed();
                break;
            case StackedFragmentSeries.$$p[65]:
                this.e3();
                break;
            case StackedFragmentSeries.$$p[66]:
                this.e4();
                break;
            case StackedFragmentSeries.$$p[45]:
                this.el();
                break;
            case StackedFragmentSeries.$$p[71]:
                this.e9();
                break;
            case StackedFragmentSeries.$$p[72]:
                this.fa();
                break;
            case StackedFragmentSeries.$$p[74]:
                this.fb();
                break;
            case StackedFragmentSeries.$$p[75]:
                this.fc();
                break;
        }
        this.parentSeries.l0(false);
    };
    StackedFragmentSeries.$t = markType(StackedFragmentSeries, 'StackedFragmentSeries', DependencyObject.$, [INotifyPropertyChanged_$type]);
    StackedFragmentSeries.$$p = markDep(DependencyProperty, PropertyMetadata, StackedFragmentSeries, 'eb', ['ActualAreaFillOpacity:as:fl', [1, 1], 'ActualBrush:hs:fm', [Brush.$], 'ActualDashArray:h5:fn', [DoubleCollection.$], 'ActualDashCap:h7:fo', [PenLineCap_$type, enumGetBox(PenLineCap_$type, 0)], 'ActualEndCap:h8:fp', [PenLineCap_$type, enumGetBox(PenLineCap_$type, 2)], 'ActualHighlightingFadeOpacity:at:fq', [1, NaN], 'ActualIsDropShadowEnabled:aa:fr', [0, false], 'ActualIsHitTestVisible:ab:fs', [0, true], 'ActualIsSplineShapePartOfRange:ac:ft', [0, false], 'ActualLegendItemBadgeMode:m:fu', [LegendItemBadgeMode_$type], 'ActualLegendItemBadgeShape:o:fv', [LegendItemBadgeShape_$type], 'ActualLegendItemBadgeTemplate:ff:fw', [DataTemplate.$], 'ActualLegendItemTemplate:fg:fx', [DataTemplate.$], 'ActualLegendItemVisibility:iu:fy', [Visibility_$type, enumGetBox(Visibility_$type, 0)], 'ActualMarkerBrush:ht:fz', [Brush.$], 'ActualMarkerFillOpacity:au:f0', [1, NaN], 'ActualMarkerOutline:hu:f1', [Brush.$], 'ActualMarkerStyle:is:f2', [Style.$], 'ActualMarkerTemplate:fh:f3', [DataTemplate.$], 'ActualMarkerThickness:av:f4', [1, 1], 'ActualMarkerType:q:f5', [MarkerType_$type, enumGetBox(MarkerType_$type, 1)], 'ActualOpacityMask:hv:f6', [Brush.$], 'ActualOpacity:aw:f7', [1, 1], 'ActualOutlineMode:t:f8', [SeriesOutlineMode_$type, enumGetBox(SeriesOutlineMode_$type, 0)], 'ActualOutline:hw:f9', [Brush.$], 'ActualRadiusX:ax:ga', [1, 0], 'ActualRadiusY:ay:gb', [1, 0], 'ActualShadowBlur:az:gc', [1, NaN], 'ActualShadowColor:h3:gd', [Color.$], 'ActualShadowOffsetX:a0:ge', [1, NaN], 'ActualShadowOffsetY:a1:gf', [1, NaN], 'ActualStartCap:h9:gg', [PenLineCap_$type, enumGetBox(PenLineCap_$type, 2)], 'ActualThickness:a2:gh', [1, 1], 'ActualToolTip:bs:gi', [4], 'ActualUseLightweightMarkers:ad:gj', [0, false], 'ActualUseSingleShadow:ae:gk', [0, true], 'ActualVisibility:iv:gl', [Visibility_$type, enumGetBox(Visibility_$type, 0)], 'AreaFillOpacity:a3:gm', [1, NaN], 'Brush:hx:gn', [Brush.$], 'DashArray:h6:go', [DoubleCollection.$], 'DashCap:ia:gp', [PenLineCap_$type, enumGetBox(PenLineCap_$type, 0)], 'EndCap:ib:gq', [PenLineCap_$type, enumGetBox(PenLineCap_$type, 2)], 'HighlightingFadeOpacity:bc:gr', [1, NaN], 'IsDropShadowEnabled:ag:gs', [0], 'IsHitTestVisible:ah:gt', [0, true], 'IsSplineShapePartOfRange:ai:gu', [0, false], 'ItemsSource::gv', [IEnumerable_$type, null], 'LegendItemBadgeMode:n:gw', [LegendItemBadgeMode_$type, enumGetBox(LegendItemBadgeMode_$type, 0)], 'LegendItemBadgeShape:p:gx', [LegendItemBadgeShape_$type, enumGetBox(LegendItemBadgeShape_$type, 0)], 'LegendItemBadgeTemplate:fi:gy', [DataTemplate.$, null], 'LegendItemTemplate:fj:gz', [DataTemplate.$, null], 'LegendItemVisibility:iw:g0', [Visibility_$type, enumGetBox(Visibility_$type, 0)], 'MarkerBrush:hy:g1', [Brush.$], 'MarkerFillOpacity:bd:g2', [1, NaN], 'MarkerOutline:hz:g3', [Brush.$], 'MarkerStyle:it:g4', [Style.$], 'MarkerTemplate:fk:g5', [DataTemplate.$, null], 'MarkerThickness:be:g6', [1, 1.5], 'MarkerType:r:g7', [MarkerType_$type, enumGetBox(MarkerType_$type, 1)], 'Name:dk:g8', [2], 'OpacityMask:h0:g9', [Brush.$], 'Opacity:bf:ha', [1, 1], 'OutlineMode:u:hb', [SeriesOutlineMode_$type, enumGetBox(SeriesOutlineMode_$type, 0)], 'Outline:h1:hc', [Brush.$, null], 'ParentOrLocalBrush:h2:hd', [Brush.$], 'RadiusX:bg:he', [1, 0], 'RadiusY:bh:hf', [1, 0], 'ShadowBlur:bi:hg', [1, NaN], 'ShadowColor:h4:hh', [Color.$], 'ShadowOffsetX:bj:hi', [1, NaN], 'ShadowOffsetY:bk:hj', [1, NaN], 'StartCap:ic:hk', [PenLineCap_$type, enumGetBox(PenLineCap_$type, 2)], 'Thickness:bl:hl', [1, 1.5], 'Title:bv:hm', [4, "Series Title"], 'ToolTip:bw:hn', [4, null], 'UseLightweightMarkers:am:ho', [0, false], 'UseSingleShadow:an:hp', [0], 'ValueMemberPath:d4:hq', [2, null], 'Visibility:ix:hr', [Visibility_$type, enumGetBox(Visibility_$type, 0)]]);
    return StackedFragmentSeries;
}(DependencyObject));
export { StackedFragmentSeries };
/**
 * @hidden
 */
var StackedSeriesCollection = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(StackedSeriesCollection, _super);
    function StackedSeriesCollection() {
        var _this = _super.call(this, StackedFragmentSeries.$, 0) || this;
        _this.collectionResetting = null;
        return _this;
    }
    StackedSeriesCollection.prototype.p = function () {
        if (this.collectionResetting != null) {
            this.collectionResetting(this, null);
        }
        _super.prototype.p.call(this);
    };
    StackedSeriesCollection.$t = markType(StackedSeriesCollection, 'StackedSeriesCollection', ObservableCollection$1.$.specialize(StackedFragmentSeries.$));
    return StackedSeriesCollection;
}(ObservableCollection$1));
export { StackedSeriesCollection };
/**
 * @hidden
 */
var StackedSeriesFramePreparer = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(StackedSeriesFramePreparer, _super);
    function StackedSeriesFramePreparer(a) {
        var _rest = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            _rest[_i - 1] = arguments[_i];
        }
        var _this = this;
        a = (a == void 0) ? 0 : a;
        switch (a) {
            case 0:
                {
                    var c = _rest[0];
                    _this = _super.call(this, 0, c) || this;
                }
                break;
            case 1:
                {
                    var c = _rest[0];
                    var d = _rest[1];
                    var e = _rest[2];
                    var f = _rest[3];
                    var g = _rest[4];
                    _this = _super.call(this, 1, c, d, e, f, g) || this;
                }
                break;
        }
        return _this;
    }
    StackedSeriesFramePreparer.prototype.j = function (a) {
        var b = new SingleValuesHolder();
        if (typeCast(StackedColumnSeries.$, this.h) !== null || typeCast(StackedBarSeries.$, this.h) !== null) {
            var c = typeCast(StackedSeriesBase.$, this.h);
            if (c.sw.count > 0) {
                b.f = c.sw._inner[0].x;
            }
            return b;
        }
        var d = this.ad.valueColumn;
        b.f = d;
        return b;
    };
    StackedSeriesFramePreparer.prototype.t = function (a, b, c, d, e) {
        var _this = this;
        var f = 0;
        var g = false;
        var h;
        var i = a.d != null;
        var j = this.h.provideCollisionDetector();
        var k = a.f;
        var l = a.k;
        var m = this.h.mayContainUnknowns;
        var n = new ScalerParams(0, a.m, a.l, a.b.j$a, l);
        var o = new ScalerParams(0, a.m, a.l, a.c.j$a, l);
        o.b = this.h.getHostReferenceValue();
        var p = (a.b.j$c(2, n) - a.b.j$c(1, n));
        var q = a.m;
        var r = a.l;
        var s = typeCast(NumericAxisBase.$, a.c) !== null && a.c.kl;
        var _loop_1 = function (t) {
            var u = void 0;
            if (a.d == null) {
                if (!m) {
                    u = this_1.g.getBucketWithoutUnknowns(t);
                }
                else {
                    u = this_1.g.getBucket(t);
                }
            }
            else {
                u = ((function () { var v = _this.f(a, t, b, p, g, h, c); t = v.p1; g = v.p4; h = v.p5; return v.ret; })());
            }
            var v = !s || (s && u[1] > 0);
            var w = u[0];
            if (!isNaN_(u[0])) {
                this_1.x(a, u, c, i, n, o);
                a.a.f.add(u);
                var x = t * a.h;
                var y = x;
                if (a.d != null && a.d.i$b != null && x >= 0 && x < a.d.i$b.count) {
                    x = a.d.i$b._inner[x];
                }
                var z = u;
                if (k && x < b.e) {
                    z = new Array(u.length);
                    z[0] = w;
                    this_1.z(b, x, true, a.e);
                    z[1] = b.c;
                    z[2] = b.d;
                    this_1.x(a, z, c, i, n, o);
                }
                if (d && v && this_1.l(a.a, z, j, Math.min(x, b.e - 1), f, a.a.f.count - 1)) {
                    ++f;
                }
            }
            out_t_1 = t;
        };
        var this_1 = this, out_t_1;
        for (var t = a.i; t <= a.j; ++t) {
            _loop_1(t);
            t = out_t_1;
        }
        return f;
    };
    StackedSeriesFramePreparer.prototype.l = function (a, b, c, d, e, f) {
        var g = b[0];
        var h = b[1];
        if (typeCast(IBarSeries_$type, this.c) !== null) {
            h = b[0];
            g = b[1];
        }
        var i = new Rect(0, g - 5, h - 5, 11, 11);
        if (!isNaN_(g) && !isNaN_(h) && !isInfinity(g) && !isInfinity(h) && c.tryAdd(i)) {
            a.m.add({ $type: Point_$type, x: g, y: h });
            this.c.updateMarkerTemplate(e, d, f);
            return true;
        }
        return false;
    };
    StackedSeriesFramePreparer.$t = markType(StackedSeriesFramePreparer, 'StackedSeriesFramePreparer', CategoryFramePreparer.$);
    return StackedSeriesFramePreparer;
}(CategoryFramePreparer));
export { StackedSeriesFramePreparer };
/**
 * @hidden
 */
var AreaFragmentView = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(AreaFragmentView, _super);
    function AreaFragmentView(a) {
        var _this = _super.call(this, a) || this;
        _this.da = null;
        _this.dg = new Path();
        _this.di = new Path();
        _this.dh = new Path();
        _this.dj = new Path();
        _this.dc = new Path();
        _this.de = new Path();
        _this.dd = new Path();
        _this.df = new Path();
        _this.da = a;
        return _this;
    }
    AreaFragmentView.prototype.as = function () {
        _super.prototype.as.call(this);
        if (!this.q) {
        }
    };
    AreaFragmentView.prototype.db = function () {
        this.dg.ak = null;
        this.dh.ak = null;
        this.di.ak = null;
        this.dj.ak = null;
        this.dc.ak = null;
        this.dd.ak = null;
        this.de.ak = null;
        this.df.ak = null;
    };
    AreaFragmentView.prototype.cs = function () {
        return new AreaFragmentBucketCalculator(this);
    };
    AreaFragmentView.prototype.bb = function () {
        _super.prototype.bb.call(this);
    };
    AreaFragmentView.prototype.bc = function () {
        _super.prototype.bc.call(this);
        var a = this.bo();
        this.dc.ak = this.dg.ak;
        this.dd.ak = this.dh.ak;
        this.de.ak = this.di.ak;
        this.df.ak = this.dj.ak;
        this.dc._fill = a;
        this.dd._fill = a;
        this.dc._opacity = 1;
        this.dd._opacity = 1;
        this.de._stroke = a;
        this.de.ac = this.e.fl + 3;
        this.df._stroke = a;
        this.df.ac = this.e.fl + 3;
    };
    AreaFragmentView.prototype.a6 = function (a, b) {
        _super.prototype.a6.call(this, a, b);
        if (a.d) {
            if (b) {
                a.s(this.dc);
                a.s(this.dd);
                a.s(this.de);
                a.s(this.df);
            }
            else {
                a.s(this.dg);
                a.s(this.dh);
                a.s(this.di);
                a.s(this.dj);
            }
        }
    };
    AreaFragmentView.prototype.get_index = function () {
        var a = this.da.parentSeries;
        var b = a.series.count;
        var c = a.series.indexOf(this.da.logicalSeriesLink);
        var d = (b - 1) - c;
        var e = a.bx.index;
        return e + d;
    };
    AreaFragmentView.prototype.al = function (a) {
        _super.prototype.al.call(this, a);
        this.e.a6.exportPathData(a, this.di, "lowerShape", ["Lower"]);
        this.e.a6.exportPathData(a, this.dj, "upperShape", ["Upper", "Main"]);
        this.e.a6.exportPathData(a, this.dh, "translucentShape", ["Translucent"]);
        this.e.a6.exportPathData(a, this.dg, "fillShape", ["Fill"]);
    };
    AreaFragmentView.$t = markType(AreaFragmentView, 'AreaFragmentView', AnchoredCategorySeriesView.$);
    return AreaFragmentView;
}(AnchoredCategorySeriesView));
export { AreaFragmentView };
/**
 * @hidden
 */
var ColumnFragmentView = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(ColumnFragmentView, _super);
    function ColumnFragmentView(a) {
        var _this = _super.call(this, a) || this;
        _this.da = null;
        _this.de = null;
        _this.db = null;
        _this.dc = null;
        _this.dd = null;
        _this.dj = new Rectangle();
        _this.da = a;
        _this.dc = new List$1(Number_$type, 0);
        _this.dd = new List$1(Number_$type, 0);
        _this.db = ((function () {
            var $ret = new Pool$1(Rectangle.$);
            $ret.create = runOn(_this, _this.dk);
            $ret.activate = runOn(_this, _this.df);
            $ret.disactivate = runOn(_this, _this.dh);
            $ret.destroy = runOn(_this, _this.dg);
            return $ret;
        })());
        _this.de = new List$1(Rectangle.$, 0);
        return _this;
    }
    ColumnFragmentView.prototype.as = function () {
        _super.prototype.as.call(this);
        if (!this.q) {
        }
    };
    ColumnFragmentView.prototype.dk = function () {
        var _this = this;
        var a = ((function () {
            var $ret = new Rectangle();
            $ret.dataContext = ((function () {
                var $ret = new DataContext();
                $ret.series = _this.e;
                return $ret;
            })());
            return $ret;
        })());
        this.de.add(a);
        a._visibility = 1;
        return a;
    };
    ColumnFragmentView.prototype.df = function (a) {
        a._visibility = 0;
    };
    ColumnFragmentView.prototype.dh = function (a) {
        a._visibility = 1;
    };
    ColumnFragmentView.prototype.dg = function (a) {
        this.de.remove(a);
    };
    ColumnFragmentView.prototype.be = function (a, b) {
        _super.prototype.be.call(this, a, b);
        var c = a;
    };
    ColumnFragmentView.prototype.di = function (a, b, c) {
        var d = false;
        if (a.o != c) {
            d = true;
            a.o = c;
        }
        if (a.n != b) {
            d = true;
            a.n = b;
        }
        if (d) {
            this.aq();
        }
    };
    ColumnFragmentView.prototype.bf = function (a, b) {
        _super.prototype.bf.call(this, a, b);
    };
    ColumnFragmentView.prototype.ac = function (a) {
        return this.de._inner[a];
    };
    ColumnFragmentView.prototype.ab = function (a) {
        var b = this.de._inner[a];
        this.dj._visibility = b._visibility;
        this.dj.n = b.n;
        this.dj.o = b.o;
        this.dj.width = b.width;
        this.dj.height = b.height;
        var c = this.bp(a);
        this.dj._fill = c;
        this.dj._stroke = c;
        this.dj.ac = this.e.fl + 3;
        return this.dj;
    };
    ColumnFragmentView.prototype.a6 = function (a, b) {
        _super.prototype.a6.call(this, a, b);
        if (a.d) {
            for (var c = 0; c < this.de.count; c++) {
                var d = this.aa(c, b);
                this.bd(d, c, b);
                a.v(d);
            }
        }
    };
    ColumnFragmentView.prototype.get_index = function () {
        var a = this.da.parentSeries;
        var b = a.series.count;
        var c = a.series.indexOf(this.da.logicalSeriesLink);
        var d = (b - 1) - c;
        var e = a.bx.index;
        return e + d;
    };
    ColumnFragmentView.prototype.al = function (a) {
        var e_56, _a, e_57, _b;
        _super.prototype.al.call(this, a);
        var b = 0;
        var c = new List$1(Rectangle.$, 0);
        try {
            for (var _c = __values(fromEnum(this.db.a)), _d = _c.next(); !_d.done; _d = _c.next()) {
                var d = _d.value;
                c.add(d);
            }
        }
        catch (e_56_1) {
            e_56 = { error: e_56_1 };
        }
        finally {
            try {
                if (_d && !_d.done && (_a = _c.return))
                    _a.call(_c);
            }
            finally {
                if (e_56)
                    throw e_56.error;
            }
        }
        c.aa(function (e, f) {
            if (e.n < f.n) {
                return -1;
            }
            else if (e.n > f.n) {
                return 1;
            }
            else {
                return 0;
            }
        });
        try {
            for (var _e = __values(fromEnum(c)), _f = _e.next(); !_f.done; _f = _e.next()) {
                var e = _f.value;
                this.e.a6.exportRectangleData(a, e, "column" + b, ["Main", "Fill"]);
            }
        }
        catch (e_57_1) {
            e_57 = { error: e_57_1 };
        }
        finally {
            try {
                if (_f && !_f.done && (_b = _e.return))
                    _b.call(_e);
            }
            finally {
                if (e_57)
                    throw e_57.error;
            }
        }
        b++;
    };
    ColumnFragmentView.prototype.getDefaultTooltipTemplate = function () {
        var a = "<div class='ui-chart-default-tooltip-content'>";
        var b = null;
        if (this.da.q2().b6) {
            b = this.da.fragmentXAxis;
        }
        else if (this.da.fragmentYAxis.b6) {
            b = this.da.fragmentYAxis;
        }
        if (b.b9) {
            var c = b;
            a += "<span>${item." + c.dateTimeMemberPath + "}</span><br/>";
        }
        if (b != null && b.fj != null) {
            a += "<span>${item." + b.fj + "}</span><br/>";
        }
        a += "<span";
        var d = this.e.a4.a$r(this.e);
        if (!stringIsNullOrEmpty(d)) {
            a += " style='color:" + d + "'";
        }
        a += ">" + this.da.hp + ": </span><span class='ui-priority-primary'>" + "${item." + this.da.tb + "}</span></div>";
        return a;
    };
    ColumnFragmentView.$t = markType(ColumnFragmentView, 'ColumnFragmentView', AnchoredCategorySeriesView.$);
    return ColumnFragmentView;
}(AnchoredCategorySeriesView));
export { ColumnFragmentView };
/**
 * @hidden
 */
var LineFragmentView = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(LineFragmentView, _super);
    function LineFragmentView(a) {
        var _this = _super.call(this, a) || this;
        _this.da = null;
        _this.dg = new Path();
        _this.df = new Path();
        _this.dh = new Path();
        _this.dd = new Path();
        _this.dc = new Path();
        _this.de = new Path();
        _this.da = a;
        return _this;
    }
    LineFragmentView.prototype.db = function () {
        this.df.ak = null;
        this.dg.ak = null;
        this.dh.ak = null;
        this.dc.ak = null;
        this.dd.ak = null;
        this.de.ak = null;
    };
    LineFragmentView.prototype.cs = function () {
        return new LineFragmentBucketCalculator(this);
    };
    LineFragmentView.prototype.bb = function () {
        _super.prototype.bb.call(this);
    };
    LineFragmentView.prototype.bc = function () {
        _super.prototype.bc.call(this);
        var a = this.bo();
        this.dc.ak = this.df.ak;
        this.dd.ak = this.dg.ak;
        this.de.ak = this.dh.ak;
        this.dd._stroke = a;
        this.dd.ac = this.e.fl + 3;
        this.de._stroke = a;
        this.de.ac = this.e.fl + 3;
        this.dc._fill = a;
        this.dc._opacity = 1;
    };
    LineFragmentView.prototype.a6 = function (a, b) {
        _super.prototype.a6.call(this, a, b);
        if (a.d) {
            if (b) {
                a.s(this.dc);
                a.s(this.dd);
                a.s(this.de);
            }
            else {
                a.s(this.df);
                a.s(this.dg);
                a.s(this.dh);
            }
        }
    };
    LineFragmentView.prototype.get_index = function () {
        var a = this.da.parentSeries;
        var b = a.series.count;
        var c = a.series.indexOf(this.da.logicalSeriesLink);
        var d = (b - 1) - c;
        var e = a.bx.index;
        return e + d;
    };
    LineFragmentView.prototype.al = function (a) {
        _super.prototype.al.call(this, a);
        this.e.a6.exportPathData(a, this.dg, "lowerShape", ["Lower", "Main"]);
        this.e.a6.exportPathData(a, this.dh, "upperShape", ["Upper"]);
        this.e.a6.exportPathData(a, this.df, "translucentShape", ["Translucent"]);
    };
    LineFragmentView.$t = markType(LineFragmentView, 'LineFragmentView', AnchoredCategorySeriesView.$);
    return LineFragmentView;
}(AnchoredCategorySeriesView));
export { LineFragmentView };
/**
 * @hidden
 */
var SplineAreaFragmentView = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(SplineAreaFragmentView, _super);
    function SplineAreaFragmentView(a) {
        var _this = _super.call(this, a) || this;
        _this.db = null;
        _this.dh = new Path();
        _this.dj = new Path();
        _this.di = new Path();
        _this.dk = new Path();
        _this.dd = new Path();
        _this.df = new Path();
        _this.de = new Path();
        _this.dg = new Path();
        _this.db = a;
        return _this;
    }
    SplineAreaFragmentView.prototype.as = function () {
        _super.prototype.as.call(this);
        if (!this.q) {
        }
    };
    SplineAreaFragmentView.prototype.dc = function () {
        this.dh.ak = null;
        this.di.ak = null;
        this.dj.ak = null;
        this.dk.ak = null;
        this.dd.ak = null;
        this.de.ak = null;
        this.df.ak = null;
        this.dg.ak = null;
    };
    SplineAreaFragmentView.prototype.bb = function () {
        _super.prototype.bb.call(this);
    };
    SplineAreaFragmentView.prototype.bc = function () {
        _super.prototype.bc.call(this);
        var a = this.bo();
        this.dd.ak = this.dh.ak;
        this.de.ak = this.di.ak;
        this.df.ak = this.dj.ak;
        this.dg.ak = this.dk.ak;
        this.dd._fill = a;
        this.de._fill = a;
        this.de._opacity = 1;
        this.dd._opacity = 1;
        this.df._stroke = a;
        this.df.ac = this.e.fl + 3;
        this.dg._stroke = a;
        this.dg.ac = this.e.fl + 3;
    };
    SplineAreaFragmentView.prototype.a6 = function (a, b) {
        _super.prototype.a6.call(this, a, b);
        if (a.d) {
            if (b) {
                a.s(this.dd);
                a.s(this.de);
                a.s(this.df);
                a.s(this.dg);
            }
            else {
                a.s(this.dh);
                a.s(this.di);
                a.s(this.dj);
                a.s(this.dk);
            }
        }
    };
    SplineAreaFragmentView.prototype.get_index = function () {
        var a = this.db.parentSeries;
        var b = a.series.count;
        var c = a.series.indexOf(this.db.logicalSeriesLink);
        var d = (b - 1) - c;
        var e = a.bx.index;
        return e + d;
    };
    SplineAreaFragmentView.prototype.al = function (a) {
        _super.prototype.al.call(this, a);
        this.e.a6.exportPathData(a, this.dj, "lowerShape", ["Lower"]);
        this.e.a6.exportPathData(a, this.dk, "upperShape", ["Upper", "Main"]);
        this.e.a6.exportPathData(a, this.di, "translucentShape", ["Translucent"]);
        this.e.a6.exportPathData(a, this.dh, "fillShape", ["Fill"]);
    };
    SplineAreaFragmentView.$t = markType(SplineAreaFragmentView, 'SplineAreaFragmentView', SplineSeriesBaseView.$);
    return SplineAreaFragmentView;
}(SplineSeriesBaseView));
export { SplineAreaFragmentView };
/**
 * @hidden
 */
var SplineFragmentView = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(SplineFragmentView, _super);
    function SplineFragmentView(a) {
        var _this = _super.call(this, a) || this;
        _this.db = null;
        _this.dh = new Path();
        _this.dg = new Path();
        _this.di = new Path();
        _this.de = new Path();
        _this.dd = new Path();
        _this.df = new Path();
        _this.db = a;
        return _this;
    }
    SplineFragmentView.prototype.cs = function () {
        return new SplineFragmentBucketCalculator(this);
    };
    SplineFragmentView.prototype.dc = function () {
        this.dg.ak = null;
        this.dh.ak = null;
        this.di.ak = null;
        this.dd.ak = null;
        this.de.ak = null;
        this.df.ak = null;
    };
    SplineFragmentView.prototype.bb = function () {
        _super.prototype.bb.call(this);
    };
    SplineFragmentView.prototype.bc = function () {
        _super.prototype.bc.call(this);
        var a = this.bo();
        this.dd.ak = this.dg.ak;
        this.de.ak = this.dh.ak;
        this.df.ak = this.di.ak;
        this.de._stroke = a;
        this.de.ac = this.e.fl + 3;
        this.df._stroke = a;
        this.df.ac = this.e.fl + 3;
        this.dd._fill = a;
        this.dd._opacity = 0.75;
    };
    SplineFragmentView.prototype.a6 = function (a, b) {
        _super.prototype.a6.call(this, a, b);
        if (a.d) {
            if (b) {
                a.s(this.dd);
                a.s(this.de);
                a.s(this.df);
            }
            else {
                a.s(this.dg);
                a.s(this.dh);
                a.s(this.di);
            }
        }
    };
    SplineFragmentView.prototype.get_index = function () {
        var a = this.db.parentSeries;
        var b = a.series.count;
        var c = a.series.indexOf(this.db.logicalSeriesLink);
        var d = (b - 1) - c;
        var e = a.bx.index;
        return e + d;
    };
    SplineFragmentView.prototype.al = function (a) {
        _super.prototype.al.call(this, a);
        this.e.a6.exportPathData(a, this.dh, "lowerShape", ["Lower", "Main"]);
        this.e.a6.exportPathData(a, this.di, "upperShape", ["Upper"]);
        this.e.a6.exportPathData(a, this.dg, "translucentShape", ["Translucent"]);
    };
    SplineFragmentView.$t = markType(SplineFragmentView, 'SplineFragmentView', SplineSeriesBaseView.$);
    return SplineFragmentView;
}(SplineSeriesBaseView));
export { SplineFragmentView };
/**
 * @hidden
 */
var StackedSeriesView = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(StackedSeriesView, _super);
    function StackedSeriesView(a) {
        var _this = _super.call(this, a) || this;
        _this.c0 = null;
        _this.c1 = new Canvas();
        _this.c3 = new Panel();
        _this.c0 = a;
        return _this;
    }
    Object.defineProperty(StackedSeriesView.prototype, "c2", {
        get: function () {
            return this.c1;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedSeriesView.prototype, "c4", {
        get: function () {
            return this.c3;
        },
        enumerable: false,
        configurable: true
    });
    StackedSeriesView.prototype.cs = function () {
        return new StackedBucketCalculator(this);
    };
    StackedSeriesView.prototype.ap = function () {
        _super.prototype.ap.call(this);
        for (var a = 0; a < this.c0.s0.f.count; a++) {
            this.c0.s0.f._inner[a].bx.ap();
        }
    };
    StackedSeriesView.prototype.ar = function (a, b) {
        var e_58, _a;
        _super.prototype.ar.call(this, a, b);
        try {
            for (var _b = __values(fromEnum(this.c0.series)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var c = _c.value;
                c.visualSeriesLink.bx.ar(a, b);
            }
        }
        catch (e_58_1) {
            e_58 = { error: e_58_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_58)
                    throw e_58.error;
            }
        }
    };
    StackedSeriesView.prototype.af = function () {
        var a = "rgba(95,95,95,0.5)";
        var b = true;
        var c = 5, d = 5, e = 5;
        var f = this.e;
        if ((f.isStacked && f.c7) || (f.isStacked && f.ea && f.c7)) {
            d = 1;
            e = -3;
        }
        else if ((f.isStacked && f.dv) || (f.isStacked && f.ea)) {
            c = 3;
            d = 1;
            e = 4;
            b = false;
        }
        else if ((f.isStacked && f.db)) {
            d = 5;
            e = 0;
        }
        var g = new Color();
        g.colorString = a;
        f.or = g;
        f.gj = c;
        f.gk = d;
        f.gl = e;
        f.e1 = b;
    };
    StackedSeriesView.$t = markType(StackedSeriesView, 'StackedSeriesView', CategorySeriesView.$);
    return StackedSeriesView;
}(CategorySeriesView));
export { StackedSeriesView };
/**
 * @hidden
 */
var StackedBarSeriesView = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(StackedBarSeriesView, _super);
    function StackedBarSeriesView(a) {
        var _this = _super.call(this, a) || this;
        _this.c5 = null;
        _this.c5 = a;
        return _this;
    }
    StackedBarSeriesView.prototype.cs = function () {
        return new StackedBarBucketCalculator(this);
    };
    StackedBarSeriesView.prototype.as = function () {
        _super.prototype.as.call(this);
        if (!this.q) {
            this.c0.pr = Defaults.c;
            this.c0.gh = Defaults.h;
            this.c0.gm = Defaults.i;
        }
    };
    StackedBarSeriesView.$t = markType(StackedBarSeriesView, 'StackedBarSeriesView', StackedSeriesView.$);
    return StackedBarSeriesView;
}(StackedSeriesView));
export { StackedBarSeriesView };
/**
 * @hidden
 */
var StackedColumnSeriesView = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(StackedColumnSeriesView, _super);
    function StackedColumnSeriesView(a) {
        return _super.call(this, a) || this;
    }
    StackedColumnSeriesView.prototype.cs = function () {
        return new StackedColumnBucketCalculator(this);
    };
    StackedColumnSeriesView.prototype.as = function () {
        _super.prototype.as.call(this);
        if (!this.q) {
            this.c0.pr = Defaults.c;
            this.c0.gh = Defaults.h;
            this.c0.gm = Defaults.i;
        }
    };
    StackedColumnSeriesView.$t = markType(StackedColumnSeriesView, 'StackedColumnSeriesView', StackedSeriesView.$);
    return StackedColumnSeriesView;
}(StackedSeriesView));
export { StackedColumnSeriesView };
/**
 * @hidden
 */
var StackedAreaSeriesView = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(StackedAreaSeriesView, _super);
    function StackedAreaSeriesView(a) {
        return _super.call(this, a) || this;
    }
    StackedAreaSeriesView.prototype.as = function () {
        _super.prototype.as.call(this);
        if (!this.q) {
            this.c0.pr = Defaults.e;
        }
    };
    StackedAreaSeriesView.$t = markType(StackedAreaSeriesView, 'StackedAreaSeriesView', StackedSeriesView.$);
    return StackedAreaSeriesView;
}(StackedSeriesView));
export { StackedAreaSeriesView };
/**
 * @hidden
 */
var StackedSplineAreaSeriesView = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(StackedSplineAreaSeriesView, _super);
    function StackedSplineAreaSeriesView(a) {
        return _super.call(this, a) || this;
    }
    StackedSplineAreaSeriesView.prototype.as = function () {
        _super.prototype.as.call(this);
        if (!this.q) {
            this.c0.pr = Defaults.e;
        }
    };
    StackedSplineAreaSeriesView.$t = markType(StackedSplineAreaSeriesView, 'StackedSplineAreaSeriesView', StackedSeriesView.$);
    return StackedSplineAreaSeriesView;
}(StackedSeriesView));
export { StackedSplineAreaSeriesView };
/**
 * @hidden
 */
var StackedSplineSeriesView = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(StackedSplineSeriesView, _super);
    function StackedSplineSeriesView(a) {
        return _super.call(this, a) || this;
    }
    StackedSplineSeriesView.prototype.as = function () {
        _super.prototype.as.call(this);
        if (!this.q) {
            this.c0.pr = Defaults.e;
        }
    };
    StackedSplineSeriesView.$t = markType(StackedSplineSeriesView, 'StackedSplineSeriesView', StackedSeriesView.$);
    return StackedSplineSeriesView;
}(StackedSeriesView));
export { StackedSplineSeriesView };
/**
 * @hidden
 */
var StackedSeriesManager = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(StackedSeriesManager, _super);
    function StackedSeriesManager(a) {
        var _this = _super.call(this) || this;
        _this.b = null;
        _this.f = null;
        _this.c = null;
        _this.e = null;
        _this.d = null;
        _this.j = null;
        _this.k = null;
        if (a == null) {
            return _this;
        }
        _this.b = a;
        _this.f = new ObservableCollection$1(AnchoredCategorySeries.$, 0);
        _this.c = new StackedSeriesCollection();
        _this.e = new ObservableCollection$1(AnchoredCategorySeries.$, 0);
        _this.d = new ObservableCollection$1(AnchoredCategorySeries.$, 0);
        _this.j = _this.b.s1.c2;
        _this.k = _this.b.s1.c4;
        var b = _this.c;
        b.collectionChanged = delegateCombine(b.collectionChanged, function (b, c) {
            var e_59, _a, e_60, _b;
            if (c.oldItems != null) {
                try {
                    for (var _c = __values(fromEn(c.oldItems)), _d = _c.next(); !_d.done; _d = _c.next()) {
                        var d = _d.value;
                        if (_this.f.contains(d.visualSeriesLink)) {
                            _this.f.remove(d.visualSeriesLink);
                        }
                    }
                }
                catch (e_59_1) {
                    e_59 = { error: e_59_1 };
                }
                finally {
                    try {
                        if (_d && !_d.done && (_a = _c.return))
                            _a.call(_c);
                    }
                    finally {
                        if (e_59)
                            throw e_59.error;
                    }
                }
            }
            if (c.newItems != null) {
                var e = c.newStartingIndex;
                try {
                    for (var _e = __values(fromEn(c.newItems)), _f = _e.next(); !_f.done; _f = _e.next()) {
                        var f = _f.value;
                        var g = _this.a(f);
                        _this.f.insert(e, g);
                        e++;
                    }
                }
                catch (e_60_1) {
                    e_60 = { error: e_60_1 };
                }
                finally {
                    try {
                        if (_f && !_f.done && (_b = _e.return))
                            _b.call(_e);
                    }
                    finally {
                        if (e_60)
                            throw e_60.error;
                    }
                }
            }
        });
        var c = _this.f;
        c.collectionChanged = delegateCombine(c.collectionChanged, function (c, d) {
            var e_61, _a, e_62, _b;
            if (d.oldItems != null) {
                try {
                    for (var _c = __values(fromEn(d.oldItems)), _d = _c.next(); !_d.done; _d = _c.next()) {
                        var e = _d.value;
                        e.kh(true, e.bx);
                        e.ca = null;
                        e.b5 = null;
                        e.itemsSource = null;
                        e.legend = null;
                        if (_this.k != null && _this.k.ab.contains(e)) {
                            _this.k.ab.remove(e);
                        }
                        if (_this.b.ca != null) {
                            _this.b.ca.l1(e);
                        }
                    }
                }
                catch (e_61_1) {
                    e_61 = { error: e_61_1 };
                }
                finally {
                    try {
                        if (_d && !_d.done && (_a = _c.return))
                            _a.call(_c);
                    }
                    finally {
                        if (e_61)
                            throw e_61.error;
                    }
                }
            }
            if (d.newItems != null) {
                try {
                    for (var _e = __values(fromEn(d.newItems)), _f = _e.next(); !_f.done; _f = _e.next()) {
                        var f = _f.value;
                        f.ca = _this.b.ca;
                        f.b5 = _this.b.b5;
                        if (!_this.k.ab.contains(f)) {
                            _this.k.ab.add(f);
                        }
                        if (_this.b.ca != null) {
                            _this.b.ca.i4(f);
                        }
                    }
                }
                catch (e_62_1) {
                    e_62 = { error: e_62_1 };
                }
                finally {
                    try {
                        if (_f && !_f.done && (_b = _e.return))
                            _b.call(_e);
                    }
                    finally {
                        if (e_62)
                            throw e_62.error;
                    }
                }
            }
            _this.b.l0(false);
        });
        return _this;
    }
    StackedSeriesManager.prototype.a = function (a) {
        if (this.b.isStacked && this.b.dv) {
            var b = new LineFragment();
            b.provideRenderer(a.bm);
            b.parentSeries = this.b;
            a.visualSeriesLink = b;
            b.logicalSeriesLink = a;
            b.bx.bu = this.b.bx.bu;
            this.i(b, a);
            this.g(b);
            return b;
        }
        if (this.b.isStacked && this.b.db) {
            var c = new ColumnFragment();
            c.provideRenderer(a.bm);
            c.parentSeries = this.b;
            a.visualSeriesLink = c;
            c.logicalSeriesLink = a;
            c.bx.bu = this.b.bx.bu;
            this.i(c, a);
            this.g(c);
            return c;
        }
        if (this.b.isStacked && this.b.c9) {
            var d = new BarFragment();
            d.provideRenderer(a.bm);
            d.parentSeries = typeCast(StackedBarSeries.$, this.b);
            a.visualSeriesLink = d;
            d.logicalSeriesLink = a;
            d.bx.bu = this.b.bx.bu;
            this.i(d, a);
            this.g(d);
            return d;
        }
        if (this.b.isStacked && this.b.c7 && !this.b.ea) {
            var e = new AreaFragment();
            e.provideRenderer(a.bm);
            e.parentSeries = this.b;
            a.visualSeriesLink = e;
            e.logicalSeriesLink = a;
            e.bx.bu = this.b.bx.bu;
            this.i(e, a);
            this.g(e);
            return e;
        }
        if (this.b.isStacked && this.b.ea && !this.b.c7) {
            var f = new SplineFragment();
            f.provideRenderer(a.bm);
            f.parentSeries = this.b;
            a.visualSeriesLink = f;
            f.logicalSeriesLink = a;
            f.bx.bu = this.b.bx.bu;
            this.i(f, a);
            this.g(f);
            return f;
        }
        if (this.b.isStacked && this.b.ea && this.b.c7) {
            var g = new SplineAreaFragment();
            g.provideRenderer(a.bm);
            g.parentSeries = this.b;
            a.visualSeriesLink = g;
            g.logicalSeriesLink = a;
            g.bx.bu = this.b.bx.bu;
            this.i(g, a);
            this.g(g);
            return g;
        }
        return null;
    };
    StackedSeriesManager.prototype.i = function (a, b) {
        a.oj = b.h2;
        a.os = b.h5;
        a.ot = b.h7;
        a.ou = b.h8;
        if (b.itemsSource == null) {
            a.itemsSource = this.b.itemsSource;
        }
        else {
            a.itemsSource = b.itemsSource;
        }
        a.legend = this.b.a0;
        a.legendItemTemplate = b.fg;
        a.ph = b.iu;
        a.qt = b.ht;
        a.qu = b.hu;
        a.qv = b.is;
        a.qd = b.fh;
        a.pr = b.q;
        a.pw = b.av;
        a.gf = this.b.gf;
        a._opacity = b.bf;
        a.gd = b.at;
        a.oo = b.hw;
        a.gh = this.b.gh;
        a.ov = b.h9;
        a.gm = b.a2;
        a.hp = b.bv;
        a.pv = b.ad;
        a.tb = b.d4;
        a._visibility = b.iv;
        a.ge = b.au;
        a.bs = b.t;
        var c = typeCast(AreaFragment.$, a);
        if (c != null) {
            c.fi = b.as;
        }
        var d = typeCast(SplineAreaFragment.$, a);
        if (d != null) {
            d.fi = b.as;
        }
        var e = typeCast(ColumnFragment.$, a);
        if (e != null) {
            e.ut = b.ax;
            e.uu = b.ay;
        }
        var f = typeCast(BarFragment.$, a);
        if (f != null) {
            f.ut = b.ax;
            f.uu = b.ay;
        }
        a.toolTip = b.bw;
        a.dg = b.aa;
        a.e1 = b.ae;
        b.e5();
        b.e6();
        b.e7();
        b.e8();
    };
    StackedSeriesManager.prototype.h = function () {
        var e_63, _a;
        this.e.clear();
        this.d.clear();
        var a = 0;
        try {
            for (var _b = __values(fromEnum(this.f)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var b = _c.value;
                b.et = true;
                b.g9 = this.b.tc(this.c._inner[a]);
                b.b5 = this.b.b5;
                b.ca = this.b.ca;
                if (this.c._inner[a].aj) {
                    this.e.add(b);
                }
                else {
                    this.d.add(b);
                }
                if ((this.b.isStacked && this.b.dv) || (this.b.isStacked && this.b.c7) || (this.b.isStacked && this.b.ea)) {
                    b.te(this.b.fetchXAxis());
                    b.tf(this.b.fetchYAxis());
                }
                b.l0(false);
                a++;
            }
        }
        catch (e_63_1) {
            e_63 = { error: e_63_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_63)
                    throw e_63.error;
            }
        }
    };
    StackedSeriesManager.prototype.g = function (a) {
        var fragment_ = a;
        fragment_.externalObject = TypeRegistrar.createFromInternal(fragment_, PlatformConstants.Prefix, PlatformConstants.Postfix);
        fragment_.externalObject._implementation = fragment_;
    };
    StackedSeriesManager.$t = markType(StackedSeriesManager, 'StackedSeriesManager');
    return StackedSeriesManager;
}(Base));
export { StackedSeriesManager };
//# sourceMappingURL=StackedSeriesCreatedEventArgs_combined.js.map
