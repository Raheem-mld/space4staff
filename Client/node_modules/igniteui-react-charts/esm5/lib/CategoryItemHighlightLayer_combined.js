/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends, __values } from "tslib";
import { AnnotationLayer } from "./AnnotationLayer";
import { Series } from "./Series";
import { DependencyProperty } from "igniteui-react-core";
import { CategoryItemHighlightType_$type } from "./CategoryItemHighlightType";
import { MarkerType_$type } from "./MarkerType";
import { Brush } from "igniteui-react-core";
import { DataTemplate } from "igniteui-react-core";
import { CategoryItemHighlightLayerFrame } from "./CategoryItemHighlightLayerFrame";
import { Base, enumGetBox, fromEnum, typeCast, Point_$type, markType, markDep, runOn } from "igniteui-react-core";
import { Dictionary$2 } from "igniteui-react-core";
import { ItemHighlightFrameRect } from "./ItemHighlightFrameRect";
import { List$1 } from "igniteui-react-core";
import { IHasCategoryModePreference_$type } from "./IHasCategoryModePreference";
import { Rect } from "igniteui-react-core";
import { MarkerSeries } from "./MarkerSeries";
import { DataContext } from "igniteui-react-core";
import { Pool$1 } from "igniteui-react-core";
import { Rectangle } from "igniteui-react-core";
import { ContentControl } from "igniteui-react-core";
import { PropertyMetadata } from "igniteui-react-core";
import { isNaN_, isInfinity, truncate } from "igniteui-react-core";
import { AnnotationLayerView } from "./AnnotationLayerView";
import { Marker } from "./Marker";
import { BrushUtil } from "igniteui-react-core";
import { Color } from "igniteui-react-core";
import { DataTemplatePassInfo } from "igniteui-react-core";
import { DataTemplateRenderInfo } from "igniteui-react-core";
import { DataTemplateMeasureInfo } from "igniteui-react-core";
/**
 * @hidden
 */
var CategoryItemHighlightLayer = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(CategoryItemHighlightLayer, _super);
    function CategoryItemHighlightLayer() {
        var _this = _super.call(this) || this;
        _this.qs = false;
        _this.qr = true;
        _this.qv = 10;
        var a = new CategoryItemHighlightLayerFrame();
        var b = new CategoryItemHighlightLayerFrame();
        var c = new CategoryItemHighlightLayerFrame();
        _this.pk = a;
        _this.pj = b;
        _this.pl = c;
        _this.ab = CategoryItemHighlightLayer.$;
        return _this;
    }
    CategoryItemHighlightLayer.prototype.get_c5 = function () {
        return true;
    };
    CategoryItemHighlightLayer.prototype.bu = function () {
        return new CategoryItemHighlightLayerView(this);
    };
    CategoryItemHighlightLayer.prototype.lh = function (a) {
        _super.prototype.lh.call(this, a);
        this.qm = a;
    };
    CategoryItemHighlightLayer.prototype.p3 = function (a, b) {
        if (this.qq == null || this.qq == a) {
            if (!this.as.c) {
                this.l0(b);
            }
        }
    };
    CategoryItemHighlightLayer.prototype.pq = function (a) {
        if (!_super.prototype.pq.call(this, a)) {
            return false;
        }
        if (this.q4 != null) {
            if (a.dn) {
                var b = a.i9();
                if (!Base.equalsStatic(this.q4, b)) {
                    return false;
                }
            }
            else {
                if (!Base.equalsStatic(this.q4, a.name)) {
                    return false;
                }
            }
        }
        var c = this.py(a);
        if (!c.c) {
            return false;
        }
        return true;
    };
    CategoryItemHighlightLayer.prototype.p5 = function (a, b) {
        var e_1, _a;
        var _this = this;
        _super.prototype.p5.call(this, a, b);
        var c = a;
        var d = this.qu;
        c.g.clear();
        if (isNaN_(this.qj.x) && isNaN_(this.qj.y)) {
            return;
        }
        if (this.pq(this.qq)) {
            this.ra(this.qq, c, d);
        }
        else {
            try {
                for (var _b = __values(fromEnum(this.ca.series)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var e = _c.value;
                    if (this.pq(e)) {
                        this.ra(e, c, d);
                    }
                    if (e.isStacked) {
                        e.ku(function (f) {
                            if (_this.pq(f)) {
                                _this.ra(f, c, d);
                            }
                            return true;
                        });
                    }
                }
            }
            catch (e_1_1) {
                e_1 = { error: e_1_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_1)
                        throw e_1.error;
                }
            }
        }
    };
    CategoryItemHighlightLayer.prototype.lm = function (a, b, c, d) {
        _super.prototype.lm.call(this, a, b, c, d);
        switch (b) {
            case CategoryItemHighlightLayer.$$p[4]:
            case CategoryItemHighlightLayer.$$p[5]:
            case CategoryItemHighlightLayer.$$p[2]:
            case CategoryItemHighlightLayer.$$p[3]:
                this.l0(true);
                break;
            case CategoryItemHighlightLayer.$$p[7]:
            case CategoryItemHighlightLayer.$$p[8]:
                this.l0(true);
                break;
            case CategoryItemHighlightLayer.$$p[9]:
                this.qs = d;
                this.l0(true);
                break;
            case CategoryItemHighlightLayer.$$p[1]:
                this.l0(true);
                break;
            case CategoryItemHighlightLayer.$$p[0]:
                this.qv = this.qw;
                this.l0(true);
                break;
            case CategoryItemHighlightLayer.$$p[6]:
                this.qr = d;
                this.l0(true);
                break;
        }
    };
    CategoryItemHighlightLayer.prototype.ra = function (a, b, c) {
        if (this.bx == null || this.bx.bv.isEmpty || this.bx.bu.isEmpty) {
            return;
        }
        if (!a.da && !a.di) {
            return;
        }
        var d = a;
        if (d.categoryAxis == null) {
            return;
        }
        var e = this.qj.x;
        e = this.bx.bu.left + this.bx.bu.width * (e - this.bx.bv.left) / this.bx.bv.width;
        var f = this.qj.y;
        f = this.bx.bu.top + this.bx.bu.height * (f - this.bx.bv.top) / this.bx.bv.height;
        var g = this.qt;
        var h = true;
        var i = typeCast(IHasCategoryModePreference_$type, a);
        var j = 0;
        if (i != null) {
            j = i.preferredCategoryMode(d.categoryAxis);
            if (j == 2) {
                h = false;
            }
        }
        var k = true;
        if (!h || this.qn == 2) {
            k = false;
        }
        if (this.qn == 1) {
            k = true;
        }
        var l = this.py(a);
        if (!l.c) {
            return;
        }
        if (k) {
            var m = a.o2(l.d, this.qu, g);
            if (j != 0 && !d.categoryAxis.ch) {
                var n = m.x;
                if (a.di) {
                    n -= a.getOffsetValue();
                    n += a.getCategoryWidth() * 0.5;
                    m = { $type: Point_$type, x: n, y: m.y };
                }
                else if (a.da) {
                    n -= a.getOffsetValue();
                    n += a.getCategoryWidth() * 0.5;
                    m = { $type: Point_$type, x: n, y: m.y };
                }
            }
            if (!isNaN_(m.x) && !isNaN_(m.y)) {
                m = this.o5(m);
            }
            this.q8(m, b, a);
        }
        else {
            var o = a.o2(l.d, this.qu, g);
            var p = void 0;
            var q = this.getEffectiveViewport1(this.bx);
            if (a.isVertical) {
                var r = o.y;
                var s = d.categoryAxis;
                var t = this.qv;
                if (j != 0) {
                    t = s.ki(this.bx.bv, this.bx.bu, q);
                }
                if (isNaN_(t) || isInfinity(t)) {
                    return;
                }
                p = new Rect(0, this.pf.left, r - t / 2, this.pf.width, t);
            }
            else {
                var u = o.x;
                var v = d.categoryAxis;
                var w = this.qv;
                if (j != 0) {
                    w = v.ki(this.bx.bv, this.bx.bu, q);
                }
                if (isNaN_(w) || isInfinity(w)) {
                    return;
                }
                p = new Rect(0, u - w / 2, this.pf.top, w, this.pf.height);
            }
            p.intersect(this.bx.bu);
            this.q9(p, b, a);
        }
    };
    CategoryItemHighlightLayer.prototype.q8 = function (a, b, c) {
        var d = new ItemHighlightFrameRect();
        d.b = a.x;
        d.e = a.y;
        d.i = this.qh();
        if (this.ro != null) {
            d.i = this.ro;
        }
        d.j = this.qi();
        if (this.rp != null) {
            d.j = this.rp;
        }
        if (d.i == null) {
            if (c.hasMarkers) {
                d.i = this.qm.ci(c.om());
            }
            else {
                d.i = this.qm.ci(c.of);
            }
        }
        if (d.j == null) {
            if (c.hasMarkers) {
                d.j = this.qm.ci(c.on());
            }
            else {
                d.j = this.qm.ci(c.oi);
            }
        }
        d.d = this.fl;
        d.f = Base.getHashCodeStatic(c);
        d.g = this.qo(c, a);
        var e = (typeCast(MarkerSeries.$, c) !== null) ? c.qb : null;
        if (e == null || e == MarkerSeries.qe || (this.qp != 2 && this.qp != 0)) {
            var f = MarkerSeries.ps(c, 2);
            if (this.qp != 2 && this.qp != 0) {
                f = this.qp;
            }
            switch (f) {
                case 3:
                case 13:
                    e = this.ca.mu;
                    break;
                case 4:
                    e = this.ca.m3;
                    break;
                case 5:
                    e = this.ca.m0;
                    break;
                case 6:
                    e = this.ca.m1;
                    break;
                case 7:
                    e = this.ca.mv;
                    break;
                case 8:
                    e = this.ca.my;
                    break;
                case 9:
                    e = this.ca.mw;
                    break;
                case 10:
                    e = this.ca.m2;
                    break;
                case 11:
                    e = this.ca.mz;
                    break;
                case 12:
                    e = this.ca.mx;
                    break;
            }
        }
        d.h = this.rd != null ? this.rd : e;
        if (!isNaN_(d.b) && !isNaN_(d.e)) {
            b.g.addItem(d.f, d);
        }
    };
    CategoryItemHighlightLayer.prototype.qo = function (a, b) {
        var c = a.hh(b);
        var d = a.fw(b);
        if (this.qu && d != Math.floor(d)) {
            c = null;
        }
        return ((function () {
            var $ret = new DataContext();
            $ret.series = a;
            $ret.item = c;
            return $ret;
        })());
    };
    CategoryItemHighlightLayer.prototype.q9 = function (a, b, c) {
        var d = new ItemHighlightFrameRect();
        d.b = a.left;
        d.e = a.top;
        d.c = a.right;
        d.a = a.bottom;
        d.i = this.qh();
        d.j = this.qi();
        if (d.i == null) {
            if (c != null) {
                d.i = this.qm.cj(c.of);
            }
        }
        if (d.j == null) {
            if (c != null) {
                d.j = this.qm.cj(c.oi);
            }
        }
        d.d = this.fl;
        d.f = Base.getHashCodeStatic(c);
        if (!a.isEmpty) {
            b.g.addItem(d.f, d);
        }
    };
    CategoryItemHighlightLayer.prototype.p8 = function (a, b) {
        var e_2, _a;
        _super.prototype.p8.call(this, a, b);
        var c = this.qm.b6;
        var d = this.qm.b5;
        var e = 0;
        var f = 0;
        var g = a;
        try {
            for (var _b = __values(fromEnum(g.g.values)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var h = _c.value;
                if (h.h != null) {
                    var i = d.item(f);
                    this.rb(h, i);
                    f++;
                }
                else {
                    var j = c.item(e);
                    this.rc(h, j);
                    e++;
                }
            }
        }
        catch (e_2_1) {
            e_2 = { error: e_2_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_2)
                    throw e_2.error;
            }
        }
        c.count = e;
        d.count = f;
    };
    CategoryItemHighlightLayer.prototype.rb = function (a, b) {
        if (isNaN_(a.b) || isNaN_(a.e) || isNaN_(a.d) || a.g == null) {
            b._visibility = 1;
            return;
        }
        var c = { $type: Point_$type, x: a.b, y: a.e };
        var d = a.g;
        d.itemBrush = a.i;
        var e = d.series.o2(c, this.cr() || this.qs, this.qr);
        if (isNaN_(e.x) || isNaN_(e.y)) {
            b._visibility = 1;
            return;
        }
        this.qm.cc(b, e.x, e.y);
        b.ah = a.h;
        b.content = a.g;
    };
    CategoryItemHighlightLayer.prototype.rc = function (a, b) {
        if (isNaN_(a.b) || isNaN_(a.e) || isNaN_(a.a) || isNaN_(a.c) || isNaN_(a.d)) {
            b._visibility = 1;
            return;
        }
        this.qm.cd(b, a.b, a.e, a.c - a.b, a.a - a.e);
        b._fill = a.i;
        b._stroke = a.j;
        b.ac = a.d;
        if (this.os != null) {
            b.ai = this.os;
        }
        else {
            b.ai = null;
        }
        b.ad = this.ot;
    };
    CategoryItemHighlightLayer.prototype.eg = function () {
        return true;
    };
    CategoryItemHighlightLayer.$t = markType(CategoryItemHighlightLayer, 'CategoryItemHighlightLayer', AnnotationLayer.$);
    CategoryItemHighlightLayer.$$p = markDep(DependencyProperty, PropertyMetadata, CategoryItemHighlightLayer, 'raisePropertyChanged', ['BandHighlightWidth:qw:re', [1, 10], 'HighlightType:qn:rf', [CategoryItemHighlightType_$type, enumGetBox(CategoryItemHighlightType_$type, 0)], 'MarkerBrush:ro:rg', [Brush.$, null], 'MarkerOutline:rp:rh', [Brush.$, null], 'MarkerTemplate:rd:ri', [DataTemplate.$, null], 'MarkerType:qp:rj', [MarkerType_$type, enumGetBox(MarkerType_$type, 2)], 'SkipUnknownValues:qt:rk', [0, true], 'TargetSeriesName:q4:rl', [2, null], 'TargetSeries:qq:rm', [Series.$, null], 'UseInterpolation:qu:rn', [0, false]]);
    return CategoryItemHighlightLayer;
}(AnnotationLayer));
export { CategoryItemHighlightLayer };
/**
 * @hidden
 */
var CategoryItemHighlightLayerView = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(CategoryItemHighlightLayerView, _super);
    function CategoryItemHighlightLayerView(a) {
        var _this = _super.call(this, a) || this;
        _this.b4 = null;
        _this.b6 = null;
        _this.b5 = null;
        _this.b7 = null;
        _this.b8 = null;
        _this.b4 = a;
        _this.b7 = new List$1(ContentControl.$, 0);
        _this.b8 = new List$1(Rectangle.$, 0);
        return _this;
    }
    CategoryItemHighlightLayerView.prototype.as = function () {
        var _this = this;
        _super.prototype.as.call(this);
        this.b6 = ((function () {
            var $ret = new Pool$1(Rectangle.$);
            $ret.create = runOn(_this, _this.ck);
            $ret.activate = runOn(_this, _this.ce);
            $ret.disactivate = runOn(_this, _this.cg);
            $ret.destroy = runOn(_this, _this.cf);
            return $ret;
        })());
        this.b5 = ((function () {
            var $ret = new Pool$1(ContentControl.$);
            $ret.create = runOn(_this, _this.ch);
            $ret.activate = runOn(_this, _this.b9);
            $ret.disactivate = runOn(_this, _this.cb);
            $ret.destroy = runOn(_this, _this.ca);
            return $ret;
        })());
    };
    CategoryItemHighlightLayerView.prototype.ck = function () {
        var a = new Rectangle();
        a.ab = false;
        this.b8.add(a);
        return a;
    };
    CategoryItemHighlightLayerView.prototype.ce = function (a) {
        a._visibility = 0;
    };
    CategoryItemHighlightLayerView.prototype.cg = function (a) {
        a._visibility = 1;
    };
    CategoryItemHighlightLayerView.prototype.cf = function (a) {
        this.b8.remove(a);
    };
    CategoryItemHighlightLayerView.prototype.ch = function () {
        var a = new Marker();
        this.b7.add(a);
        return a;
    };
    CategoryItemHighlightLayerView.prototype.b9 = function (a) {
        a._visibility = 0;
    };
    CategoryItemHighlightLayerView.prototype.cb = function (a) {
        a._visibility = 1;
    };
    CategoryItemHighlightLayerView.prototype.ca = function (a) {
        this.b7.remove(a);
    };
    CategoryItemHighlightLayerView.prototype.ci = function (a) {
        if (a == null) {
            return a;
        }
        return BrushUtil.l(a, 0.3);
    };
    CategoryItemHighlightLayerView.prototype.cj = function (a) {
        if (a != null) {
            var b = BrushUtil.l(a, 0.3);
            if (b.isGradient) {
                var c = b;
                if (c.gradientStops != null) {
                    for (var d = 0; d < c.gradientStops.length; d++) {
                        var e = c.gradientStops[d];
                        e.color = Color.u(truncate(Math.round((e.color.l) * 0.3)), e.color.o, e.color.n, e.color.m);
                        e.color = e.color;
                    }
                }
            }
            else {
                b.color = Color.u(truncate(Math.round((b.color.l & 255) * 0.3)), b.color.o, b.color.n, b.color.m);
                b.color = b.color;
            }
            return b;
        }
        else {
            return null;
        }
    };
    CategoryItemHighlightLayerView.prototype.cd = function (a, b, c, d, e) {
        a._visibility = 0;
        a.n = b;
        a.o = c;
        a.width = d;
        a.height = e;
    };
    CategoryItemHighlightLayerView.prototype.cc = function (a, b, c) {
        a.n = b;
        a.o = c;
    };
    CategoryItemHighlightLayerView.prototype.bh = function (a, b) {
        _super.prototype.bh.call(this, a, b);
        var c = a;
        var d = c.content;
        if (d != null) {
            if (d.itemBrush != null) {
                d.actualItemBrush = d.itemBrush;
            }
            var e = d.series;
            if (e.hasMarkers) {
                d.outline = e.on();
            }
            d.thickness = e.ft();
        }
    };
    CategoryItemHighlightLayerView.prototype.a6 = function (a, b) {
        var e_3, _a;
        _super.prototype.a6.call(this, a, b);
        if (a.d && !b) {
            for (var c = 0; c < this.b8.count; c++) {
                var d = this.b8._inner[c];
                if (d._visibility == 0) {
                    a.v(d);
                }
            }
            if (this.b7.count > 0) {
                var e = new DataTemplatePassInfo();
                e.isHitTestRender = b;
                e.context = a.g();
                e.viewportTop = this.bu.top;
                e.viewportLeft = this.bu.left;
                e.viewportWidth = this.bu.width;
                e.viewportHeight = this.bu.height;
                e.passID = "ItemMarkers";
                var f = new DataTemplateRenderInfo();
                f.isHitTestRender = b;
                f.passInfo = e;
                var g = new DataTemplateMeasureInfo();
                g.passInfo = e;
                var h = false;
                var i = a.g();
                g.context = i;
                f.context = i;
                g.renderContext = a;
                f.renderContext = a;
                var j = 0;
                var k = 0;
                var l = new Dictionary$2(DataTemplate.$, DataTemplate.$, 0);
                for (var m = 0; m < this.b7.count; m++) {
                    var n = this.b7._inner[m];
                    var o = n.ah;
                    if (!l.containsKey(o)) {
                        l.addItem(o, o);
                        if (o != null && o.passStarting != null) {
                            o.passStarting(e);
                        }
                    }
                    if (n._visibility == 1) {
                        continue;
                    }
                    this.bg(n, m, b);
                    if (!h) {
                        g.data = n.content;
                        g.width = n.width;
                        g.height = n.height;
                        if (o.measure != null) {
                            g.data = n.content;
                            o.measure(g);
                            h = g.isConstant;
                            if (h) {
                                j = g.width;
                                k = g.height;
                            }
                        }
                        f.availableWidth = g.width;
                        f.availableHeight = g.height;
                    }
                    else {
                        f.availableWidth = j;
                        f.availableHeight = k;
                    }
                    if (!isNaN_(n.width) && !isInfinity(n.width)) {
                        f.availableWidth = n.width;
                    }
                    if (!isNaN_(n.height) && !isInfinity(n.height)) {
                        f.availableHeight = n.height;
                    }
                    a.p(f, n);
                    n.m = f.availableWidth;
                    n.l = f.availableHeight;
                }
                try {
                    for (var _b = __values(fromEnum(l.keys)), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var p = _c.value;
                        if (p != null && p.passCompleted != null) {
                            p.passCompleted(e);
                        }
                    }
                }
                catch (e_3_1) {
                    e_3 = { error: e_3_1 };
                }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return))
                            _a.call(_b);
                    }
                    finally {
                        if (e_3)
                            throw e_3.error;
                    }
                }
            }
        }
    };
    CategoryItemHighlightLayerView.prototype.al = function (a) {
        _super.prototype.al.call(this, a);
        for (var b = 0; b < this.b8.count; b++) {
            this.e.a6.exportRectangleData(a, this.b8._inner[b], "catItemRect", ["Main", "CategoryItem"]);
        }
        for (var c = 0; c < this.b7.count; c++) {
            this.e.a6.exportMarkerVisualDataFromMarker(this.e, a, this.b7._inner[c]);
        }
    };
    CategoryItemHighlightLayerView.$t = markType(CategoryItemHighlightLayerView, 'CategoryItemHighlightLayerView', AnnotationLayerView.$);
    return CategoryItemHighlightLayerView;
}(AnnotationLayerView));
export { CategoryItemHighlightLayerView };
//# sourceMappingURL=CategoryItemHighlightLayer_combined.js.map
