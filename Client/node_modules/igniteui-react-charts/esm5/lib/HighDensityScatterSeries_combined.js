/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Series } from "./Series";
import { NumericXAxis } from "./NumericXAxis";
import { DependencyProperty } from "igniteui-react-core";
import { NumericYAxis } from "./NumericYAxis";
import { Color } from "igniteui-react-core";
import { ScatterFrame } from "./ScatterFrame";
import { Defaults } from "./Defaults";
import { KDTree2D } from "./KDTree2D";
import { typeGetValue, runOn, delegateRemove, typeCast, delegateCombine, markType, markDep, toNullable } from "igniteui-react-core";
import { Rect } from "igniteui-react-core";
import { IFastItemsSource_$type } from "igniteui-react-core";
import { BrushUtil } from "igniteui-react-core";
import { SeriesView } from "./SeriesView";
import { List$1 } from "igniteui-react-core";
import { KDPointData } from "./KDPointData";
import { ScalerParams } from "./ScalerParams";
import { ProgressiveLoadStatusEventArgs } from "./ProgressiveLoadStatusEventArgs";
import { SearchArgs } from "./SearchArgs";
import { KDTreeNode2D } from "./KDTreeNode2D";
import { AxisRange } from "./AxisRange";
import { PropertyMetadata } from "igniteui-react-core";
import { truncate, isNaN_, isInfinity, logBase, intDivide } from "igniteui-react-core";
import { boxArray$1, arrayShallowClone } from "igniteui-react-core";
import { dateNow } from "igniteui-react-core";
import { RenderingContext } from "igniteui-react-core";
import { CanvasViewRenderer } from "igniteui-react-core";
import { Rectangle } from "igniteui-react-core";
/**
 * @hidden
 */
var HighDensityScatterSeries = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(HighDensityScatterSeries, _super);
    function HighDensityScatterSeries() {
        var _this = _super.call(this) || this;
        _this.pv = null;
        _this.px = null;
        _this.q6 = 0;
        _this.pz = false;
        _this.ql = Defaults.aq.o;
        _this.qk = Defaults.aq.n;
        _this.qj = Defaults.aq.m;
        _this.qi = Defaults.aq.l;
        _this.qh = Defaults.ap.o;
        _this.qg = Defaults.ap.n;
        _this.qf = Defaults.ap.m;
        _this.qe = Defaults.ap.l;
        _this.pn = null;
        _this.ps = null;
        _this.pt = null;
        _this.po = null;
        _this.pq = null;
        _this.p1 = false;
        _this.q7 = 0;
        _this.q9 = 0;
        _this.q3 = 0;
        _this.q2 = 0;
        _this.progressiveLoadStatusChanged = null;
        _this.p6 = null;
        _this.qc = 0;
        _this.qb = 0;
        _this.qd = 0;
        _this.qs = 0;
        _this.qq = 0;
        _this.qr = 0;
        _this.qt = 0;
        _this.qv = 0;
        _this.qx = 0;
        _this.qw = 0;
        _this.qu = 0;
        _this.p8 = 0;
        _this.p9 = 0;
        _this.qa = 0;
        _this.p7 = 0;
        _this.q5 = 0;
        _this.q4 = 0;
        _this.pk = null;
        _this.q8 = 0;
        _this.p0 = false;
        _this._itemIndexes = null;
        _this.pl = null;
        _this.pi = null;
        _this.pu = null;
        _this.ab = HighDensityScatterSeries.$;
        _this.ef = false;
        return _this;
    }
    HighDensityScatterSeries.prototype.get_dz = function () {
        return true;
    };
    HighDensityScatterSeries.prototype.get_d6 = function () {
        return true;
    };
    Object.defineProperty(HighDensityScatterSeries.prototype, "pw", {
        get: function () {
            return this.pv;
        },
        set: function (a) {
            if (this.pv != a) {
                var b = this.pw;
                this.pv = a;
                this.raisePropertyChanged("XColumn", b, this.pw);
            }
        },
        enumerable: false,
        configurable: true
    });
    HighDensityScatterSeries.prototype.hk = function (a, b) {
        var c = this.ja(b);
        if (c == HighDensityScatterSeries.$$p[8]) {
            return this.hl(a, b, this.ro);
        }
        if (c == HighDensityScatterSeries.$$p[10]) {
            return this.hl(a, b, this.rs);
        }
        return _super.prototype.hk.call(this, a, b);
    };
    Object.defineProperty(HighDensityScatterSeries.prototype, "py", {
        get: function () {
            return this.px;
        },
        set: function (a) {
            if (this.px != a) {
                var b = this.py;
                this.px = a;
                this.raisePropertyChanged("YColumn", b, this.py);
            }
        },
        enumerable: false,
        configurable: true
    });
    HighDensityScatterSeries.prototype.r7 = function () {
        if (this.pn == null) {
            return;
        }
        this.pn.s();
        var a = this.pn;
        a.progressiveThunkCompleted = delegateRemove(a.progressiveThunkCompleted, runOn(this, this.ru));
        this.pn = null;
    };
    HighDensityScatterSeries.prototype.lm = function (a, b, c, d) {
        _super.prototype.lm.call(this, a, b, c, d);
        switch (b) {
            case "SeriesViewer":
                if (this.ca != null) {
                    var e = this.getEffectiveViewport1(this.bx);
                    this.p0 = !e.isEmpty;
                }
                break;
            case "FastItemsSource":
                this.r7();
                if (typeCast(IFastItemsSource_$type, c) != null) {
                    c.deregisterColumn(this.pw);
                    c.deregisterColumn(this.py);
                    this.pw = null;
                    this.py = null;
                }
                if (typeCast(IFastItemsSource_$type, d) != null) {
                    this.pw = this.ce(this.ro);
                    this.py = this.ce(this.rs);
                }
                if ((this.pr != null && !this.pr.cv()) || (this.pp != null && !this.pp.cv())) {
                    this.l0(false);
                }
                this.k8();
                break;
            case HighDensityScatterSeries.$$p[7]:
                var f = this.po;
                this.po = this.pp;
                this.r7();
                if (f != null) {
                    f.rangeChanged = delegateRemove(f.rangeChanged, runOn(this, this.rx));
                }
                if (this.po != null) {
                    var g = this.po;
                    g.rangeChanged = delegateCombine(g.rangeChanged, runOn(this, this.rx));
                }
                if (c != null) {
                    c.bx(this);
                }
                if (d != null) {
                    d.cn(this);
                }
                if ((this.pp != null && !this.pp.cv()) || (d == null && c != null)) {
                    this.l0(false);
                }
                break;
            case HighDensityScatterSeries.$$p[9]:
                var h = this.pq;
                this.pq = this.pr;
                this.r7();
                if (h != null) {
                    h.rangeChanged = delegateRemove(h.rangeChanged, runOn(this, this.rx));
                }
                if (this.pq != null) {
                    var i = this.pq;
                    i.rangeChanged = delegateCombine(i.rangeChanged, runOn(this, this.rx));
                }
                if (c != null) {
                    c.bx(this);
                }
                if (d != null) {
                    d.cn(this);
                }
                if ((this.pr != null && !this.pr.cv()) || (d == null && c != null)) {
                    this.l0(false);
                }
                break;
            case "MouseOverEnabled":
                this.p1 = this.ef;
                this.l0(false);
                break;
            case HighDensityScatterSeries.$$p[8]:
                if (this.ch != null) {
                    this.ch.deregisterColumn(this.pw);
                    this.pw = this.ce(this.ro);
                }
                break;
            case "XColumn":
                this.r7();
                if (this.pp != null && !this.pp.cv()) {
                    this.l0(false);
                }
                this.k8();
                break;
            case HighDensityScatterSeries.$$p[10]:
                if (this.ch != null) {
                    this.ch.deregisterColumn(this.py);
                    this.py = this.ce(this.rs);
                }
                break;
            case "YColumn":
                this.r7();
                if (this.pr != null && !this.pr.cv()) {
                    this.l0(false);
                }
                this.k8();
                break;
            case HighDensityScatterSeries.$$p[6]:
                this.r7();
                this.l0(false);
                this.k7();
                break;
            case HighDensityScatterSeries.$$p[3]:
                this.l0(false);
                this.k7();
                break;
            case HighDensityScatterSeries.$$p[1]:
                this.l0(false);
                this.k7();
                break;
            case HighDensityScatterSeries.$$p[0]:
            case HighDensityScatterSeries.$$p[2]:
                if (!this.pm.b1(this.sm, this.sl)) {
                    return;
                }
                this.r1();
                this.l0(false);
                this.k7();
                break;
            case HighDensityScatterSeries.$$p[4]:
                this.q6 = Math.max(typeGetValue(d) - 1, 0);
                this.pz = this.q6 > 0;
                this.l0(false);
                this.k7();
                break;
            case HighDensityScatterSeries.$$p[5]:
                this.l0(false);
                this.k7();
                break;
        }
    };
    HighDensityScatterSeries.prototype.r1 = function () {
        this.qi = this.sm.l;
        this.ql = this.sm.o;
        this.qk = this.sm.n;
        this.qj = this.sm.m;
        this.qe = this.sl.l;
        this.qh = this.sl.o;
        this.qg = this.sl.n;
        this.qf = this.sl.m;
        this.oo = BrushUtil.g(truncate(this.qi), truncate(this.ql), truncate(this.qk), truncate(this.qj));
        this.oj = BrushUtil.g(truncate(this.qe), truncate(this.qh), truncate(this.qg), truncate(this.qf));
    };
    HighDensityScatterSeries.prototype.p3 = function (a) {
        if (typeCast(NumericYAxis.$, a) !== null) {
            return true;
        }
        return false;
    };
    HighDensityScatterSeries.prototype.p2 = function (a) {
        if (typeCast(NumericXAxis.$, a) !== null) {
            return true;
        }
        return false;
    };
    HighDensityScatterSeries.prototype.rx = function (a, b) {
        this.r7();
        this.l0(false);
    };
    Object.defineProperty(HighDensityScatterSeries.prototype, "qp", {
        get: function () {
            return this.qh - this.ql;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(HighDensityScatterSeries.prototype, "qo", {
        get: function () {
            return this.qg - this.qk;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(HighDensityScatterSeries.prototype, "qn", {
        get: function () {
            return this.qf - this.qj;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(HighDensityScatterSeries.prototype, "qm", {
        get: function () {
            return this.qe - this.qi;
        },
        enumerable: false,
        configurable: true
    });
    HighDensityScatterSeries.prototype.e3 = function (a, b, c) {
        var d = _super.prototype.e3.call(this, a, b, c);
        if (this.pr == null || this.pp == null || this.pp.bh == null || this.pr.bh == null || this.py == null || this.pw == null || this.py.count < 1 || this.pw.count < 1 || this.py.count != this.pw.count || this.pp.kv == this.pp.ku || this.pr.kv == this.pr.ku || this.pf.isEmpty) {
            d = false;
        }
        return d;
    };
    Object.defineProperty(HighDensityScatterSeries.prototype, "rd", {
        get: function () {
            return this.q7;
        },
        set: function (a) {
            var b = this.q7;
            this.q7 = a;
            this.raisePropertyChanged("ProgressiveStatus", b, this.q7);
        },
        enumerable: false,
        configurable: true
    });
    HighDensityScatterSeries.prototype.l1 = function (a) {
        _super.prototype.l1.call(this, a);
        this.rz(a, this.bx);
    };
    HighDensityScatterSeries.prototype.rz = function (a, b) {
        if (this.ct(b)) {
            return;
        }
        if (this.pn == null && !this.p5) {
            var c = new List$1(KDPointData.$, 2, this.pw.count);
            var d = this.pp;
            var e = this.pr;
            var f = new Rect(0, 0, 0, 1, 1);
            var g = new Rect(0, 0, 0, 1, 1);
            var h = new ScalerParams(1, f, g, d.cc);
            var i = new ScalerParams(1, f, g, e.cc);
            var j_1;
            var k_1;
            var _loop_1 = function (l) {
                j_1 = d.d8(this_1.pw.item(l), h);
                k_1 = e.d8(this_1.py.item(l), i);
                if (!isNaN_(j_1) && !isNaN_(k_1) && !isInfinity(j_1) && !isInfinity(k_1)) {
                    c.add(((function () {
                        var $ret = new KDPointData();
                        $ret.a = j_1;
                        $ret.b = k_1;
                        $ret.c = l;
                        return $ret;
                    })()));
                }
            };
            var this_1 = this;
            for (var l = 0; l < this.pw.count; l++) {
                _loop_1(l);
            }
            if (this.p4) {
                this.q2 = 1;
                this.q3 = truncate(logBase(c.count, 2)) + 3;
                this.rd = truncate(((this.q2 / this.q3) * 100));
                if (this.progressiveLoadStatusChanged != null) {
                    this.progressiveLoadStatusChanged(this, new ProgressiveLoadStatusEventArgs(this.rd));
                }
                this.pn = KDTree2D.b(c.toArray(), 1);
                var m = this.pn;
                m.progressiveThunkCompleted = delegateCombine(m.progressiveThunkCompleted, runOn(this, this.ru));
                if (!this.pn.f(this.gw)) {
                    var n = this.pn;
                    n.progressiveThunkCompleted = delegateRemove(n.progressiveThunkCompleted, runOn(this, this.ru));
                }
                this.k7();
            }
            else {
                var o = dateNow();
                this.pn = new KDTree2D(0, c.toArray(), 1);
                var p = dateNow();
            }
        }
        if (this.p4 && !this.p5) {
            this.r0(b);
        }
        else {
            this.r2(b);
        }
    };
    HighDensityScatterSeries.prototype.kk = function (a, b, c, d) {
        _super.prototype.kk.call(this, a, b, c, d);
        this.r7();
        var e = false;
        if (this.pp != null && !this.pp.cv()) {
            e = true;
        }
        if (this.pr != null && !this.pr.cv()) {
            e = true;
        }
        if (e) {
            this.l0(false);
        }
        this.k8();
    };
    HighDensityScatterSeries.prototype.rw = function (a) {
        var b = a;
        var c = this.q5 * this.q4;
        if (this.p1) {
            if (this._itemIndexes == null || this._itemIndexes.length != c) {
                this._itemIndexes = new Array(c);
                for (var d = 0; d < c; d++) {
                    this._itemIndexes[d] = 0;
                }
            }
            else {
                for (var e = 0; e < c; e++) {
                    this._itemIndexes[e] = 0;
                }
            }
        }
    };
    HighDensityScatterSeries.prototype.r2 = function (a) {
        var b;
        var c;
        var d = null;
        if (a.q) {
            d = this._itemIndexes;
        }
        var e = a.getViewInfo(c, b);
        c = e.p0;
        b = e.p1;
        var f = a;
        var g = this.getEffectiveViewport1(a);
        this.ps = new ScalerParams(0, b, c, this.po.cc, g);
        this.pt = new ScalerParams(0, b, c, this.pq.cc, g);
        this.rv(a);
        this.rw(a);
        var h = this.q5 * this.q4;
        if (this.pl == null || this.pl.length != h) {
            this.pl = new Array(h);
            this.pi = new Array(h);
        }
        var i = this.pl.length;
        var j = this.pl;
        var k = this.pi;
        for (var l = 0; l < i; l++) {
            j[l] = 0;
            k[l] = 0;
        }
        this.q9 = truncate(Math.round(this.gh));
        this.pk = f.by();
        var m = this.pk.length;
        var n = this.pk;
        for (var o = 0; o < m; o++) {
            n[o] = 0;
        }
        var p = this.q0;
        var q = this.qz;
        if (isNaN_(p) || isInfinity(p)) {
            p = 0;
        }
        if (isNaN_(q) || isInfinity(q)) {
            q = 50;
        }
        this.qc = Math.min(p, q);
        this.qb = Math.max(p, q);
        if (this.qc < 0) {
            this.qc = 0;
        }
        if (this.qb < 0) {
            this.qb = 0;
        }
        this.qd = this.qb - this.qc;
        if (this.p5) {
            this.ry(a);
        }
        else {
            this.r9(a);
        }
        f.b9();
        if (a.q) {
            this._itemIndexes = d;
            this.pm.ca();
        }
    };
    HighDensityScatterSeries.prototype.r0 = function (a) {
        if (this.pn == null) {
            return;
        }
        this.r2(a);
    };
    HighDensityScatterSeries.prototype.ru = function (a, b) {
        var _this = this;
        this.pm.b8(function () {
            if (_this.q2 < _this.q3 - 1) {
                _this.q2++;
            }
            _this.rd = truncate(((_this.q2 / _this.q3) * 100));
            if (_this.progressiveLoadStatusChanged != null) {
                _this.progressiveLoadStatusChanged(_this, new ProgressiveLoadStatusEventArgs(_this.rd));
            }
            _this.r0(_this.bx);
            _this.k7();
            if (_this.pn != null) {
                if (!_this.pn.f(_this.gw)) {
                    var c = _this.pn;
                    c.progressiveThunkCompleted = delegateRemove(c.progressiveThunkCompleted, runOn(_this, _this.ru));
                    _this.rd = 100;
                    if (_this.progressiveLoadStatusChanged != null) {
                        _this.progressiveLoadStatusChanged(_this, new ProgressiveLoadStatusEventArgs(_this.rd));
                    }
                }
            }
        });
    };
    HighDensityScatterSeries.prototype.ry = function (a) {
        var b = arrayShallowClone(this.pw.asArray());
        this.pp.g5(boxArray$1(b), 0, b.length, this.ps);
        var c = arrayShallowClone(this.py.asArray());
        this.q8 = 0;
        var d = this.q6;
        var e = this.pz;
        var f = this.pl.length;
        this.pr.g5(boxArray$1(c), 0, c.length, this.pt);
        var g = 255 << 24 | truncate(this.ql) << 16 | truncate(this.qk) << 8 | truncate(this.qj);
        for (var h = 0; h < b.length; h++) {
            var i = truncate(b[h]);
            var j = truncate(c[h]);
            i = truncate(Math.floor(i));
            j = truncate(Math.floor(j));
            if (i < 0 || i >= this.q5 || j < 0 || j >= this.q4) {
                continue;
            }
            if (e) {
                var k = i - d;
                var l = i + d;
                l = l > (this.q5 - 1) ? (this.q5 - 1) : l;
                k = k < 0 ? 0 : k;
                var m = j + d;
                var n = j - d;
                for (var o = k; o <= l; o++) {
                    for (var p = n; p <= m; p++) {
                        var q = (p * this.q5) + o;
                        if (q < 0 || q > f - 1) {
                            continue;
                        }
                        this.pl[q] = this.pl[q] + 1;
                        this.pi[q] = 1;
                        this.q8++;
                        if (this.p1) {
                            this._itemIndexes[q] = h + 1;
                        }
                    }
                }
            }
            else {
                var r = (j * this.q5) + i;
                this.pl[r] = this.pl[r] + 1;
                this.pi[r] = 1;
                this.q8++;
                if (this.p1) {
                    this._itemIndexes[r] = h + 1;
                }
            }
        }
        this.r3();
    };
    HighDensityScatterSeries.prototype.r9 = function (a) {
        var b;
        var c;
        var d = a.getViewInfo(b, c);
        b = d.p0;
        c = d.p1;
        if (this.pn == null) {
            return;
        }
        if (this.p6 == null) {
            this.p6 = new List$1(KDTreeNode2D.$, 2, truncate(Math.round(b.width * b.height)));
        }
        else {
            this.p6.clear();
        }
        var e = c.left;
        var f = c.right;
        var g = c.top;
        var h = c.bottom;
        this.qw = c.top;
        this.qu = c.height;
        this.qv = c.left;
        this.qx = c.width;
        this.qs = b.top;
        this.qq = b.height;
        this.qr = b.left;
        this.qt = b.width;
        var i = this.getEffectiveViewport1(a);
        this.p8 = (i.left - this.qr) / this.qt;
        this.p9 = (i.top - this.qs) / this.qq;
        var j = (i.right - this.qr) / this.qt;
        this.qa = j - this.p8;
        var k = (i.bottom - this.qs) / this.qq;
        this.p7 = k - this.p9;
        if (this.p0) {
            e = (e - this.p8) / this.qa;
            f = (f - this.p8) / this.qa;
            g = (g - this.p9) / this.p7;
            h = (h - this.p9) / this.p7;
        }
        var l = this.gh / b.width * c.width;
        var m = this.gh / b.height * c.height;
        var n = Math.min(l, m);
        var o = ((function () {
            var $ret = new SearchArgs();
            $ret.c = e;
            $ret.a = f;
            $ret.d = g;
            $ret.b = h;
            $ret.e = l;
            $ret.f = m;
            $ret.g = 0x7FFFFFFF;
            return $ret;
        })());
        this.pn.t(this.p6, o, 0, 1, 0, 1);
        var p;
        this.q8 = 0;
        for (var q = 0; q < this.p6.count; q++) {
            p = this.p6._inner[q];
            this.r4(p);
        }
        this.r3();
    };
    HighDensityScatterSeries.prototype.r4 = function (a) {
        if (a.g) {
            return;
        }
        var b = a.e != null && a.e.a;
        var c = a.a == null ? 0 : a.a.length;
        var d = (a.h - c) + 1;
        if (b && d > 0) {
        }
        else {
            d = 1;
        }
        this.r6(a.b, d, b, a.e);
        if (c > 0 && !b) {
            var e = void 0;
            for (var f = 0; f < c; f++) {
                e = a.a[f];
                this.r6(e, d, false, a.e);
            }
        }
        if (a.e != null) {
            a.e.a = false;
        }
    };
    HighDensityScatterSeries.prototype.eh = function (a) {
        var b = this.ca != null ? this.ca.pg : Rect.empty;
        var c = this.ca != null ? this.ca.pv : Rect.empty;
        var d = new Rect(0, 0, 0, 1, 1);
        var e = this.o9(this.bx);
        var f = new ScalerParams(0, d, d, this.pp.cc, e);
        var g = new ScalerParams(0, d, d, this.pr.cc, e);
        var h = !b.isEmpty && !c.isEmpty && this.ch != null ? this.ch.indexOf(a) : -1;
        var i = this.pp != null && this.pw != null && h < this.pw.count ? this.pp.d8(this.pw.item(h), f) : NaN;
        var j = this.pr != null && this.py != null && h < this.py.count ? this.pr.d8(this.py.item(h), g) : NaN;
        if (!isNaN_(i)) {
            if (i < b.left + 0.1 * b.width) {
                i = i + 0.4 * b.width;
                b.x = i - 0.5 * b.width;
            }
            if (i > b.right - 0.1 * b.width) {
                i = i - 0.4 * b.width;
                b.x = i - 0.5 * b.width;
            }
        }
        if (!isNaN_(j)) {
            if (j < b.top + 0.1 * b.height) {
                j = j + 0.4 * b.height;
                b.y = j - 0.5 * b.height;
            }
            if (j > b.bottom - 0.1 * b.height) {
                j = j - 0.4 * b.height;
                b.y = j - 0.5 * b.height;
            }
        }
        if (this.b5 != null) {
            this.b5.ap(this.ca, b, true);
        }
        return h >= 0;
    };
    HighDensityScatterSeries.prototype.r6 = function (a, b, c, d) {
        var e = this.rb(b);
        var f = a.c;
        var g = this.q6;
        if (c) {
            var h = d.d;
            var i = d.b;
            var j = d.e;
            var k = d.c;
            if (this.p0) {
                h = this.p8 + this.qa * h;
                i = this.p8 + this.qa * i;
                j = this.p9 + this.p7 * j;
                k = this.p9 + this.p7 * k;
            }
            var l = truncate((this.qr + this.qt * (h - this.qv) / this.qx));
            var m = truncate((this.qr + this.qt * (i - this.qv) / this.qx));
            var n = truncate((this.qs + this.qq * (j - this.qw) / this.qu));
            var o = truncate((this.qs + this.qq * (k - this.qw) / this.qu));
            l = truncate(Math.floor(l));
            m = truncate(Math.floor(m));
            n = truncate(Math.floor(n));
            o = truncate(Math.floor(o));
            if (this.pz) {
                l -= g;
                m += g;
                n -= g;
                o += g;
            }
            var p = ((m - l) + 1) * ((o - n) + 1);
            var q = b / p;
            var r = q;
            for (var s = l; s <= m; s++) {
                for (var t = n; t <= o; t++) {
                    this.r5(f, s, t, q, r);
                }
            }
        }
        else {
            var u = a.a;
            var v = a.b;
            if (this.p0) {
                u = this.p8 + this.qa * u;
                v = this.p9 + this.p7 * v;
            }
            var w = truncate((this.qr + this.qt * (u - this.qv) / this.qx));
            var x = truncate((this.qs + this.qq * (v - this.qw) / this.qu));
            w = truncate(Math.floor(w));
            x = truncate(Math.floor(x));
            if (this.pz) {
                var y = w - g;
                var z = w + g;
                var aa = x + g;
                var ab = x - g;
                var ac = ((z - y) + 1) * ((aa - ab) + 1);
                var ad = b / ac;
                var ae = ad;
                for (var af = y; af <= z; af++) {
                    for (var ag = ab; ag <= aa; ag++) {
                        this.r5(f, af, ag, ad, ae);
                    }
                }
            }
            else {
                this.r5(f, w, x, b, 1);
            }
        }
    };
    HighDensityScatterSeries.prototype.ra = function (a, b) {
        return truncate((Math.floor(255 * b))) << 24 | truncate(Math.floor(b * (this.ql + a * this.qp))) << 16 | truncate(Math.floor(b * (this.qk + a * this.qo))) << 8 | truncate(Math.floor(b * (this.qj + a * this.qn)));
    };
    HighDensityScatterSeries.prototype.rb = function (a) {
        return 255 << 24 | truncate(Math.floor((this.ql + a * this.qp))) << 16 | truncate(Math.floor((this.qk + a * this.qo))) << 8 | truncate(Math.floor((this.qj + a * this.qn)));
    };
    HighDensityScatterSeries.prototype.qy = function (a) {
        return (a >> 24 & 255) / 255;
    };
    HighDensityScatterSeries.prototype.r5 = function (a, b, c, d, e) {
        if (b < 0 || b >= this.q5 || c < 0 || c >= this.q4) {
            return;
        }
        var f = (c * this.q5) + b;
        this.pl[f] = this.pl[f] + d;
        this.pi[f] = this.pi[f] + e;
        if (this.p1) {
            this._itemIndexes[f] = a + 1;
        }
        this.q8 += truncate(d);
    };
    HighDensityScatterSeries.prototype.r3 = function () {
        var a = 0;
        var b = 0;
        var c = this.qd;
        var d = this.qc;
        var e = this.qb;
        var f = this.pl.length;
        var g = this.pl;
        var h = this.pi;
        var i = this.pk;
        var j = NaN;
        var k = NaN;
        var l = 0;
        var m = 0;
        for (var n = 0; n < f; n++) {
            a = g[n];
            if (a != 0) {
                b = h[n];
                if (a >= e) {
                    a = 1;
                }
                else if (a <= d) {
                    a = 0;
                }
                else {
                    a = (a - d) / (c);
                }
                if (b > 1) {
                    b = 1;
                }
                if (b < 0.2) {
                    b = 0.2;
                }
                if (j != a || k != b) {
                    l = this.ra(a, b);
                    j = a;
                    k = b;
                }
                i[m] = l >> 16 & 255;
                i[m + 1] = l >> 8 & 255;
                i[m + 2] = l & 255;
                i[m + 3] = l >> 24 & 255;
            }
            m += 4;
        }
    };
    HighDensityScatterSeries.prototype.rv = function (a) {
        var b = a;
        b.b6();
    };
    HighDensityScatterSeries.prototype.bu = function () {
        return new HighDensityScatterSeriesView(this);
    };
    HighDensityScatterSeries.prototype.lh = function (a) {
        _super.prototype.lh.call(this, a);
        this.pm = a;
    };
    HighDensityScatterSeries.prototype.ap = function (a) {
        if (a != null && a == this.pp && this.pw != null) {
            return new AxisRange(this.pw.minimum, this.pw.maximum);
        }
        if (a != null && a == this.pr && this.py != null) {
            return new AxisRange(this.py.minimum, this.py.maximum);
        }
        return null;
    };
    HighDensityScatterSeries.prototype.mm = function (a, b) {
        if (this.ca != null) {
            var c = this.getEffectiveViewport1(this.bx);
            this.p0 = !c.isEmpty;
        }
        this.l0(false);
    };
    HighDensityScatterSeries.prototype.mn = function (a, b) {
        this.l0(false);
    };
    HighDensityScatterSeries.prototype.hh = function (a) {
        if (!this.p1 || this._itemIndexes == null || this.ca == null || this.ch == null || this._itemIndexes.length != (this.q5 * this.q4)) {
            return null;
        }
        var b = this.ca.pg;
        var c = (a.x - b.left) / b.width;
        var d = (a.y - b.top) / b.height;
        var e = truncate(Math.round(this.pf.left + (this.pf.width * c)));
        var f = truncate(Math.round(this.pf.top + (this.pf.height * d)));
        var g = this.re(e, f);
        if (g < 0 || g > this._itemIndexes.length - 1) {
            return null;
        }
        var h = this._itemIndexes[g] - 1;
        if (h < 0 || h > this.ch.count) {
            return null;
        }
        return this.ch.item(h);
    };
    HighDensityScatterSeries.prototype.re = function (a, b) {
        var c = (this.q5 * b) + a;
        if (c > 0 && c < this._itemIndexes.length && this._itemIndexes[c] > 0) {
            return c;
        }
        var d = 1;
        c = (this.q5 * (b - d)) + a;
        if (c > 0 && c < this._itemIndexes.length && this._itemIndexes[c] > 0) {
            return c;
        }
        c = (this.q5 * (b + d)) + a;
        if (c > 0 && c < this._itemIndexes.length && this._itemIndexes[c] > 0) {
            return c;
        }
        c = (this.q5 * (b)) + a - 1;
        if (c > 0 && c < this._itemIndexes.length && this._itemIndexes[c] > 0) {
            return c;
        }
        c = (this.q5 * (b)) + a + 1;
        if (c > 0 && c < this._itemIndexes.length && this._itemIndexes[c] > 0) {
            return c;
        }
        c = (this.q5 * (b - d)) + a - 1;
        if (c > 0 && c < this._itemIndexes.length && this._itemIndexes[c] > 0) {
            return c;
        }
        c = (this.q5 * (b + d)) + a + 1;
        if (c > 0 && c < this._itemIndexes.length && this._itemIndexes[c] > 0) {
            return c;
        }
        c = (this.q5 * (b - d)) + a + 1;
        if (c > 0 && c < this._itemIndexes.length && this._itemIndexes[c] > 0) {
            return c;
        }
        c = (this.q5 * (b + d)) + a - 1;
        if (c > 0 && c < this._itemIndexes.length && this._itemIndexes[c] > 0) {
            return c;
        }
        return 0;
    };
    HighDensityScatterSeries.prototype.r8 = function (a, b, c) {
        this.pk = a;
        this.q5 = b;
        this.q4 = c;
    };
    HighDensityScatterSeries.prototype.get_ex = function () {
        return true;
    };
    HighDensityScatterSeries.prototype.set_ex = function (a) {
        _super.prototype.set_ex.call(this, a);
    };
    HighDensityScatterSeries.prototype.kh = function (a, b) {
        _super.prototype.kh.call(this, a, b);
        this.pm.b7();
        if (this.bw != null) {
            this.bw.b7();
        }
        this.k7();
    };
    HighDensityScatterSeries.prototype.l2 = function (a, b) {
        _super.prototype.l2.call(this, a, b);
        if (!this.et) {
            this.bx.a2(b);
            return;
        }
        this.bx.a2(b);
        if (this.ct(this.bw)) {
            return;
        }
        var c = typeCast(HighDensityScatterSeriesView.$, this.bw);
        var d = new ScatterFrame();
        this.rz(false, c);
        this.et = false;
    };
    HighDensityScatterSeries.prototype.lz = function (a, b, c, d, e) {
        _super.prototype.lz.call(this, a, b, c, d, e);
        var f = this.a4.a$h.item(d);
        var g = f;
        f.a1(c);
        if (this.ct(g)) {
            return;
        }
        if (this.pu == null) {
            this.pu = new ScatterFrame();
        }
        this.rz(false, f);
    };
    HighDensityScatterSeries.prototype.ke = function () {
        _super.prototype.ke.call(this);
        this.pp = null;
        this.pr = null;
    };
    HighDensityScatterSeries.$t = markType(HighDensityScatterSeries, 'HighDensityScatterSeries', Series.$);
    HighDensityScatterSeries.$$p = markDep(DependencyProperty, PropertyMetadata, HighDensityScatterSeries, 'raisePropertyChanged', ['HeatMaximumColor:sl:sa', [Color.$, Defaults.ap], 'HeatMaximum:qz:sb', [1, 50], 'HeatMinimumColor:sm:sc', [Color.$, Defaults.aq], 'HeatMinimum:q0:sd', [1, 0], 'PointExtent:rc:se', [1, 1], 'ProgressiveLoad:p4:sf', [0, true], 'UseBruteForce:p5:sg', [0, false], 'XAxis:pp:sh', [NumericXAxis.$, null], 'XMemberPath:ro:si', [2, null], 'YAxis:pr:sj', [NumericYAxis.$, null], 'YMemberPath:rs:sk', [2, null]]);
    return HighDensityScatterSeries;
}(Series));
export { HighDensityScatterSeries };
/**
 * @hidden
 */
var HighDensityScatterSeriesView = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(HighDensityScatterSeriesView, _super);
    function HighDensityScatterSeriesView(a) {
        var _this = _super.call(this, a) || this;
        _this.bz = null;
        _this.bx = null;
        _this.b5 = 0;
        _this.b4 = 0;
        _this.b2 = null;
        _this.b3 = null;
        _this.b0 = null;
        _this.bz = a;
        return _this;
    }
    HighDensityScatterSeriesView.prototype.as = function () {
        _super.prototype.as.call(this);
        if (!this.q) {
            this.bz.gh = Defaults.q;
            this.bz.sm = Defaults.aq;
            this.bz.sl = Defaults.ap;
            this.bz.oj = Defaults.al;
            this.bz.oo = Defaults.ak;
        }
    };
    HighDensityScatterSeriesView.prototype.ca = function () {
        this.bz.r8(this.bx, this.b5, this.b4);
    };
    HighDensityScatterSeriesView.prototype.b6 = function () {
        if (this.b2 == null) {
            this.b2 = this.e.gw.createElement("canvas");
            var a = this.e.gw.get2DCanvasContext(this.b2);
            this.b0 = new RenderingContext(new CanvasViewRenderer(), a);
        }
        var b;
        if (this.p) {
            b = this.bu;
        }
        else {
            b = this.e.ca.pl();
        }
        var c = truncate(Math.round(b.left));
        var d = truncate(Math.round(b.top));
        var e = truncate(Math.round(b.width));
        var f = truncate(Math.round(b.height));
        var g = this.b5;
        var h = this.b4;
        this.b5 = e;
        this.b4 = f;
        if (g != this.b5 || h != this.b4 || this.bx == null) {
            this.b2.setAttribute("width", e.toString());
            this.b2.setAttribute("height", f.toString());
            this.b3 = this.b0.g().getImageData(0, 0, e, f);
            var imageDataArray_ = this.b3.data;
            this.bx = imageDataArray_;
        }
        this.bz.r8(this.bx, this.b5, this.b4);
    };
    HighDensityScatterSeriesView.prototype.by = function () {
        return this.bx;
    };
    HighDensityScatterSeriesView.prototype.b9 = function () {
        var a = truncate(Math.round(this.bu.left));
        var b = truncate(Math.round(this.bu.left));
        var c = truncate(Math.round(this.bu.width));
        var d = truncate(Math.round(this.bu.height));
        this.b0.g().putImageData(this.b3, 0, 0);
        this.aq();
    };
    HighDensityScatterSeriesView.prototype.b8 = function (a) {
        if (this.e.gw != null) {
            this.e.gw.setTimeout(a, 0);
        }
        else {
            window.setTimeout(a, 0);
        }
    };
    HighDensityScatterSeriesView.prototype.a6 = function (a, b) {
        _super.prototype.a6.call(this, a, b);
        if (b) {
            if (!this.bz.ef) {
                return;
            }
            var c = new Rectangle();
            c.n = this.bu.left;
            c.o = this.bu.top;
            c.width = this.bu.width;
            c.height = this.bu.height;
            c._fill = this.bo();
            a.v(c);
            return;
        }
        if (this.b2 == null) {
            return;
        }
        var d = truncate(Math.round(this.bu.left));
        var e = truncate(Math.round(this.bu.top));
        var f = truncate(Math.round(this.bu.width));
        var g = truncate(Math.round(this.bu.height));
        this.k.n(this.b2.getNativeElement(), this.e._opacity, d, e, f, g, d, e, f, g);
    };
    HighDensityScatterSeriesView.prototype.b1 = function (a, b) {
        return Color.e(toNullable(Color.$, a), toNullable(Color.$, null)) && Color.e(toNullable(Color.$, b), toNullable(Color.$, null));
    };
    HighDensityScatterSeriesView.prototype.b7 = function () {
        if (this.bx != null) {
            for (var a = 0; a < this.bx.length; a++) {
                this.bx[a] = 0;
            }
            this.b9();
        }
    };
    HighDensityScatterSeriesView.prototype.al = function (a) {
        _super.prototype.al.call(this, a);
        if (this.bx == null) {
            this.e.a6.exportSeriesPixelsData(a, null, this.b5, this.b4);
            return;
        }
        var b = new Array(intDivide(this.bx.length, 4));
        var c;
        for (var d = 0; d < intDivide(this.bx.length, 4); d++) {
            c = d * 4;
            b[d] = this.bx[c + 3] << 24 | this.bx[c] << 16 | this.bx[c + 1] << 8 | this.bx[c + 2];
        }
        this.e.a6.exportSeriesPixelsData(a, b, this.b5, this.b4);
    };
    HighDensityScatterSeriesView.$t = markType(HighDensityScatterSeriesView, 'HighDensityScatterSeriesView', SeriesView.$);
    return HighDensityScatterSeriesView;
}(SeriesView));
export { HighDensityScatterSeriesView };
//# sourceMappingURL=HighDensityScatterSeries_combined.js.map
