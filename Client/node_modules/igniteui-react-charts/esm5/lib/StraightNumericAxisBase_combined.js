/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { NumericAxisBase } from "./NumericAxisBase";
import { NumericScaleMode_$type } from "./NumericScaleMode";
import { DependencyProperty } from "igniteui-react-core";
import { NumericScaler } from "./NumericScaler";
import { enumGetBox, typeCast, markType, markDep } from "igniteui-react-core";
import { ArgumentNullException } from "igniteui-react-core";
import { LogarithmicScaler } from "./LogarithmicScaler";
import { PropertyMetadata } from "igniteui-react-core";
import { NumericAxisBaseView } from "./NumericAxisBaseView";
/**
 * @hidden
 */
var StraightNumericAxisBase = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(StraightNumericAxisBase, _super);
    function StraightNumericAxisBase() {
        var _this = _super.call(this) || this;
        _this.l5 = null;
        _this.l9 = false;
        _this.mj();
        return _this;
    }
    StraightNumericAxisBase.prototype.a3 = function () {
        return new StraightNumericAxisBaseView(this);
    };
    StraightNumericAxisBase.prototype.ha = function (a) {
        _super.prototype.ha.call(this, a);
        this.l8 = a;
    };
    Object.defineProperty(StraightNumericAxisBase.prototype, "l7", {
        get: function () {
            return this.c(StraightNumericAxisBase.ml);
        },
        set: function (a) {
            this.h(StraightNumericAxisBase.ml, a);
        },
        enumerable: false,
        configurable: true
    });
    StraightNumericAxisBase.mh = function (a, b) {
        var c = typeCast(StraightNumericAxisBase.$, a);
        c.mj();
        c.hk("Scaler", b.oldValue, b.newValue);
    };
    StraightNumericAxisBase.prototype.l6 = function () {
        return null;
    };
    StraightNumericAxisBase.prototype.get_l4 = function () {
        if (this.l5 == null) {
            this.mj();
        }
        return this.l5;
    };
    StraightNumericAxisBase.prototype.set_l4 = function (a) {
        var b = this.l5 != a;
        if (b) {
            var c = this.l5;
            this.l5 = a;
            this.hk("ActualScaler", c, a);
        }
    };
    Object.defineProperty(StraightNumericAxisBase.prototype, "l4", {
        get: function () {
            return this.get_l4();
        },
        set: function (a) {
            this.set_l4(a);
        },
        enumerable: false,
        configurable: true
    });
    StraightNumericAxisBase.prototype.lq = function (a, b, c, d, e, f, g) {
        var h = this.l4.t(a, b, c, f, g);
        f = h.p3;
        g = h.p4;
        return {
            p5: f,
            p6: g
        };
    };
    StraightNumericAxisBase.prototype.mi = function (a) {
        var b = this.l9;
        this.l9 = true;
        a();
        this.l9 = b;
    };
    StraightNumericAxisBase.prototype.mj = function () {
        var a = this.l7;
        if (a == null) {
            a = this.j9();
        }
        this.l4 = a;
        if (this.l4 == null) {
            throw new ArgumentNullException(0, "ActualScaler");
        }
        this.me();
    };
    StraightNumericAxisBase.prototype.me = function () {
        this.l8.bh();
    };
    StraightNumericAxisBase.prototype.he = function (a, b, c, d) {
        if (this.l9) {
            return;
        }
        _super.prototype.he.call(this, a, b, c, d);
        switch (b) {
            case NumericAxisBase.$$p[2]:
                this.mj();
                break;
            case NumericAxisBase.$$p[1]:
                this.mj();
                break;
            case StraightNumericAxisBase.$$p[0]:
                this.mj();
                break;
            case "Scaler":
                this.mj();
                break;
            case "ActualScaler":
                this.kg = typeCast(LogarithmicScaler.$, this.l4) !== null;
                this.me();
                this.cv();
                this.hq(false);
                break;
            case "ActualMaximumValue":
                this.mf();
                break;
            case "ActualMinimumValue":
                this.mg();
                this.mj();
                break;
        }
    };
    StraightNumericAxisBase.prototype.mg = function () {
        this.l4.y(this.kv);
    };
    StraightNumericAxisBase.prototype.mf = function () {
        this.l4.x(this.ku);
    };
    StraightNumericAxisBase.prototype.ma = function (a, b) {
        if (a < this.kv) {
            a = this.kv;
        }
        else if (a > this.ku) {
            a = this.ku;
        }
        if (!b.cj) {
            return (a - this.kv) / (this.ku - this.kv);
        }
        else {
            return (a - this.ku) / (this.kv - this.ku);
        }
    };
    StraightNumericAxisBase.$t = markType(StraightNumericAxisBase, 'StraightNumericAxisBase', NumericAxisBase.$);
    StraightNumericAxisBase.ml = DependencyProperty.i("Scaler", NumericScaler.$, StraightNumericAxisBase.$, new PropertyMetadata(2, null, StraightNumericAxisBase.mh));
    StraightNumericAxisBase.$$p = markDep(DependencyProperty, PropertyMetadata, StraightNumericAxisBase, 'hk', ['ScaleMode:l3:mk', [NumericScaleMode_$type, enumGetBox(NumericScaleMode_$type, 0)]]);
    return StraightNumericAxisBase;
}(NumericAxisBase));
export { StraightNumericAxisBase };
/**
 * @hidden
 */
var StraightNumericAxisBaseView = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(StraightNumericAxisBaseView, _super);
    function StraightNumericAxisBaseView(a) {
        var _this = _super.call(this, a) || this;
        _this.bg = null;
        _this.bg = a;
        return _this;
    }
    StraightNumericAxisBaseView.prototype.bh = function () {
        this.bg.l4.x(this.bg.ku);
        this.bg.l4.y(this.bg.kv);
    };
    StraightNumericAxisBaseView.$t = markType(StraightNumericAxisBaseView, 'StraightNumericAxisBaseView', NumericAxisBaseView.$);
    return StraightNumericAxisBaseView;
}(NumericAxisBaseView));
export { StraightNumericAxisBaseView };
//# sourceMappingURL=StraightNumericAxisBase_combined.js.map
