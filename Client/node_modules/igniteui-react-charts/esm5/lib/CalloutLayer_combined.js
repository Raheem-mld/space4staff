/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends, __values } from "tslib";
import { AnnotationLayer } from "./AnnotationLayer";
import { DependencyProperty } from "igniteui-react-core";
import { Base, String_$type, typeCast, enumGetBox, fromEnum, runOn, delegateCombine, delegateRemove, Point_$type, Date_$type, markType, markDep } from "igniteui-react-core";
import { Series } from "./Series";
import { Brush } from "igniteui-react-core";
import { Thickness } from "igniteui-react-core";
import { CalloutCollisionMode_$type } from "./CalloutCollisionMode";
import { FontUtil } from "igniteui-react-core";
import { Rect } from "igniteui-react-core";
import { CalloutLayerFrame } from "./CalloutLayerFrame";
import { HashSet$1 } from "igniteui-react-core";
import { CalloutAnnotationWrapper } from "./CalloutAnnotationWrapper";
import { List$1 } from "igniteui-react-core";
import { LinkedList$1 } from "igniteui-react-core";
import { Dictionary$2 } from "igniteui-react-core";
import { LinkedListNode$1 } from "igniteui-react-core";
import { LabelCollisionManager } from "igniteui-react-core";
import { SeriesPointOfInterest } from "./SeriesPointOfInterest";
import { CalloutAnnotation } from "./CalloutAnnotation";
import { IFastItemsSource_$type } from "igniteui-react-core";
import { CalloutLabelUpdatingEventArgs } from "./CalloutLabelUpdatingEventArgs";
import { CalloutSeriesSelectingEventArgs } from "./CalloutSeriesSelectingEventArgs";
import { CalloutStyleUpdatingEventArgs } from "./CalloutStyleUpdatingEventArgs";
import { QuadTreeBoundingBox } from "igniteui-react-core";
import { LabelCollisionInfo } from "igniteui-react-core";
import { ScalerParams } from "./ScalerParams";
import { ViewportUtils } from "./ViewportUtils";
import { Size } from "igniteui-react-core";
import { CalloutContentUpdatingEventArgs } from "./CalloutContentUpdatingEventArgs";
import { CalloutKey } from "./CalloutKey";
import { DataContext } from "igniteui-react-core";
import { HashPool$2 } from "igniteui-react-core";
import { PropertyMetadata } from "igniteui-react-core";
import { isNaN_ } from "igniteui-react-core";
import { stringIsNullOrEmpty } from "igniteui-react-core";
import { FastItemObjectColumn } from "igniteui-react-core";
import { AnnotationLayerView } from "./AnnotationLayerView";
import { BrushUtil } from "igniteui-react-core";
import { TextBlock } from "igniteui-react-core";
import { Color } from "igniteui-react-core";
import { Line } from "igniteui-react-core";
import { CalloutViewHelper } from "./CalloutViewHelper";
import { Rectangle } from "igniteui-react-core";
import { TranslateTransform } from "igniteui-react-core";
/**
 * @hidden
 */
var CalloutLayer = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(CalloutLayer, _super);
    function CalloutLayer() {
        var _this = _super.call(this) || this;
        _this.calloutStyleUpdating = null;
        _this.qx = null;
        _this.qy = null;
        _this.qz = null;
        _this.qw = null;
        _this.qv = null;
        _this.rm = new HashSet$1(CalloutAnnotationWrapper.$, 0);
        _this.rp = new List$1(CalloutAnnotationWrapper.$, 0);
        _this.rq = new List$1(CalloutAnnotationWrapper.$, 0);
        _this.qt = null;
        _this.rn = new LinkedList$1(CalloutAnnotationWrapper.$);
        _this.rk = new Dictionary$2(CalloutAnnotationWrapper.$, LinkedListNode$1.$.specialize(CalloutAnnotationWrapper.$), 0);
        _this.q5 = null;
        _this.ui = new Rect(0, 0, 0, 1, 1);
        _this.rc = false;
        _this.r0 = 0;
        _this.uh = Rect.empty;
        _this.ra = false;
        _this.rb = false;
        _this.calloutContentUpdating = null;
        _this.calloutLabelUpdating = null;
        _this.calloutSeriesSelecting = null;
        _this.ro = new List$1(SeriesPointOfInterest.$, 0);
        _this.re = false;
        _this.rf = false;
        _this.rs = 0;
        _this.rd = false;
        _this.q9 = true;
        FastItemObjectColumn.m();
        _this.ps = true;
        var a = new CalloutLayerFrame();
        var b = new CalloutLayerFrame();
        var c = new CalloutLayerFrame();
        var d = _this.ha / 1000;
        _this.pk = a;
        _this.pj = b;
        _this.pl = c;
        _this.ab = CalloutLayer.$;
        return _this;
    }
    CalloutLayer.prototype.get_c2 = function () {
        return true;
    };
    CalloutLayer.prototype.s9 = function (a, b) {
        this.rq.clear();
        this.l0(false);
    };
    CalloutLayer.prototype.kk = function (a, b, c, d) {
        _super.prototype.kk.call(this, a, b, c, d);
        var e = this.rl();
        switch (a) {
            case 3:
                this.tl(b, e);
                break;
            case 1:
                for (var f = b; f < b + c; f++) {
                    var g = new CalloutAnnotation();
                    var h = new CalloutAnnotationWrapper();
                    h.b = g;
                    h.b.series = this.qs;
                    this.rq.insert(f, h);
                    this.tl(f, e);
                }
                break;
            case 0:
                this.rq.v(b, c);
                break;
            case 2:
                for (var i = b; i < b + c; i++) {
                    this.tl(i, e);
                }
                break;
            case 4:
                this.rq.clear();
                for (var j = 0; j < this.ch.count; j++) {
                    var k = new CalloutAnnotation();
                    var l = new CalloutAnnotationWrapper();
                    l.b = k;
                    l.b.series = this.qs;
                    this.rq.add(l);
                    this.tl(j, e);
                }
                break;
        }
        this.l0(true);
    };
    CalloutLayer.prototype.ei = function (a) {
        return false;
    };
    CalloutLayer.prototype.rl = function () {
        var a = new Dictionary$2(String_$type, Series.$, 0);
        if (this.ca != null) {
            for (var b = 0; b < this.ca.series.count; b++) {
                var c = this.ca.series._inner[b];
                if (c.name != null && !a.containsKey(c.name)) {
                    a.addItem(c.name, c);
                }
            }
        }
        return a;
    };
    CalloutLayer.prototype.tl = function (a, b) {
        var _this = this;
        if (this.q4 == null || this.q2 == null) {
            return;
        }
        var c = a;
        if (this.q3 != null) {
            c = this.q3.item(a);
        }
        var d = this.q4.item(a);
        var e = this.q2.item(a);
        var f = this.rq._inner[a];
        if (this.q1 != null) {
            if (f.b.aa != this.q1.item(a)) {
                f.b.key = this.q1.item(a);
            }
        }
        if (this.rk.containsKey(f)) {
            f.b = this.rk.item(f).c.b;
        }
        f.b.xValue = c;
        f.b.yValue = d;
        if (this.calloutLabelUpdating != null) {
            var g = ((function () {
                var $ret = new CalloutLabelUpdatingEventArgs();
                $ret.c = c;
                $ret.d = d;
                $ret.item = _this.ch.item(a);
                return $ret;
            })());
            this.calloutLabelUpdating(this, g);
            if (g.b != null && !Base.equalsStatic(g.b, f.b.am)) {
                var h = g.b;
                f.b.text = h != null ? h.toString() : "";
            }
        }
        else {
            f.b.text = e != null ? e.toString() : "";
        }
        if (this.q0 != null) {
            f.b.content = this.q0.item(a);
        }
        else {
            f.b.content = this.ch.item(a);
        }
        if (this.calloutSeriesSelecting != null) {
            var i = ((function () {
                var $ret = new CalloutSeriesSelectingEventArgs();
                $ret.c = c;
                $ret.d = d;
                $ret.item = _this.ch.item(a);
                return $ret;
            })());
            this.calloutSeriesSelecting(this, i);
            if (i.a != null) {
                f.b.series = i.a;
            }
            else if (i.e != null) {
                if (b.containsKey(i.e)) {
                    f.b.series = b.item(i.e);
                }
            }
        }
        this.tm(f);
    };
    CalloutLayer.prototype.tm = function (a) {
        var b = new Thickness(0, 3);
        if (isNaN_(this.uk.c) || isNaN_(this.uk.e) || isNaN_(this.uk.d) || isNaN_(this.uk.b)) {
            b = new Thickness(0, 3);
        }
        else {
            b = this.uk;
        }
        var c = this.ud != null ? this.ud : this.qp.ci(a.b.l);
        var d = this.ug != null ? this.ug : this.qp.cl();
        var e = this.uf != null ? this.uf : this.qp.ck();
        var f = this.ue != null ? this.ue : this.qp.cj(a.b.l);
        var g = isNaN_(this.ry) ? 0 : this.ry;
        if (this.ri && this.calloutStyleUpdating != null) {
            var h = new CalloutStyleUpdatingEventArgs();
            h.item = a.b.z;
            h.xValue = a.b.ab;
            h.yValue = a.b.ac;
            h.series = a.b.l;
            h.background = c;
            h.textColor = d;
            h.outline = e;
            h.leaderBrush = f;
            h.strokeThickness = g;
            this.calloutStyleUpdating(this, h);
            c = h.background;
            d = h.textColor;
            e = h.outline;
            f = h.leaderBrush;
            g = h.strokeThickness;
        }
        a.b.backgroundPadding = b;
        a.b.background = c;
        a.b.textColor = d;
        a.b.outline = e;
        a.b.leaderBrush = f;
        a.b.strokeThickness = g;
    };
    CalloutLayer.prototype.hk = function (a, b) {
        var c = this.ja(b);
        if (c == CalloutLayer.$$p[19]) {
            return this.hl(a, b, this.sv);
        }
        if (c == CalloutLayer.$$p[24]) {
            return this.hl(a, b, this.s4);
        }
        if (c == CalloutLayer.$$p[25]) {
            return this.hl(a, b, this.s7);
        }
        if (c == CalloutLayer.$$p[18]) {
            return this.hl(a, b, this.ss);
        }
        if (c == CalloutLayer.$$p[14]) {
            return this.hl(a, b, this.sm);
        }
        return _super.prototype.hk.call(this, a, b);
    };
    Object.defineProperty(CalloutLayer.prototype, "q2", {
        get: function () {
            return this.qx;
        },
        set: function (a) {
            if (this.qx != a) {
                var b = this.qx;
                this.qx = a;
                this.raisePropertyChanged("LabelColumn", b, this.qx);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CalloutLayer.prototype, "q3", {
        get: function () {
            return this.qy;
        },
        set: function (a) {
            if (this.qy != a) {
                var b = this.qy;
                this.qy = a;
                this.raisePropertyChanged("XColumn", b, this.qy);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CalloutLayer.prototype, "q4", {
        get: function () {
            return this.qz;
        },
        set: function (a) {
            if (this.qz != a) {
                var b = this.qz;
                this.qz = a;
                this.raisePropertyChanged("YColumn", b, this.qz);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CalloutLayer.prototype, "q1", {
        get: function () {
            return this.qw;
        },
        set: function (a) {
            if (this.qw != a) {
                var b = this.qw;
                this.qw = a;
                this.raisePropertyChanged("KeyColumn", b, this.qw);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CalloutLayer.prototype, "q0", {
        get: function () {
            return this.qv;
        },
        set: function (a) {
            if (this.qv != a) {
                var b = this.qv;
                this.qv = a;
                this.raisePropertyChanged("ContentColumn", b, this.qv);
            }
        },
        enumerable: false,
        configurable: true
    });
    CalloutLayer.prototype.tb = function (a, b) {
        if (b.propertyName == CalloutAnnotation.$$p[13] || b.propertyName == CalloutAnnotation.$$p[14]) {
            var c = a.k;
            if (!this.rm.contains(c)) {
                this.rm.add_1(c);
                this.rp.add(c);
                this.l0(false);
            }
        }
    };
    CalloutLayer.prototype.bu = function () {
        return new CalloutLayerView(this);
    };
    CalloutLayer.prototype.lh = function (a) {
        _super.prototype.lh.call(this, a);
        this.qp = a;
    };
    Object.defineProperty(CalloutLayer.prototype, "uk", {
        get: function () {
            return new Thickness(1, this.ru, this.rw, this.rv, this.rt);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CalloutLayer.prototype, "qu", {
        get: function () {
            if (this.qt == null) {
                this.qt = FontUtil.toFontInfo(this.gw, this.s0);
            }
            return this.qt;
        },
        enumerable: false,
        configurable: true
    });
    CalloutLayer.prototype.p3 = function (a, b) {
        if (this.qs == null || this.qs == a) {
            if (!this.as.c) {
                this.l0(b);
            }
        }
    };
    CalloutLayer.prototype.p5 = function (a, b) {
        var e_1, _a;
        _super.prototype.p5.call(this, a, b);
        var c = a;
        c.p.clear();
        c.q.clear();
        c.m.clear();
        c.f.clear();
        c.h.clear();
        c.g.clear();
        c.j.clear();
        c.l.clear();
        c.k.clear();
        c.i.clear();
        c.n.clear();
        c.o.clear();
        c.t.clear();
        c.u.clear();
        c.r.clear();
        c.s.clear();
        var d = this.rr();
        var e = new List$1(CalloutAnnotationWrapper.$, 0);
        if (this.rg) {
            if (this.pq(this.qs)) {
                this.ti(this.qs, c, e);
            }
            else {
                try {
                    for (var _b = __values(fromEnum(this.ca.series)), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var f = _c.value;
                        if (this.pq(f)) {
                            this.ti(f, c, e);
                        }
                    }
                }
                catch (e_1_1) {
                    e_1 = { error: e_1_1 };
                }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return))
                            _a.call(_b);
                    }
                    finally {
                        if (e_1)
                            throw e_1.error;
                    }
                }
            }
        }
        this.th(c, d, e);
    };
    CalloutLayer.prototype.mn = function (a, b) {
        _super.prototype.mn.call(this, a, b);
        var c = b.width - this.ui.width;
        var d = b.height - this.ui.height;
        var e = 0;
        if (Math.abs(c) > Math.abs(d)) {
            e = c;
            this.rs = c * this.pf.width;
        }
        else {
            e = d;
            this.rs = d * this.pf.height;
        }
        if (e > 0 && this.rs > 5) {
            this.rf = true;
        }
        if (e < 0 && this.rs > 5) {
            this.re = true;
        }
    };
    CalloutLayer.prototype.mm = function (a, b) {
        _super.prototype.mm.call(this, a, b);
        if (!a.equals1(b)) {
            this.rd = true;
        }
    };
    Object.defineProperty(CalloutLayer.prototype, "uj", {
        get: function () {
            return this.uh;
        },
        set: function (a) {
            this.uh = a;
        },
        enumerable: false,
        configurable: true
    });
    CalloutLayer.prototype.th = function (a, b, c) {
        var e_2, _a;
        if (this.ca != null) {
            this.ui = this.ca.pg;
        }
        if (this.pf.isEmpty) {
            return;
        }
        this.uj = new Rect(0, this.pf.left, this.pf.top, this.pf.width, this.pf.height);
        if (this.q5 != null && this.sj != null && this.sj != this.q5.ak) {
            this.td();
        }
        if (this.q5 == null) {
            var d = this.q6();
            if (d != null) {
                this.q5 = d;
                var e = this.q5;
                e.labelsMoved = delegateCombine(e.labelsMoved, runOn(this, this.ta));
            }
            else {
                var f = this.o7(this.bx);
                var g = 0;
                if (this.qs != null) {
                    if (this.qs.isVertical) {
                        g = 2;
                    }
                }
                else {
                    var h = false;
                    if (this.ca != null && this.ca.series.count > 0) {
                        h = true;
                        try {
                            for (var _b = __values(fromEnum(this.ca.series)), _c = _b.next(); !_c.done; _c = _b.next()) {
                                var i = _c.value;
                                if (!i.c6) {
                                    if (!i.isVertical) {
                                        h = false;
                                    }
                                }
                            }
                        }
                        catch (e_2_1) {
                            e_2 = { error: e_2_1 };
                        }
                        finally {
                            try {
                                if (_c && !_c.done && (_a = _b.return))
                                    _a.call(_b);
                            }
                            finally {
                                if (e_2)
                                    throw e_2.error;
                            }
                        }
                    }
                    if (h) {
                        g = 2;
                    }
                }
                this.q5 = new LabelCollisionManager(this.pf.right, this.pf.bottom, this.pf, this.qp.j(), this.rx, this.q7(), g, this.r4(), this.r3(), this.rh);
                if (this.sj != null) {
                    this.q5.ak = this.sj;
                    this.q5.ai = this;
                }
                var j = this.q5;
                j.labelsMoved = delegateCombine(j.labelsMoved, runOn(this, this.ta));
            }
        }
        if (this.re) {
            this.re = false;
            if (this.q5.ag > 2) {
                this.rc = true;
            }
        }
        if (this.rf) {
            this.rf = false;
            if (this.rs > 5) {
                this.rc = true;
            }
        }
        if (this.rd) {
            this.rd = false;
            this.q5.ay(this.pf.right, this.pf.bottom, this.pf);
            this.rc = true;
        }
        var k = new HashSet$1(CalloutAnnotationWrapper.$, 0);
        var l = new HashSet$1(CalloutAnnotationWrapper.$, 0);
        var m = new List$1(CalloutAnnotationWrapper.$, 0);
        var n = new List$1(CalloutAnnotationWrapper.$, 0);
        var o = new HashSet$1(CalloutAnnotationWrapper.$, 0);
        for (var p = 0; p < b.count; p++) {
            o.add_1(b._inner[p]);
        }
        for (var q = 0; q < c.count; q++) {
            o.add_1(c._inner[q]);
        }
        var r = this.rn.c;
        while (r != null) {
            var s = r.a;
            if (!o.contains(r.c)) {
                n.add(r.c);
                l.add_1(r.c);
                var t = r.c.b;
                t.propertyChanged = delegateRemove(t.propertyChanged, runOn(this, this.tb));
                this.rn.h(r);
                this.rk.removeItem(r.c);
                this.q5.ax(r.c.c);
            }
            r = s;
        }
        for (var u = 0; u < b.count; u++) {
            if (!this.rk.containsKey(b._inner[u])) {
                this.rn.f(b._inner[u]);
                var v = b._inner[u].b;
                v.propertyChanged = delegateCombine(v.propertyChanged, runOn(this, this.tb));
                this.rk.addItem(b._inner[u], this.rn.d);
                m.add(b._inner[u]);
                k.add_1(b._inner[u]);
                this.rc = true;
            }
        }
        for (var w = 0; w < c.count; w++) {
            if (!this.rk.containsKey(c._inner[w])) {
                this.rn.f(c._inner[w]);
                this.rk.addItem(c._inner[w], this.rn.d);
                var x = c._inner[w].b;
                x.propertyChanged = delegateCombine(x.propertyChanged, runOn(this, this.tb));
                m.add(c._inner[w]);
                k.add_1(c._inner[w]);
                this.rc = true;
            }
        }
        if (this.ra == true) {
            this.ra = false;
            this.rc = true;
        }
        if (this.rp.count > 0) {
            this.rc = true;
            this.rp.clear();
            this.rm.clear();
        }
        r = this.rn.c;
        while (r != null) {
            var y = this.q8(r.c);
            if (y == null) {
                return;
            }
            if (!Base.equalsStatic(y, r.c.c.c)) {
                var z = false;
                if (r.c.c.c == null) {
                    z = true;
                }
                var aa = r.c.c;
                aa.o = y.b;
                aa.p = y.c;
                if (!isNaN_(aa.o) && !isNaN_(aa.p)) {
                    aa.n = y.e;
                    aa.m = y.d;
                    if (aa.b == null) {
                        this.q5.p(aa);
                    }
                    if (z) {
                        this.q5.al(aa);
                    }
                    else {
                        this.q5.au(aa);
                    }
                }
            }
            r = r.a;
        }
        var ab = this.q5.ah();
        var ac = this.q5.q();
        if (this.rc && (ab != 0 || ac)) {
            this.rc = false;
            this.r0 = 0x7FFFFFFF;
            if (this.sj != null) {
                var ad = true;
                for (var ae = 0; ae < this.ca.series.count; ae++) {
                    var af = this.ca.series._inner[ae];
                    if (af.c6 && typeCast(CalloutLayer.$, af) !== null) {
                        var ag = af;
                        if (ag.sj == this.sj) {
                            if (!ag.uj.equals1(this.q5.a0)) {
                                ad = false;
                                break;
                            }
                        }
                    }
                }
                if (ad) {
                    this.q5.az();
                }
                else {
                    this.q5.am();
                    this.q5.an();
                }
            }
            else {
                this.q5.az();
            }
        }
        else {
            this.q5.an();
        }
        var ah = this.rn.c;
        while (ah != null) {
            var ai = ah.c;
            a.m.add1(ai);
            a.f.add(ai.b.bh);
            a.h.add(ai.b.bj);
            a.g.add(ai.b.bi);
            a.j.add(ai.b.backgroundPadding.c);
            a.l.add(ai.b.backgroundPadding.e);
            a.k.add(ai.b.backgroundPadding.d);
            a.i.add(ai.b.backgroundPadding.b);
            a.n.add(ai.b.x);
            a.o.add(ai.b.bk);
            a.p.add1(ai.b.am);
            a.q.add1(ai.b.z);
            var aj = ai.c;
            a.t.add(ai.c.o - (ai.c.g - ai.c.l));
            a.u.add(ai.c.p - (ai.c.h - ai.c.k));
            a.r.add(ai.c.g - ai.c.l);
            a.s.add(ai.c.h - ai.c.k);
            ah = ah.a;
        }
    };
    CalloutLayer.prototype.td = function () {
        if (this.q5 != null) {
            var a = this.rn.c;
            while (a != null) {
                var b = a.c.c;
                if (b != null) {
                    this.q5.ax(b);
                }
                a = a.a;
            }
            var c = this.q5;
            c.labelsMoved = delegateRemove(c.labelsMoved, runOn(this, this.ta));
            this.q5 = null;
        }
        this.tc();
    };
    CalloutLayer.prototype.q6 = function () {
        if (this.ca == null) {
            return null;
        }
        for (var a = 0; a < this.ca.series.count; a++) {
            var b = this.ca.series._inner[a];
            if (b.c6 && typeCast(CalloutLayer.$, b) !== null) {
                var c = b;
                if (c != this) {
                    if (c.sj != null && c.sj == this.sj) {
                        if (c.q5 != null) {
                            return c.q5;
                        }
                    }
                }
            }
        }
        return null;
    };
    CalloutLayer.prototype.r3 = function () {
        return 20000;
    };
    CalloutLayer.prototype.r4 = function () {
        return 300;
    };
    CalloutLayer.prototype.q7 = function () {
        switch (this.qm) {
            case 0: return 2;
            case 2: return 1;
            case 3: return 2;
            case 1: return 0;
        }
        return 2;
    };
    CalloutLayer.prototype.ta = function (a) {
        var b = this.q5.ah();
        if (b < this.r0) {
            this.r0 = b;
            this.l0(false);
        }
    };
    CalloutLayer.prototype.q8 = function (a) {
        var b = this.qs;
        if (a.b.l != null) {
            b = a.b.l;
        }
        if (b == null) {
            for (var c = 0; c < this.ca.series.count; c++) {
                var d = this.ca.series._inner[c];
                if (!d.c6) {
                    b = d;
                    break;
                }
            }
        }
        if (b == null) {
            return null;
        }
        var e = b.ag();
        var f = b.f2();
        var g = null;
        var h = null;
        var i = false;
        for (var j = 0; j < e.length; j++) {
            if (e[j].b4) {
                i = true;
                g = e[j];
            }
            else if (e[j].cg) {
                i = true;
                h = e[j];
            }
            else if (e[j].cj) {
                h = e[j];
            }
            else {
                g = e[j];
            }
        }
        if (g == null || h == null) {
            return null;
        }
        if (!g.ci() || !h.ci()) {
            return null;
        }
        var k = 0;
        var l = 0;
        if (g.b6 && g.categoryMode != 0) {
            if (b.di) {
                k = b.getOffsetValue();
            }
            else if (b.da) {
                k = b.getOffsetValue();
            }
        }
        if (h.b6 && h.categoryMode != 0) {
            if (b.da) {
                l = b.getOffsetValue();
            }
        }
        var m = new ScalerParams(0, this.ca.pg, g.js, g.cc, g.jn());
        m.b = f;
        var n = new ScalerParams(0, this.ca.pg, h.js, h.cc, h.jn());
        n.b = f;
        var o = 0;
        var p = 0;
        if (i) {
            o = g.d8(this.rz(a.b.ab), m) + k;
            p = h.d8(this.rz(a.b.ac), n) + l;
            var q = o;
            var r = p;
            var s = { $type: Point_$type, x: 0.5, y: 0.5 };
            var t = s.x + (r * Math.cos(q));
            o = ViewportUtils.c(t, m.e, m.d);
            var u = s.y + (r * Math.sin(q));
            p = ViewportUtils.f(u, n.e, n.d);
        }
        else {
            o = g.d8(this.rz(a.b.ab), m) + k;
            p = h.d8(this.rz(a.b.ac), n) + l;
        }
        var v = new QuadTreeBoundingBox();
        v.b = o;
        v.c = p;
        v.e = 3;
        v.d = 3;
        v.g = a.b;
        return v;
    };
    CalloutLayer.prototype.rz = function (a) {
        if (typeCast(Date_$type, a) !== null) {
            return a.getTime();
        }
        if (a == null) {
            return 0;
        }
        return a;
    };
    CalloutLayer.prototype.rr = function () {
        var a = new List$1(CalloutAnnotationWrapper.$, 0);
        for (var b = 0; b < this.rq.count; b++) {
            if (stringIsNullOrEmpty(this.rq._inner[b].b.am)) {
                continue;
            }
            if (this.rq._inner[b].c == null) {
                var c = new LabelCollisionInfo();
                this.rq._inner[b].c = c;
                var d = this.qp.cn(this.r5(this.rq._inner[b]), this.rq._inner[b].b.backgroundPadding);
                c.k = d.height / 2;
                c.l = d.width / 2;
            }
            var e = this.q8(this.rq._inner[b]);
            if (e == null || e.b < this.pf.left || e.b > this.pf.right || e.c < this.pf.top || e.c > this.pf.bottom) {
                continue;
            }
            a.add(this.rq._inner[b]);
        }
        return a;
    };
    CalloutLayer.prototype.r5 = function (a) {
        return a.b.am;
    };
    CalloutLayer.prototype.pq = function (a) {
        if (!_super.prototype.pq.call(this, a)) {
            return false;
        }
        if (this.sx != null) {
            if (a.dn) {
                var b = a.i9();
                if (!Base.equalsStatic(this.sx, b)) {
                    return false;
                }
            }
            else {
                if (!Base.equalsStatic(this.sx, a.name)) {
                    return false;
                }
            }
        }
        return true;
    };
    CalloutLayer.prototype.la = function () {
        _super.prototype.la.call(this);
        if (!this.as.c && !this.cr()) {
            return;
        }
        if (this.q9) {
            this.q9 = false;
            this.tf();
        }
        if (this.cr()) {
            this.tk(this.pl, false);
        }
        else {
            this.tk(this.pj, false);
        }
    };
    CalloutLayer.prototype.tg = function () {
        if (!this.rb) {
            this.rb = true;
            this.l0(true);
        }
    };
    CalloutLayer.prototype.ti = function (a, b, c) {
        var d = false;
        if (this.rb) {
            this.rb = false;
            d = true;
        }
        if (a.cx(this.ro, this.rj, this.r1)) {
            var e = this.ro;
            var _loop_1 = function (f) {
                var g = e._inner[f];
                var h = g.a.item != null ? g.a.item : g.a;
                var i = a;
                var j = new CalloutKey(h, i);
                var k = new CalloutAnnotationWrapper();
                var l = new CalloutAnnotation();
                k.b = l;
                l.key = j;
                var m = false;
                if (this_1.rk.containsKey(k)) {
                    k = this_1.rk.item(k).c;
                    l = k.b;
                    m = d;
                }
                else {
                    m = true;
                }
                var n = l.ab;
                var o = l.ac;
                if (this_1.rz(n) != this_1.rz(g.b)) {
                    l.xValue = g.b;
                }
                if (this_1.rz(o) != this_1.rz(g.c)) {
                    l.yValue = g.c;
                }
                l.series = a;
                var p = false;
                if (g.d != l.aw) {
                    l.aw = g.d;
                    p = true;
                }
                if (m || p) {
                    if (this_1.calloutLabelUpdating != null) {
                        var q = ((function () {
                            var $ret = new CalloutLabelUpdatingEventArgs();
                            $ret.c = l.ab;
                            $ret.d = l.ac;
                            $ret.item = h;
                            return $ret;
                        })());
                        this_1.calloutLabelUpdating(this_1, q);
                        if (q.b != null && !Base.equalsStatic(q.b, k.b.am)) {
                            var r = q.b;
                            k.b.text = r != null ? r.toString() : "";
                        }
                    }
                    else {
                        if (g.d != null) {
                            l.text = g.d;
                        }
                    }
                }
                if (l.am == null) {
                    return "continue";
                }
                if (m || p) {
                    if (this_1.calloutContentUpdating != null) {
                        var s = ((function () {
                            var $ret = new CalloutContentUpdatingEventArgs();
                            $ret.c = l.ab;
                            $ret.d = l.ac;
                            $ret.item = h;
                            $ret.a = h;
                            return $ret;
                        })());
                        this_1.calloutContentUpdating(this_1, s);
                        if (s.a != null && s.a != k.b.z) {
                            k.b.content = s.a;
                        }
                    }
                    else {
                        if (h != null && h != k.b.z) {
                            k.b.content = h;
                        }
                    }
                }
                if (m) {
                    this_1.tm(k);
                }
                if (k.c == null) {
                    var t = new LabelCollisionInfo();
                    k.c = t;
                    var u = this_1.qp.cn(this_1.r5(k), k.b.backgroundPadding);
                    t.k = u.height / 2;
                    t.l = u.width / 2;
                }
                var v = this_1.q8(k);
                if (v == null || v.b < this_1.pf.left || v.b > this_1.pf.right || v.c < this_1.pf.top || v.c > this_1.pf.bottom) {
                    return "continue";
                }
                c.add(k);
            };
            var this_1 = this;
            for (var f = 0; f < this.ro.count; f++) {
                _loop_1(f);
            }
        }
    };
    CalloutLayer.prototype.bo = function () {
        return 1;
    };
    CalloutLayer.prototype.at = function (a, b) {
        var c = this.q5.d(a, b);
        if (c == null) {
            return null;
        }
        return c.u;
    };
    CalloutLayer.prototype.ep = function (a, b) {
        if (this.q5 == null) {
            return false;
        }
        return this.q5.d(a, b) != null;
    };
    CalloutLayer.prototype.tk = function (a, b) {
        var e_3, _a;
        var c = 0;
        var d = new HashSet$1(CalloutAnnotationWrapper.$, 0);
        for (c = 0; c < a.p.count; c++) {
            var e = a.m._inner[c];
            if (isNaN_(a.t._inner[c]) || isNaN_(a.u._inner[c])) {
                continue;
            }
            var f = this.qp.b8.item(e);
            d.add_1(e);
            if (f.f != a.p._inner[c]) {
                f.f = a.p._inner[c];
                var g = f.s();
            }
            f.c = a.n._inner[c];
            f.k = a.f._inner[c];
            f.n = a.o._inner[c];
            f.m = f.c > 0 ? a.h._inner[c] : this.bx.bq();
            f.l = a.g._inner[c];
            f.v = new Thickness(1, a.j._inner[c], a.l._inner[c], a.k._inner[c], a.i._inner[c]);
            this.qp.cg(f, Math.min(a.r._inner[c], a.r._inner[c] + a.t._inner[c]), Math.min(a.s._inner[c], a.s._inner[c] + a.u._inner[c]));
            this.qp.ch(f, e, a.q._inner[c]);
            f.p = { $type: Point_$type, x: a.t._inner[c], y: a.u._inner[c] };
        }
        var h = new List$1(CalloutAnnotationWrapper.$, 0);
        try {
            for (var _b = __values(fromEnum(this.qp.b8.c)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var i = _c.value;
                if (!d.contains(i)) {
                    h.add(i);
                }
            }
        }
        catch (e_3_1) {
            e_3 = { error: e_3_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_3)
                    throw e_3.error;
            }
        }
        for (var j = 0; j < h.count; j++) {
            this.qp.b8.h(h._inner[j]);
        }
    };
    CalloutLayer.prototype.p8 = function (a, b) {
        _super.prototype.p8.call(this, a, b);
        if (this.cr()) {
            this.tk(this.pl, true);
        }
        else {
            this.tk(this.pj, false);
        }
    };
    CalloutLayer.prototype.eg = function () {
        return true;
    };
    CalloutLayer.prototype.lm = function (a, b, c, d) {
        _super.prototype.lm.call(this, a, b, c, d);
        switch (b) {
            case CalloutLayer.$$p[22]:
                this.qt = null;
                this.qp.cf();
                this.l0(true);
                break;
            case CalloutLayer.$$p[20]:
            case CalloutLayer.$$p[21]:
                this.l0(true);
                break;
            case CalloutLayer.$$p[13]:
                this.l0(true);
                break;
            case "SeriesViewer":
                if (c != null) {
                    var e = c;
                    e.seriesAnimating = delegateRemove(e.seriesAnimating, runOn(this, this.tj));
                }
                if (d != null) {
                    var f = d;
                    f.seriesAnimating = delegateCombine(f.seriesAnimating, runOn(this, this.tj));
                }
                if (d == null) {
                    this.td();
                }
                break;
            case CalloutLayer.$$p[15]:
            case CalloutLayer.$$p[16]:
            case CalloutLayer.$$p[1]:
            case CalloutLayer.$$p[5]:
            case CalloutLayer.$$p[4]:
            case CalloutLayer.$$p[7]:
            case CalloutLayer.$$p[9]:
            case CalloutLayer.$$p[8]:
            case CalloutLayer.$$p[6]:
            case CalloutLayer.$$p[11]:
            case CalloutLayer.$$p[12]:
                this.te();
                break;
            case CalloutLayer.$$p[19]:
                if (this.ch != null) {
                    this.ch.deregisterColumn(this.q2);
                    this.q2 = this.cg(this.sv);
                }
                break;
            case "LabelColumn":
                this.te();
                break;
            case CalloutLayer.$$p[14]:
                if (this.ch != null) {
                    this.ch.deregisterColumn(this.q0);
                    this.q0 = this.cg(this.sm);
                }
                break;
            case "ContentColumn":
                this.te();
                break;
            case CalloutLayer.$$p[24]:
                if (this.ch != null) {
                    this.ch.deregisterColumn(this.q3);
                    this.q3 = stringIsNullOrEmpty(this.s4) == false ? this.cg(this.s4) : null;
                }
                break;
            case "XColumn":
                this.te();
                break;
            case CalloutLayer.$$p[25]:
                if (this.ch != null) {
                    this.ch.deregisterColumn(this.q4);
                    this.q4 = this.cg(this.s7);
                }
                break;
            case "YColumn":
                this.te();
                break;
            case CalloutLayer.$$p[18]:
                if (this.ch != null) {
                    this.ch.deregisterColumn(this.q1);
                    this.q1 = this.cg(this.ss);
                }
                break;
            case "KeyColumn":
                this.te();
                break;
            case "FastItemsSource":
                this.ra = true;
                if (typeCast(IFastItemsSource_$type, c) != null) {
                    c.deregisterColumn(this.q2);
                    c.deregisterColumn(this.q0);
                    c.deregisterColumn(this.q3);
                    c.deregisterColumn(this.q4);
                    c.deregisterColumn(this.q1);
                    this.q2 = null;
                    this.q0 = null;
                    this.q3 = null;
                    this.q4 = null;
                    this.q1 = null;
                    this.rq.clear();
                }
                if (typeCast(IFastItemsSource_$type, d) != null) {
                    this.q2 = this.cg(this.sv);
                    this.q0 = this.cg(this.sm);
                    if (stringIsNullOrEmpty(this.s4) == false) {
                        this.q3 = this.cg(this.s4);
                    }
                    this.q4 = this.cg(this.s7);
                    this.q1 = this.cg(this.ss);
                }
                this.te();
                break;
        }
    };
    CalloutLayer.prototype.tj = function (a) {
        if (a.c6) {
            return;
        }
        if ((a == this.qs || this.qs == null) && this.rg) {
            this.l0(false);
        }
    };
    CalloutLayer.prototype.te = function () {
        if (this.q9 == false) {
            this.q9 = true;
            this.l0(false);
        }
    };
    CalloutLayer.prototype.tc = function () {
        this.qp.b8.clear();
        this.rn.g();
        this.rk.clear();
    };
    CalloutLayer.prototype.tf = function () {
        if (this.q4 == null || this.q2 == null) {
            var a = this.rn.c;
            while (a != null) {
                this.tm(a.c);
                a = a.a;
            }
            return;
        }
        var b = this.rl();
        for (var c = 0; c < this.q4.count; c++) {
            var d = void 0;
            if (this.rq.count <= c) {
                var e = new CalloutAnnotation();
                d = new CalloutAnnotationWrapper();
                d.b = e;
                d.b.series = this.qs;
                this.rq.add(d);
            }
            else {
                d = this.rq._inner[c];
            }
            this.tl(c, b);
        }
    };
    CalloutLayer.$t = markType(CalloutLayer, 'CalloutLayer', AnnotationLayer.$);
    CalloutLayer.$$p = markDep(DependencyProperty, PropertyMetadata, CalloutLayer, 'raisePropertyChanged', ['AutoCalloutLabelPrecision:r1:tn', [1, 5], 'CalloutBackground:ud:to', [Brush.$, null], 'CalloutCollisionMode:qm:tp', [CalloutCollisionMode_$type, enumGetBox(CalloutCollisionMode_$type, 3)], 'CalloutInterpolatedValuePrecision:r2:tq', [1, -1], 'CalloutLeaderBrush:ue:tr', [Brush.$, null], 'CalloutOutline:uf:ts', [Brush.$, null], 'CalloutPaddingBottom:rt:tt', [1, NaN], 'CalloutPaddingLeft:ru:tu', [1, NaN], 'CalloutPaddingRight:rv:tv', [1, NaN], 'CalloutPaddingTop:rw:tw', [1, NaN], 'CalloutPositionPadding:rx:tx', [1, 10], 'CalloutStrokeThickness:ry:ty', [1, NaN], 'CalloutTextColor:ug:tz', [Brush.$, null], 'CollisionChannel:sj:t0', [2, null], 'ContentMemberPath:sm:t1', [2, null], 'IsAutoCalloutBehaviorEnabled:rg:t2', [0, false], 'IsCalloutOffsettingEnabled:rh:t3', [0, true], 'IsCustomCalloutStyleEnabled:ri:t4', [0, false], 'KeyMemberPath:ss:t5', [2, null], 'LabelMemberPath:sv:t6', [2, null], 'TargetSeriesName:sx:t7', [2, null], 'TargetSeries:qs:t8', [Series.$, null], 'TextStyle:s0:t9', [2, null], 'UseValueForAutoCalloutLabels:rj:ua', [0, true], 'XMemberPath:s4:ub', [2, null], 'YMemberPath:s7:uc', [2, null]]);
    return CalloutLayer;
}(AnnotationLayer));
export { CalloutLayer };
/**
 * @hidden
 */
var CalloutLayerView = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(CalloutLayerView, _super);
    function CalloutLayerView(a) {
        var _this = _super.call(this, a) || this;
        _this.b4 = null;
        _this.b9 = null;
        _this.b8 = null;
        _this.ca = NaN;
        _this.b5 = null;
        _this.b4 = a;
        _this.b9 = new List$1(CalloutView.$, 0);
        return _this;
    }
    CalloutLayerView.prototype.as = function () {
        var _this = this;
        _super.prototype.as.call(this);
        this.b8 = ((function () {
            var $ret = new HashPool$2(CalloutAnnotationWrapper.$, CalloutView.$);
            $ret.create = runOn(_this, _this.b6);
            $ret.activate = runOn(_this, _this.cc);
            $ret.disactivate = runOn(_this, _this.ce);
            $ret.destroy = runOn(_this, _this.cd);
            return $ret;
        })());
    };
    CalloutLayerView.prototype.b6 = function () {
        var a = new CalloutView(this);
        this.b9.add(a);
        return a;
    };
    CalloutLayerView.prototype.cc = function (a) {
        a.w = 0;
    };
    CalloutLayerView.prototype.ce = function (a) {
        a.w = 1;
    };
    CalloutLayerView.prototype.cd = function (a) {
        this.b9.remove(a);
    };
    CalloutLayerView.prototype.cm = function (a) {
        if (a == null) {
            return a;
        }
        return BrushUtil.l(a, 0.1);
    };
    CalloutLayerView.prototype.a6 = function (a, b) {
        _super.prototype.a6.call(this, a, b);
        a.ac(this.b7());
        if (a.d && !b) {
            for (var c = 0; c < this.b9.count; c++) {
                var d = this.b9._inner[c];
                if (d.w == 0) {
                    d.h(a);
                }
            }
        }
    };
    CalloutLayerView.prototype.b7 = function () {
        if (this.b4.qu != null) {
            return this.b4.qu;
        }
        return this.e.ca.getFontInfo();
    };
    CalloutLayerView.prototype.al = function (a) {
        _super.prototype.al.call(this, a);
        for (var b = 0; b < this.b9.count; b++) {
            var c = this.b9._inner[b];
            if (c.w != 0) {
                continue;
            }
            c.g(this.b4, this.b7(), a);
        }
    };
    CalloutLayerView.prototype.co = function (a) {
        this.k.ac(this.b7());
        this.ca = this.cb();
        return new Size(1, this.k.f(a.ak), this.ca);
    };
    CalloutLayerView.prototype.cb = function () {
        var a = this.b7();
        if (isNaN_(this.ca)) {
            var b = FontUtil.getCurrentFontHeight(this.e.ca.cf.j.ae, a);
            this.ca = b;
        }
        return this.ca;
    };
    CalloutLayerView.prototype.cn = function (a, b) {
        if (this.b5 == null) {
            this.b5 = new CalloutView(this);
        }
        this.b5.f = a;
        this.b5.v = b;
        var c = this.b5.s();
        this.b5.f = null;
        return c;
    };
    CalloutLayerView.prototype.cg = function (a, b, c) {
        a.d = b;
        a.e = c;
    };
    CalloutLayerView.prototype.ch = function (a, b, c) {
        a.i(this.e, b, c);
    };
    CalloutLayerView.prototype.ci = function (a) {
        if (a != null) {
            return this.cm(a.ok);
        }
        return this.e.ok;
    };
    CalloutLayerView.prototype.cl = function () {
        return ((function () {
            var $ret = new Brush();
            $ret.color = Color.u(255, 255, 255, 255);
            return $ret;
        })());
    };
    CalloutLayerView.prototype.ck = function () {
        return ((function () {
            var $ret = new Brush();
            $ret.color = Color.u(255, 255, 255, 255);
            return $ret;
        })());
    };
    CalloutLayerView.prototype.cj = function (a) {
        if (a != null) {
            return this.cm(a.of);
        }
        return this.e.of;
    };
    CalloutLayerView.prototype.cf = function () {
        this.ca = NaN;
    };
    CalloutLayerView.$t = markType(CalloutLayerView, 'CalloutLayerView', AnnotationLayerView.$);
    return CalloutLayerView;
}(AnnotationLayerView));
export { CalloutLayerView };
/**
 * @hidden
 */
var CalloutView = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(CalloutView, _super);
    function CalloutView(a) {
        var _this = _super.call(this) || this;
        _this.a = null;
        _this.w = 0;
        _this.j = null;
        _this.r = null;
        _this.o = { $type: Point_$type, x: 0, y: 0 };
        _this.q = null;
        _this.u = new Thickness(0, 0);
        _this.t = null;
        _this.d = 0;
        _this.e = 0;
        _this.b = null;
        _this.q = new Line();
        _this.q.ab = false;
        _this.q._stroke = ((function () {
            var $ret = new Brush();
            $ret.color = Color.u(255, 0, 0, 0);
            return $ret;
        })());
        _this.q.ac = 2;
        _this.j = new TextBlock();
        _this.r = new Rectangle();
        _this.r.ac = 0;
        _this.a = a;
        _this.w = 0;
        return _this;
    }
    CalloutView.prototype.h = function (a) {
        a.z();
        a.af(this.d, this.e);
        var b = new TranslateTransform();
        b.j = this.t.c;
        b.k = this.t.e;
        this.r.j = b;
        a.r(this.q);
        a.z();
        this.r.width = this.j.m + this.u.c + this.u.d;
        this.r.height = this.j.l + this.u.e + this.u.b;
        a.j(this.r.j);
        a.v(this.r);
        this.j.o = this.u.e;
        this.j.n = this.u.c;
        a.w(this.j);
        a.y();
        a.y();
    };
    Object.defineProperty(CalloutView.prototype, "p", {
        get: function () {
            return this.o;
        },
        set: function (a) {
            if (this.o.x != a.x || this.o.y != a.y) {
                var b = this.s();
                var c = b.height;
                var d = b.width;
                this.o = a;
                var e = CalloutViewHelper.b(this.p, d, c, this.q);
                this.t = e;
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CalloutView.prototype, "n", {
        get: function () {
            return this.j.am;
        },
        set: function (a) {
            this.j.am = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CalloutView.prototype, "m", {
        get: function () {
            return this.r._stroke;
        },
        set: function (a) {
            this.r._stroke = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CalloutView.prototype, "l", {
        get: function () {
            return this.q._stroke;
        },
        set: function (a) {
            this.q._stroke = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CalloutView.prototype, "k", {
        get: function () {
            return this.r._fill;
        },
        set: function (a) {
            this.r._fill = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CalloutView.prototype, "c", {
        get: function () {
            return this.r.ac;
        },
        set: function (a) {
            this.r.ac = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CalloutView.prototype, "v", {
        get: function () {
            return this.u;
        },
        set: function (a) {
            this.u = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CalloutView.prototype, "f", {
        get: function () {
            return this.j.ak;
        },
        set: function (a) {
            if (a == null) {
                this.j.ak = "";
            }
            else {
                this.j.ak = a.toString();
            }
            var b = this.s();
            var c = b.height;
            var d = b.width;
            var e = CalloutViewHelper.b(this.p, d, c, this.q);
            this.t = e;
        },
        enumerable: false,
        configurable: true
    });
    CalloutView.prototype.s = function () {
        var a = this.a.co(this.j);
        this.j.m = a.width;
        this.j.l = a.height;
        return new Size(1, a.width + this.u.c + this.u.d, a.height + this.u.e + this.u.b);
    };
    CalloutView.prototype.i = function (a, b, c) {
        if (this.b == null) {
            this.b = new DataContext();
        }
        this.b.series = a;
        this.b.item = c;
        if (b.c != null) {
            b.c.u = this.b;
        }
    };
    CalloutView.prototype.g = function (a, b, c) {
        a.a6.exportCalloutData(this.d, this.e, this.t.c, this.t.e, c, this.r, this.j, b, this.q, "callout", ["Main", "Callout"]);
    };
    CalloutView.$t = markType(CalloutView, 'CalloutView');
    return CalloutView;
}(Base));
export { CalloutView };
//# sourceMappingURL=CalloutLayer_combined.js.map
