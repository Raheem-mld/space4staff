/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { AnchoredCategorySeries } from "./AnchoredCategorySeries";
import { NumericXAxis } from "./NumericXAxis";
import { DependencyProperty } from "igniteui-react-core";
import { CategoryYAxis } from "./CategoryYAxis";
import { IVerticalAnchoredCategorySeriesInteractionManager_$type } from "./IVerticalAnchoredCategorySeriesInteractionManager";
import { DVContainer } from "igniteui-react-core";
import { runOn, typeCast, EnumUtil, markType, markDep } from "igniteui-react-core";
import { Axis } from "./Axis";
import { ScalerParams } from "./ScalerParams";
import { Rect } from "igniteui-react-core";
import { TrendLineType_$type } from "igniteui-react-core";
import { CategoryTrendLineManagerFactory } from "./CategoryTrendLineManagerFactory";
import { PropertyMetadata } from "igniteui-react-core";
import { truncate } from "igniteui-react-core";
/**
 * @hidden
 */
var VerticalAnchoredCategorySeries = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(VerticalAnchoredCategorySeries, _super);
    function VerticalAnchoredCategorySeries() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tx = null;
        return _this;
    }
    VerticalAnchoredCategorySeries.prototype.ke = function () {
        _super.prototype.ke.call(this);
        this.xAxis = null;
        this.yAxis = null;
    };
    Object.defineProperty(VerticalAnchoredCategorySeries.prototype, "ty", {
        get: function () {
            var _this = this;
            if (this.tx == null) {
                this.tx = DVContainer.instance.createInstance(IVerticalAnchoredCategorySeriesInteractionManager_$type, function () { return _this.ck.n; });
            }
            return this.tx;
        },
        enumerable: false,
        configurable: true
    });
    VerticalAnchoredCategorySeries.prototype.get_isVertical = function () {
        return true;
    };
    VerticalAnchoredCategorySeries.prototype.q2 = function () {
        return this.yAxis;
    };
    VerticalAnchoredCategorySeries.prototype.rn = function () {
        return this.xAxis;
    };
    VerticalAnchoredCategorySeries.prototype.getOffsetValue = function () {
        return this.q8.r(this.q2(), this.bx.bv, this.bx.bu, this.getEffectiveViewport1(this.bx));
    };
    VerticalAnchoredCategorySeries.prototype.getCategoryWidth = function () {
        return this.yAxis.getCategorySize(this.bx.bv, this.bx.bu, this.getEffectiveViewport1(this.bx));
    };
    VerticalAnchoredCategorySeries.prototype.g4 = function (a, b) {
        return this.g5(a, b, this.q2(), runOn(this, this.r1), this.valueColumn);
    };
    VerticalAnchoredCategorySeries.prototype.g6 = function (a, b) {
        return this.g7(a, b, this.q2(), runOn(this, this.r1), this.valueColumn);
    };
    VerticalAnchoredCategorySeries.prototype.fu = function (a, b, c, d, e) {
        if (this.valueColumn == null) {
            return Number.POSITIVE_INFINITY;
        }
        return this.fv(a, b, this.yAxis, d, e, this.valueColumn.count, runOn(this, this.r1));
    };
    VerticalAnchoredCategorySeries.prototype.bo = function () {
        if (this.bp == 0) {
            return 1;
        }
        else {
            return _super.prototype.bo.call(this);
        }
    };
    VerticalAnchoredCategorySeries.prototype.pd = function (a) {
        if (!this.hasMarkers || !this.pt()) {
            return Rect.empty;
        }
        return this.ty.e$b(this, this.q3.m, a, runOn(this, this.t6));
    };
    VerticalAnchoredCategorySeries.prototype.t6 = function (a) {
        return this.sv.c9(a);
    };
    VerticalAnchoredCategorySeries.prototype.ep = function (a, b) {
        if (this.eo(a, b)) {
            return true;
        }
        if (this.pu(a, b)) {
            return true;
        }
        return false;
    };
    VerticalAnchoredCategorySeries.prototype.f8 = function (a, b, c) {
        if (this.ca == null) {
            return NaN;
        }
        var d = this.getEffectiveViewport1(this.bx);
        var e = this.q2();
        var f = new ScalerParams(0, this.ca.pg, this.bx.bu, e.cc, d);
        var g = this.q8.r(e, this.ca.pg, this.bx.bu, d);
        return this.ga(this.valueColumn, a, e, f, g, runOn(this, this.r1), b, c);
    };
    VerticalAnchoredCategorySeries.prototype.o2 = function (a, b, c) {
        var d = this.q2();
        return this.o4(a, b, c, this.q8.r(d, this.bx.bv, this.bx.bu, this.getEffectiveViewport1(this.bx)), this.rn(), d, null, null, null);
    };
    VerticalAnchoredCategorySeries.prototype.fetchXAxis = function () {
        return this.xAxis;
    };
    VerticalAnchoredCategorySeries.prototype.fetchYAxis = function () {
        return this.yAxis;
    };
    VerticalAnchoredCategorySeries.prototype.te = function (a) {
        this.xAxis = typeCast(NumericXAxis.$, a);
    };
    VerticalAnchoredCategorySeries.prototype.tf = function (a) {
        this.yAxis = typeCast(CategoryYAxis.$, a);
    };
    VerticalAnchoredCategorySeries.prototype.rx = function () {
        return this.xAxis != null && this.xAxis.cv();
    };
    VerticalAnchoredCategorySeries.prototype.qw = function (a, b) {
        return this.ss(a, b, this.yAxis);
    };
    VerticalAnchoredCategorySeries.prototype.fw = function (a) {
        return this.ty.e$a(this, a);
    };
    VerticalAnchoredCategorySeries.prototype.r1 = function (a) {
        return this.fy(a, this.q2());
    };
    VerticalAnchoredCategorySeries.prototype.g0 = function (a) {
        return truncate(Math.round(this.fw(a)));
    };
    VerticalAnchoredCategorySeries.prototype.hh = function (a) {
        var b = this.g0(a);
        return b >= 0 && this.ch != null && b < this.ch.count ? this.ch.item(b) : null;
    };
    VerticalAnchoredCategorySeries.prototype.lm = function (a, b, c, d) {
        _super.prototype.lm.call(this, a, b, c, d);
        switch (b) {
            case VerticalAnchoredCategorySeries.$$p[0]:
                if (c != d) {
                    this.kl(typeCast(Axis.$, c));
                    this.lr(typeCast(Axis.$, d));
                    this.rc.cr.g(this.gh);
                    this.l0(false);
                    this.k7();
                }
                break;
            case VerticalAnchoredCategorySeries.$$p[1]:
                if (c != d) {
                    this.kl(typeCast(Axis.$, c));
                    this.lr(typeCast(Axis.$, d));
                    this.rc.cr.g(this.gh);
                    this.rx();
                    this.l0(false);
                    this.k7();
                }
                break;
            case "TrendLineType":
                var e = EnumUtil.getEnumValue(TrendLineType_$type, d);
                if (e != 0) {
                    this.sv.c2 = CategoryTrendLineManagerFactory.a(this.sv.c2, this.yAxis, this.mr, this, this.ck);
                }
                break;
        }
    };
    VerticalAnchoredCategorySeries.prototype.t1 = function (a) {
        if (typeCast(CategoryYAxis.$, a) !== null) {
            return true;
        }
        return false;
    };
    VerticalAnchoredCategorySeries.prototype.t0 = function (a) {
        if (typeCast(NumericXAxis.$, a) !== null) {
            return true;
        }
        return false;
    };
    Object.defineProperty(VerticalAnchoredCategorySeries.prototype, "useHighMarkerFidelity", {
        get: function () {
            return this.ry;
        },
        enumerable: false,
        configurable: true
    });
    VerticalAnchoredCategorySeries.$t = markType(VerticalAnchoredCategorySeries, 'VerticalAnchoredCategorySeries', AnchoredCategorySeries.$);
    VerticalAnchoredCategorySeries.$$p = markDep(DependencyProperty, PropertyMetadata, VerticalAnchoredCategorySeries, 'raisePropertyChanged', ['XAxis::t4', [NumericXAxis.$, null], 'YAxis::t5', [CategoryYAxis.$, null]]);
    return VerticalAnchoredCategorySeries;
}(AnchoredCategorySeries));
export { VerticalAnchoredCategorySeries };
//# sourceMappingURL=VerticalAnchoredCategorySeries.js.map
