/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends, __values } from "tslib";
import { Base, Point_$type, runOn, fromEnum, markType, PointUtil } from "igniteui-react-core";
import { ISeriesViewerInteractionManager_$type } from "./ISeriesViewerInteractionManager";
import { HighlightingManager } from "./HighlightingManager";
import { Rect } from "igniteui-react-core";
import { TileZoomManager } from "./TileZoomManager";
import { Size } from "igniteui-react-core";
import { MathUtil } from "igniteui-react-core";
import { MouseEventArgs } from "igniteui-react-core";
import { MouseButtonEventArgs } from "igniteui-react-core";
import { truncate, intDivide, isNaN_ } from "igniteui-react-core";
/**
 * @hidden
 */
var SeriesViewerInteractionManager = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(SeriesViewerInteractionManager, _super);
    function SeriesViewerInteractionManager() {
        var _this = _super.call(this) || this;
        _this.r = 0;
        _this.s = 0;
        _this.af = null;
        _this.o = 0;
        _this.p = 0;
        _this.n = 0;
        _this.q = 0;
        _this.h = false;
        _this.ag = null;
        _this.ai = null;
        _this.j = false;
        _this.e = null;
        _this.b = null;
        _this.ah = null;
        _this.aj = null;
        _this.d = null;
        _this.a = null;
        _this.g = false;
        _this.ah = Rect.empty;
        _this.ag = Rect.empty;
        return _this;
    }
    Object.defineProperty(SeriesViewerInteractionManager.prototype, "f$b", {
        get: function () {
            if (this.b == null) {
                this.b = new HighlightingManager();
            }
            return this.b;
        },
        enumerable: false,
        configurable: true
    });
    SeriesViewerInteractionManager.prototype.f$am = function (a, b) {
        var c = null;
        var d = null;
        var e = null;
        e = a.cf.e();
        var f;
        var g = ((function () { var h = a.cf.f(b, false, f, false); f = h.p2; return h.ret; })());
        if (g != e) {
            if (e.a4.a$c) {
                e.a4.a$z(e, b, null, null, false);
            }
        }
        c = f;
        if (a != null) {
            a.mc(b);
        }
        if (g != null && !g.a4.a$c) {
            g.a4.a$y(g, b, c, d, false);
        }
    };
    SeriesViewerInteractionManager.prototype.f$a = function (a) {
        if (a.at != 0) {
            return a.at;
        }
        var b = 1;
        var c = false;
        var d = false;
        for (var e = 0; e < a.series.count; e++) {
            var f = a.series._inner[e];
            if (f.isStacked) {
                f.ku(function (g) {
                    if (g.bn == 2) {
                        c = true;
                    }
                    if (g.bn == 1) {
                        d = true;
                    }
                    return true;
                });
            }
            else {
                if (f.bn == 2) {
                    c = true;
                }
                if (f.bn == 1) {
                    d = true;
                }
            }
        }
        if (d) {
            b = 1;
        }
        if (c) {
            b = 2;
        }
        if (c && d) {
            b = 3;
        }
        return b;
    };
    SeriesViewerInteractionManager.prototype.f$al = function (a) {
        var b = a.o8;
        var c = b;
        var d = a.cf;
        var e = a.c9();
        var f = a.db;
        var g = a.ee;
        var h = a.em;
        if (!e) {
            c = { $type: Point_$type, x: NaN, y: NaN };
        }
        if (c.x < 0 || c.x > 1 || c.y < 0 || c.y > 1) {
            c = { $type: Point_$type, x: NaN, y: NaN };
        }
        for (var i = 0; i < a.series.count; i++) {
            var j = a.series._inner[i];
            j.kz(c);
        }
        var k = a.b6 == 0 && !a.dp && (a.de || f) && !g && !h;
        var l = a.pv;
        if (k && !isNaN_(b.x) && !l.isEmpty) {
            var m = l.width * (b.x - a.pg.left) / a.pg.width;
            d.el(l.left + m, l.top, l.left + m, l.bottom);
            d.ea();
            d.ef(m);
        }
        else {
            d.ci();
        }
        if (k && !isNaN_(b.y) && !l.isEmpty) {
            var n = l.height * (b.y - a.pg.top) / a.pg.height;
            d.ee(l.left, l.top + n, l.right, l.top + n);
            d.d6();
        }
        else {
            d.cd();
        }
    };
    SeriesViewerInteractionManager.prototype.f$ae = function (a) {
        switch (a.b6) {
            case 0:
                a.cf.d2();
                this.f$al(a);
                a.cf.ca();
                break;
            case 1:
                a.cf.d4();
                a.cf.ch();
                this.f$al(a);
                a.cf.b9();
                break;
            case 2:
                a.cf.d4();
                a.cf.ch();
                this.f$al(a);
                a.cf.cb();
                break;
        }
    };
    SeriesViewerInteractionManager.prototype.f$p = function (a, b) {
        if (b.x >= 0 && b.y >= 0 && b.x <= a.pv.width && b.y <= a.pv.height) {
            this.ab(a, b);
        }
        else {
            a.jj();
        }
    };
    SeriesViewerInteractionManager.prototype.ab = function (a, b) {
        var e_1, _a;
        var c = a.cf;
        var d = a.pv;
        if (a.dq || a.dp) {
            return;
        }
        if (a.db && a.de) {
            var e = d.height > d.width;
            c.bv(e);
            try {
                for (var _b = __values(fromEnum(a.series)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var f = _c.value;
                    if (f.isStacked) {
                        f.ku(function (g) {
                            if (g._visibility == 0) {
                                g.l6(b, runOn(c, c.bm));
                            }
                            return true;
                        });
                    }
                    else {
                        if (f._visibility == 0) {
                            f.l6(b, runOn(c, c.bm));
                        }
                    }
                }
            }
            catch (e_1_1) {
                e_1 = { error: e_1_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_1)
                        throw e_1.error;
                }
            }
            c.d7();
        }
    };
    SeriesViewerInteractionManager.prototype.aa = function (a, b) {
        if (a.de || a.dm) {
            a.db = true;
            a.k9();
            this.ag = new Rect(0, b.x, b.y, 0, 0);
            this.ai = new Rect(0, b.x, b.y, 0, 0);
            a.b6 = 0;
            a.ja(a.pa(b));
        }
    };
    SeriesViewerInteractionManager.prototype.f$ac = function (a, b) {
        this.aa(a, b);
        this.ab(a, b);
        this.f$al(a);
    };
    SeriesViewerInteractionManager.prototype.f$q = function (a, b, c) {
        if (!a.db) {
            this.ad(a, b, c);
        }
    };
    SeriesViewerInteractionManager.prototype.f$o = function (a, b) {
        this.ah = Rect.empty;
        a.jj();
    };
    SeriesViewerInteractionManager.prototype.f$aj = function (a) {
        var b = a.cf;
        this.q = 1;
        a.db = false;
        b.cg();
        b.cc();
        b.ce();
        a.ja({ $type: Point_$type, x: NaN, y: NaN });
        b.cd();
        b.ci();
        b.ch();
        a.b6 = 0;
        this.h = true;
        a.ee = true;
        a.la();
    };
    SeriesViewerInteractionManager.prototype.f$ab = function (a, b) {
        this.f$aj(a);
    };
    SeriesViewerInteractionManager.prototype.f$ak = function (a, b, c, d, e) {
        this.r = b.x;
        this.s = b.y;
        this.o = c;
        this.p = d;
        this.n = e;
        this.af = a.pg;
        this.f$aj(a);
    };
    SeriesViewerInteractionManager.prototype.f$aa = function (a, b) {
        var c = a.cf;
        c.cd();
        c.ci();
        if (c.av) {
            this.w(a, b);
        }
        else {
            this.y(a, b);
            this.q = b;
        }
    };
    SeriesViewerInteractionManager.prototype.f$ag = function (a, b, c, d, e) {
        var f = a.cf;
        f.cd();
        f.ci();
        this.o = this.o * c;
        this.p = this.p * d;
        this.n = this.n * e;
        if (a.dw) {
            this.o = this.n;
            this.p = this.n;
        }
        var g = a.pg;
        var h = a.pv;
        var i = b.x - this.r;
        var j = b.y - this.s;
        this.r = b.x;
        this.s = b.y;
        var k = g.width;
        var l = g.height;
        var m = this.af.width / this.o;
        var n = this.af.height / this.p;
        if (m > 1) {
            m = 1;
        }
        if (n > 1) {
            n = 1;
        }
        var o = { $type: Point_$type, x: b.x, y: b.y };
        var p = { $type: Point_$type, x: (o.x - h.left) / h.width * g.width + g.left, y: (o.y - h.top) / h.height * g.height + g.top };
        var q = new Rect(0, g.left, g.top, m, n);
        var r = { $type: Point_$type, x: (p.x - q.left) / q.width * h.width + h.left, y: (p.y - q.top) / q.height * h.height + h.top };
        var s = (r.x - o.x) - i;
        var t = (r.y - o.y) - j;
        var u = s / h.width * q.width;
        var v = t / h.height * q.height;
        q = new Rect(0, q.left + u, q.top + v, q.width, q.height);
        g = q;
        a.ms(g, true);
    };
    SeriesViewerInteractionManager.prototype.f$x = function (a, b) {
        this.ag = new Rect(0, b.x, b.y, 0, 0);
        this.ai = new Rect(0, b.x, b.y, 0, 0);
    };
    SeriesViewerInteractionManager.prototype.x = function (a, b, c) {
        var d = a.pg.width;
        var e = a.pg.height;
        var f = a.pg.left + d / 2;
        var g = a.pg.top + e / 2;
        d = d / b;
        e = e / b;
        var h = f - d / 2;
        var i = g - e / 2;
        a.ms(new Rect(0, h, i, d, e), true);
    };
    SeriesViewerInteractionManager.prototype.f$z = function (a, b) {
        var c = a.cf;
        if (c.av) {
            this.w(a, b);
        }
        else {
            this.y(a, b);
        }
        this.ag = Rect.empty;
        a.ee = false;
    };
    SeriesViewerInteractionManager.prototype.f$r = function (a, b) {
        a.ee = false;
        this.ag = Rect.empty;
        a.jj();
    };
    SeriesViewerInteractionManager.prototype.f$af = function (a, b, c, d, e) {
        a.ee = false;
        this.ag = Rect.empty;
        a.jj();
    };
    SeriesViewerInteractionManager.prototype.w = function (a, b) {
        var c = a.pw;
        var d = 1 / b;
        var e = { $type: Point_$type, x: c.x + c.width / 2, y: c.y + c.height / 2 };
        var f = { $type: Point_$type, x: c.x - e.x, y: c.y - e.y };
        var g = new Rect(0, f.x * d + e.x, f.y * d + e.y, c.width * d, c.height * d);
        a.ms(g, true);
    };
    SeriesViewerInteractionManager.prototype.y = function (a, b) {
        var c = a.pv;
        var d = a.pw;
        var e = b - this.q;
        if (e != 0) {
            var f = 0.03;
            var g = e < 0 ? 1 + f : 1 - f;
            var h = { $type: Point_$type, x: d.x + d.width / 2, y: d.y + d.height / 2 };
            var i = { $type: Point_$type, x: d.x - h.x, y: d.y - h.y };
            var j = new Rect(0, i.x * g + h.x, i.y * g + h.y, d.width * g, d.height * g);
            a.ms(j, true);
        }
    };
    SeriesViewerInteractionManager.prototype.f$m = function (a, b, c) {
        if (!a.ee) {
            this.h = false;
        }
        this.ad(a, b, c);
        a.ku(b, c);
    };
    SeriesViewerInteractionManager.prototype.ad = function (a, b, c) {
        var d;
        var e = a.cf;
        var f = a.b4(c);
        if (e.ew == 0) {
            switch (f) {
                case 1:
                    d = a.d3() ? f : 0;
                    break;
                default:
                    d = f;
                    break;
            }
        }
        else {
            if (e.ew == a.on) {
                d = 1;
            }
            else if (e.ew == a.oo) {
                d = 2;
            }
            else {
                d = 0;
            }
        }
        switch (d) {
            case 1:
            case 2:
                a.cf.b7();
                a.cf.dn();
                break;
        }
        a.b6 = d;
        switch (a.b6) {
            case 1:
                a.ja({ $type: Point_$type, x: NaN, y: NaN });
                this.ag = new Rect(0, b.x, b.y, 0, 0);
                this.ai = new Rect(0, b.x, b.y, 0, 0);
                this.ah = new Rect(0, b.x, b.y, 0, 0);
                e.d5();
                e.ed(this.ag);
                a.lf(Rect.empty, true);
                break;
            case 2:
                this.ag = new Rect(0, b.x, b.y, 0, 0);
                this.ah = new Rect(0, b.x, b.y, 0, 0);
                break;
        }
        this.aj = a.pg;
        a.px = a.pg;
    };
    SeriesViewerInteractionManager.prototype.f$ai = function (a) {
        a.md();
        a.cf.di();
    };
    SeriesViewerInteractionManager.prototype.f$ah = function (a) {
        a.je();
        a.cf.dh();
    };
    SeriesViewerInteractionManager.prototype.f$an = function (a) {
        if (a.c8 && !this.j) {
            this.j = true;
            this.ac(a);
        }
    };
    SeriesViewerInteractionManager.prototype.f$j = function (a) {
        if (this.j) {
            this.z(a);
            this.j = false;
        }
    };
    SeriesViewerInteractionManager.prototype.f$g = function (a) {
        if (this.e == null) {
            return;
        }
        this.f.ab();
    };
    Object.defineProperty(SeriesViewerInteractionManager.prototype, "f", {
        get: function () {
            return this.e;
        },
        enumerable: false,
        configurable: true
    });
    SeriesViewerInteractionManager.prototype.ac = function (a) {
        if (this.e == null) {
            this.e = new TileZoomManager(a, true, a.ga);
            this.e.h = !a.ef;
        }
        a.dl = true;
        a.le();
        this.e.al();
        a.cf.br();
        a.cf.bs();
    };
    SeriesViewerInteractionManager.prototype.z = function (a) {
        if (this.e == null) {
            return;
        }
        a.dl = false;
        a.cf.dd();
        this.e.ah();
        a.lx();
        a.cf.by();
    };
    SeriesViewerInteractionManager.prototype.f$i = function (a) {
        a.i8();
        a.lz();
    };
    SeriesViewerInteractionManager.prototype.l = function (a) {
        return a.b6 == 2;
    };
    SeriesViewerInteractionManager.prototype.m = function (a, b) {
        return a.bw == 1 || b || a.c8;
    };
    SeriesViewerInteractionManager.prototype.k = function (a) {
        return a.b6 == 1;
    };
    SeriesViewerInteractionManager.prototype.f$l = function (a, b, c) {
        var d = a.cf;
        if (this.ag.isEmpty && c) {
            this.ad(a, b, c);
        }
        var e = 2;
        if (c) {
            e = 10;
        }
        var f = false;
        var g = new Rect(2, { $type: Point_$type, x: this.ag.x, y: this.ag.y }, b);
        var h = new Rect(0, 0, 0, 0, 0);
        if (!this.ah.isEmpty) {
            h = new Rect(2, { $type: Point_$type, x: this.ah.x, y: this.ah.y }, b);
        }
        if (h.width > e && h.height > e) {
            f = true;
        }
        if (!a.ee) {
            if (f) {
                this.h = false;
            }
        }
        if (!a.ee && (a.db || !c)) {
            a.ja(a.pa(b));
        }
        if (this.k(a)) {
            if (f) {
                var i = a.pu(g);
                a.lf(i, true);
            }
            else {
                a.lf(Rect.empty, true);
            }
            a.j4();
            d.ed(g);
        }
        var j = a.pv;
        var k = a.pg;
        if (this.l(a)) {
            var l = j;
            var m = k.left + k.width * (this.ag.x - b.x) / l.width;
            var n = k.top + k.height * (this.ag.y - b.y) / l.height;
            var o = new Rect(0, m, n, k.width, k.height);
            if (this.m(a, c)) {
                if (h.width != 0 || h.height != 0) {
                    a.la();
                }
                a.lf(Rect.empty, true);
                a.ms(o, true);
                this.ag = new Rect(3, b, new Size(1, 0, 0));
                this.ai = new Rect(3, b, new Size(1, 0, 0));
            }
            else {
                a.lf(o, true);
            }
        }
        this.ai = new Rect(3, b, new Size(1, 0, 0));
        d.bu(b);
    };
    SeriesViewerInteractionManager.prototype.f$k = function (a, b, c, d) {
        var e = a.cf;
        var f = 2;
        if (c) {
            f = 10;
        }
        var g = a.pv;
        var h = a.pg;
        if (!this.h) {
            var i = false;
            var j = new Rect(2, { $type: Point_$type, x: this.ag.x, y: this.ag.y }, b);
            if (j.width > f && j.height > f) {
                i = true;
            }
            if (a.b6 == 1) {
                a.j3();
                e.cc();
                if (i) {
                    a.ms(a.pu(j), true);
                }
            }
            if (a.b6 == 2) {
                var k = g;
                var l = h.left + h.width * (this.ag.x - b.x) / k.width;
                var m = h.top + h.height * (this.ag.y - b.y) / k.height;
                a.ms(new Rect(0, l, m, h.width, h.height), true);
            }
        }
        var n = false;
        var o = new Rect(2, { $type: Point_$type, x: this.ah.x, y: this.ah.y }, b);
        if (o.width > f || o.height > f) {
            n = true;
        }
        if (n) {
            a.em = true;
        }
        a.b6 = 0;
        a.lf(Rect.empty, true);
        e.bw();
        a.em = false;
        e.cd();
        e.ci();
        if (c) {
            e.ch();
            e.cd();
            e.ci();
            e.ce();
        }
        a.jj();
        a.k9();
        a.kv(b, c, d);
    };
    SeriesViewerInteractionManager.prototype.f$ad = function (a) {
        if (this.f != null) {
            this.f.h = !a.ef;
        }
    };
    SeriesViewerInteractionManager.prototype.f$d = function (a, b) {
        var c = a.cf;
        var d = a.pg;
        if (a.b6 == 2 && b == 8) {
            c.bt();
            a.b6 = 0;
            a.k9();
            a.lf(Rect.empty, true);
            if (a.bw == 1) {
                a.ms(this.aj, true);
            }
            return true;
        }
        if (a.b6 == 1 && b == 8) {
            c.bt();
            a.b6 = 0;
            a.k9();
            c.cc();
            a.lf(Rect.empty, true);
            return true;
        }
        var e = Rect.empty;
        var f = false;
        switch (b) {
            case 13:
                f = true;
                e = new Rect(0, 0, 0, 1, 1);
                break;
            case 11:
                f = true;
                e = new Rect(0, d.left - 0.1 * d.width, d.top - 0.1 * d.height, 1.2 * d.width, 1.2 * d.height);
                break;
            case 10:
                f = true;
                e = new Rect(0, d.left + 0.1 * d.width, d.top + 0.1 * d.height, 0.8 * d.width, 0.8 * d.height);
                break;
            case 14:
                f = true;
                e = new Rect(0, d.left - 0.1 * d.width, d.top, d.width, d.height);
                e.x = e.x - Math.min(e.left, 0);
                break;
            case 16:
                f = true;
                e = new Rect(0, d.left + 0.1 * d.width, d.top, d.width, d.height);
                e.x = e.x - Math.max(e.right - 1, 0);
                break;
            case 15:
                f = true;
                e = new Rect(0, d.left, d.top - 0.1 * d.height, d.width, d.height);
                e.y = e.y - Math.min(e.top, 0);
                break;
            case 17:
                f = true;
                e = new Rect(0, d.left, d.top + 0.1 * d.height, d.width, d.height);
                e.y = e.y - Math.max(e.bottom - 1, 0);
                break;
        }
        if (!e.isEmpty && Rect.l_op_Inequality(e, d)) {
            a.ms(e, true);
        }
        return f;
    };
    SeriesViewerInteractionManager.prototype.f$e = function (a, b, c) {
        var d = a.cf;
        var e = a.pg;
        var f = e.left + e.width * b.x / a.pv.width;
        var g = e.top + e.height * b.y / a.pv.height;
        var h = 1 - MathUtil.b(c, -0.5, 0.5);
        var i = Math.max(0, f - h * (f - e.left));
        var j = Math.min(1, g + h * (e.bottom - g));
        var k = Math.min(1, f + h * (e.right - f));
        var l = Math.max(0, g - h * (g - e.top));
        a.la();
        this.v(a, 1000);
        a.ms(new Rect(0, i, l, k - i, j - l), true);
        return a.d3();
    };
    SeriesViewerInteractionManager.prototype.v = function (a, b) {
        a.cf.bz(b);
    };
    SeriesViewerInteractionManager.prototype.f$n = function (a, b) {
        var c = a.pg;
        var d = c.left + c.width * b.x / a.pv.width;
        var e = c.top + c.height * b.y / a.pv.height;
        var f = 0.7;
        var g = Math.max(0, d - f * (d - c.left));
        var h = Math.min(1, e + f * (c.bottom - e));
        var i = Math.min(1, d + f * (c.right - d));
        var j = Math.max(0, e - f * (e - c.top));
        a.ms(new Rect(0, g, j, i - g, h - j), true);
    };
    SeriesViewerInteractionManager.prototype.f$h = function (a) {
        this.f.ac();
    };
    SeriesViewerInteractionManager.prototype.f$c = function (a, b, c, d, e, f, g) {
        var e_2, _a;
        var h = true;
        var i = false;
        var j = false;
        var k = a;
        if (k.as == 1) {
            h = false;
            i = true;
        }
        if (k.as == 3 || k.as == 4) {
            i = true;
        }
        if (k.as == 4) {
            j = true;
        }
        var l = truncate(Math.round(d.x));
        var m = truncate(Math.round(d.y));
        f = null;
        var n = -1;
        if (h && c != null) {
            var o = l;
            var p = m;
            if (a.fh != 1) {
                o = truncate(Math.round(d.x * a.fh));
                p = truncate(Math.round(d.y * a.fh));
            }
            var q = c.a(o, p);
            if (q == null || q.length == 0) {
                f = null;
                return {
                    ret: null,
                    p5: f
                };
            }
            if ((q[0] > 0 || q[1] > 0 || q[2] > 0) && q[3] == 255) {
                var num2_ = q[2];
                if (num2_ % 4 != 0) {
                    num2_ = num2_ + (4 - (num2_ % 4));
                }
                var num1_ = q[1];
                if (num1_ % 4 != 0) {
                    num1_ = num1_ + (4 - (num1_ % 4));
                }
                var num0_ = q[0];
                if (num0_ % 4 != 0) {
                    num0_ = num0_ + (4 - (num0_ % 4));
                }
                var num_ = 0;
                num_ = (num2_ >> 2);
                num_ = (num_ << 6);
                num_ = (num_ | (num1_ >> 2));
                num_ = (num_ << 6);
                num_ = (num_ | (num0_ >> 2));
                n = truncate(Math.floor((intDivide(num_, 1000))));
                n--;
            }
        }
        var r = null;
        var s = -1;
        if (n >= 0) {
            var t_1 = false;
            var u_1 = 0;
            try {
                for (var _b = __values(fromEnum(b)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var v = _c.value;
                    if (!v.ef) {
                        continue;
                    }
                    if (t_1) {
                        break;
                    }
                    if (v.isStacked) {
                        v.ku(function (w) {
                            if (w.hc == n) {
                                r = w;
                                s = u_1;
                                t_1 = true;
                                return false;
                            }
                            return true;
                        });
                    }
                    else if (v.hc == n) {
                        r = v;
                        s = u_1;
                        break;
                    }
                    u_1++;
                }
            }
            catch (e_2_1) {
                e_2 = { error: e_2_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_2)
                        throw e_2.error;
                }
            }
        }
        var w = null;
        if (i) {
            var x = false;
            for (var y = b.count - 1; y >= 0; y--) {
                var z = b._inner[y];
                if (!z.ef) {
                    continue;
                }
                var aa = z.bx;
                if (!z.e3(aa.bu, aa.bv, aa)) {
                    continue;
                }
                if (!x && y < s && h && !j) {
                    if (r != null) {
                        w = r;
                        x = true;
                        break;
                    }
                }
                if (z != null && z.bn == 1) {
                    if (z.ep(d, g)) {
                        w = z;
                        break;
                    }
                }
            }
            if (h && !x) {
                if (r != null) {
                    w = r;
                    x = true;
                }
            }
        }
        else {
            w = r;
        }
        if (w != null) {
            var ab = w.at({ $type: Point_$type, x: l, y: m }, g);
            if (ab != null) {
                f = ab;
            }
            return {
                ret: w,
                p5: f
            };
        }
        return {
            ret: null,
            p5: f
        };
    };
    SeriesViewerInteractionManager.prototype.f$f = function (a, b) {
        if (PointUtil.equals(b, null)) {
            return false;
        }
        var c = b.x;
        var d = b.y;
        if (c >= a.pv.left && d >= a.pv.top && c <= a.pv.left + a.pv.width && d <= a.pv.top + a.pv.height) {
            var e = a.b8;
            if (e != null && e.viewShouldInteract(b)) {
                return false;
            }
            return true;
        }
        return false;
    };
    SeriesViewerInteractionManager.prototype.c = function (a) {
        if (a != null) {
            return a.be();
        }
        else {
            return null;
        }
    };
    SeriesViewerInteractionManager.prototype.f$v = function (a, b, c, d, e, f) {
        var _this = this;
        if (!f && a.c7) {
            this.ae(a, false);
        }
        var g = new MouseEventArgs();
        g.position = d;
        if (a.b6 == 2 || a.b6 == 1 || a.ee || (a.b8 != null && a.b8.isPinching)) {
            if (this.d != null) {
                this.d.a4.a$z(this.d, g.position, this.a, g, f);
                this.d = null;
            }
            return;
        }
        var h = null;
        var i = ((function () { var j = _this.f$c(a, b, c, d, !e, h, f); h = j.p5; return j.ret; })());
        this.a = h;
        var j = this.c(i);
        if (i != null) {
            var k = false;
            var l = false;
            if (this.d != i) {
                l = true;
            }
            if (this.d == null || l) {
                k = true;
            }
            if (k) {
                if (l) {
                    if (this.d != null) {
                        j = this.c(this.d);
                        this.d.a4.a$z(this.d, g.position, h, g, f);
                        if (j != null) {
                            j.a4.a$z(j, g.position, h, g, f);
                        }
                    }
                }
                this.d = i;
                i.le(g.position, h, g, f);
                if (j != null) {
                    j.le(g.position, h, g, f);
                }
            }
            else {
                this.d = i;
                i.a4.a$ab(i, g.position, h, g, f);
                if (j != null) {
                    j.a4.a$ab(j, g.position, h, g, f);
                }
            }
        }
        else {
            if (this.d != null) {
                j = this.c(this.d);
                this.d.a4.a$z(this.d, g.position, h, g, f);
                if (j != null) {
                    j.a4.a$z(j, g.position, h, g, f);
                }
                this.d = null;
            }
            for (var m = 0; m < a.series.count; m++) {
                var n = a.series._inner[m];
                if (n.a4.a$b) {
                    j = this.c(n);
                    n.a4.a$z(n, g.position, n.a4.a$p, g, f);
                    if (j != null) {
                        j.a4.a$z(j, g.position, n.a4.a$p, g, f);
                    }
                }
            }
        }
    };
    SeriesViewerInteractionManager.prototype.f$u = function (a, b) {
        if (this.d != null) {
            var c = this.c(this.d);
            var d = new MouseEventArgs();
            d.position = b;
            this.d.a4.a$z(this.d, d.position, null, d, false);
            if (c != null) {
                c.a4.a$z(c, d.position, null, d, false);
            }
            this.d = null;
        }
        a.kp(b, a.b6 != 0 || a.d8);
    };
    SeriesViewerInteractionManager.prototype.f$t = function (a, b, c) {
        if (this.d != null) {
            var d = new MouseButtonEventArgs();
            d.position = c;
            if (b.ai) {
                this.d.a4.a$ac(this.d, d.position, this.a, d);
            }
            else {
                this.d.a4.a$w(this.d, d.position, this.a, d);
            }
        }
    };
    SeriesViewerInteractionManager.prototype.f$w = function (a, b, c) {
        var d;
        var e = (this.d != null) ? this.d : ((function () { var f = a.cf.f(c, false, d, false); d = f.p2; return f.ret; })());
        if (e != null) {
            var f = new MouseButtonEventArgs();
            f.position = c;
            if (b.ai) {
                e.a4.a$ad(e, f.position, this.a, f);
            }
            else {
                e.a4.a$aa(e, f.position, this.a, f);
            }
        }
    };
    SeriesViewerInteractionManager.prototype.f$s = function (a, b, c) {
        if (!c && a.ea) {
            this.ae(a, false);
        }
        if (c && !a.ea) {
            this.ae(a, true);
        }
        a.j8(b, c);
    };
    SeriesViewerInteractionManager.prototype.ae = function (a, b) {
        if (a != null) {
            if (!this.i) {
                a.c7 = b;
            }
        }
    };
    SeriesViewerInteractionManager.prototype.f$y = function (a, b) {
        this.g = true;
    };
    Object.defineProperty(SeriesViewerInteractionManager.prototype, "i", {
        get: function () {
            return this.g;
        },
        enumerable: false,
        configurable: true
    });
    SeriesViewerInteractionManager.$t = markType(SeriesViewerInteractionManager, 'SeriesViewerInteractionManager', Base.$, [ISeriesViewerInteractionManager_$type]);
    return SeriesViewerInteractionManager;
}(Base));
export { SeriesViewerInteractionManager };
//# sourceMappingURL=SeriesViewerInteractionManager.js.map
