/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, typeCast, Point_$type, markType } from "igniteui-react-core";
import { DataTemplate } from "igniteui-react-core";
import { Series } from "./Series";
import { RenderingContext } from "igniteui-react-core";
import { DataTemplateRenderInfo } from "igniteui-react-core";
import { CanvasViewRenderer } from "igniteui-react-core";
import { Defaults } from "./Defaults";
import { PathFigure } from "igniteui-react-core";
import { PathGeometry } from "igniteui-react-core";
import { Path } from "igniteui-react-core";
import { DeviceUtils } from "igniteui-react-core";
import { LineSegment } from "igniteui-react-core";
import { Line } from "igniteui-react-core";
import { EllipseGeometry } from "igniteui-react-core";
import { DataTemplateMeasureInfo } from "igniteui-react-core";
import { BrushUtil } from "igniteui-react-core";
import { LegendItemHelper } from "igniteui-react-core";
/**
 * @hidden
 */
var LegendTemplates = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(LegendTemplates, _super);
    function LegendTemplates() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    LegendTemplates.af = function (a) {
        var b = a.am();
        switch (b) {
            case 3: return LegendTemplates.y;
            case 4: return LegendTemplates.aa;
            case 0: return LegendTemplates.z;
            case 8: return LegendTemplates.ae;
            case 9: return LegendTemplates.ac;
            case 5: return LegendTemplates.ah;
            case 1:
            case 2: return LegendTemplates.ad;
            case 6:
            case 7: return LegendTemplates.ab;
        }
        return LegendTemplates.ah;
    };
    LegendTemplates.a = function (a) {
        return new RenderingContext(new CanvasViewRenderer(), a.context);
    };
    LegendTemplates.v = function (a) {
        var b = typeCast(Series.$, a.series);
        if (b == null || b.a7 == 0) {
            a.thickness = Defaults.v;
        }
        else {
            a.thickness = b.fl;
        }
        if (b == null) {
            a.actualItemBrush = a.itemBrush;
        }
        else {
            a.actualItemBrush = b.og;
        }
        if (b == null) {
            a.outline = a.actualItemBrush;
        }
        else {
            a.outline = b.oh;
        }
    };
    LegendTemplates.b = function (a, b) {
        return a;
    };
    LegendTemplates.c = function (a, b) {
        return a;
    };
    LegendTemplates.u = function (a, b, c, d, e, f, g, h) {
        var i = DeviceUtils.g(Defaults.w - 2);
        var j = DeviceUtils.g(Defaults.u - 2);
        e = e + 1;
        f = f + 1;
        var k = LegendTemplates.c(f, j);
        var l = LegendTemplates.c(h, j);
        var m = LegendTemplates.b(e, i);
        var n = LegendTemplates.b(g, i);
        var o = ((function () {
            var $ret = new PathFigure();
            $ret.isClosed = true;
            $ret.isFilled = true;
            return $ret;
        })());
        o._startPoint = { $type: Point_$type, x: m, y: l };
        o._segments.add(new LineSegment(0, { $type: Point_$type, x: m, y: l }));
        o._segments.add(new LineSegment(0, { $type: Point_$type, x: n, y: l }));
        o._segments.add(new LineSegment(0, { $type: Point_$type, x: n, y: k }));
        o._segments.add(new LineSegment(0, { $type: Point_$type, x: m, y: k }));
        var p = new PathGeometry();
        p.c.add(o);
        var q = new Path();
        q.ak = p;
        q.ac = b;
        q._stroke = c;
        q._fill = d;
        var r = LegendTemplates.a(a);
        r.s(q);
    };
    LegendTemplates.s = function (a) {
        var b = a.data;
        var c = b.series;
        LegendTemplates.v(b);
        var d = DeviceUtils.g(Defaults.w);
        var e = DeviceUtils.g(Defaults.u);
        var f = new Line();
        f.ak = 0;
        f.am = e / 2;
        f.al = d;
        f.an = e / 2;
        f._stroke = b.actualItemBrush;
        if (c.a7 == 0) {
            f.ac = Defaults.v;
        }
        else {
            f.ac = c.fl;
        }
        var g = LegendTemplates.a(a);
        g.r(f);
    };
    LegendTemplates.r = function (a, b, c) {
        var d = a.data;
        LegendTemplates.v(d);
        var e = DeviceUtils.g(Defaults.w);
        var f = DeviceUtils.g(Defaults.u);
        var g = e / 2;
        var h = f / 2;
        var i = new EllipseGeometry();
        i.e = { $type: Point_$type, x: LegendTemplates.b(g, e), y: LegendTemplates.c(h, f) };
        i.c = g - 1;
        i.d = h - 1;
        var j = new Path();
        j.ak = i;
        j.ac = d.thickness;
        j._stroke = d.outline;
        j._fill = d.actualItemBrush;
        var k = LegendTemplates.a(a);
        k.s(j);
    };
    LegendTemplates.t = function (a, b) {
        if (b === void 0) {
            b = 0;
        }
        var c = a.data;
        var d = DeviceUtils.g(Defaults.w - b);
        var e = DeviceUtils.g(Defaults.u - b);
        var f = new DataTemplateMeasureInfo();
        f.passInfo = a.passInfo;
        f.width = d;
        f.height = e;
        f.data = a.data;
        f.context = a.context;
        f.renderContext = a.renderContext;
        var g = c.actualItemBrush;
        var h = c.itemBrush;
        var i = c.series;
        var j = i.mv();
        c.actualItemBrush = i.om();
        c.outline = i.on();
        if (i.a7 == 1) {
            c.thickness = i.ft();
        }
        else {
            c.thickness = Defaults.ab;
        }
        if (j != null && j.measure != null && j.render != null) {
            var k = new DataTemplateRenderInfo();
            k.passInfo = a.passInfo;
            k.availableWidth = f.width;
            k.availableHeight = f.height;
            k.xPosition = (a.availableWidth / 2);
            k.yPosition = (a.availableHeight / 2);
            k.data = a.data;
            k.context = a.context;
            k.renderContext = a.renderContext;
            j.render(k);
        }
        c.itemBrush = h;
        c.actualItemBrush = g;
    };
    LegendTemplates.j = function (a) {
        var b = a.data;
        LegendTemplates.v(b);
        LegendTemplates.r(a, Defaults.w, Defaults.u);
    };
    LegendTemplates.n = function (a) {
        var b = a.data;
        var c = b.series;
        LegendTemplates.s(a);
        if (c.a7 == 1) {
            LegendTemplates.t(a, Defaults.t);
        }
    };
    LegendTemplates.o = function (a) {
        LegendTemplates.t(a, 2);
    };
    LegendTemplates.q = function (a) {
        var b = a.data;
        LegendTemplates.v(b);
        LegendTemplates.u(a, b.thickness, b.outline, b.actualItemBrush, 0, 0, Defaults.w, Defaults.u);
    };
    LegendTemplates.p = function (a) {
        var b = a.data;
        var c = b.series;
        LegendTemplates.v(b);
        if (c.a7 == 0) {
            var d = Defaults.v;
            var e = b.actualItemBrush;
            var f = c.oh;
            var g = Defaults.w;
            var h = Defaults.u;
            LegendTemplates.u(a, d, f, e, 0, 0, g, h);
        }
        else {
            var i = Defaults.v;
            var j = b.actualItemBrush;
            var k = c.op();
            var l = Defaults.w / 2;
            var m = Defaults.w;
            var n = Defaults.u;
            LegendTemplates.u(a, i, j, j, 0, 0, l, n);
            LegendTemplates.u(a, i, k, k, l, 0, m, n);
        }
    };
    LegendTemplates.i = function (a) {
        var b = a.data;
        LegendTemplates.v(b);
        var c = 0;
        var d = Defaults.w;
        var e = (Defaults.u * 0.25);
        var f = (Defaults.u * 0.75);
        LegendTemplates.u(a, b.thickness, b.outline, b.actualItemBrush, c, e, d, f);
    };
    LegendTemplates.l = function (a) {
        var b = a.data;
        LegendTemplates.v(b);
        var c = (Defaults.w * 0.25);
        var d = (Defaults.w * 0.75);
        var e = Defaults.u;
        var f = 0;
        LegendTemplates.u(a, b.thickness, b.outline, b.actualItemBrush, c, f, d, e);
    };
    LegendTemplates.m = function (a) {
        var b = a.data;
        var c = BrushUtil.g(0, 0, 0, 0);
        var d = BrushUtil.g(0, 0, 0, 0);
        LegendTemplates.u(a, Defaults.v, c, d, 0, 0, Defaults.w, Defaults.u);
    };
    LegendTemplates.k = function (a) {
    };
    LegendTemplates.g = function (a) {
        var b = a.data;
        var c = b.series;
        var d = c.legendItemBadgeTemplate;
        if (d == null) {
            d = LegendTemplates.af(c);
        }
        var e = c.hp;
        if (e == null) {
            e = "Series Title";
        }
        LegendItemHelper.d(a.context, a.xPosition, a.yPosition, a.availableWidth, a.availableHeight, a.data, e.toString(), d, a.passInfo, c.a0 != null && c.a0.isFinancial, c.fs, c.gg);
    };
    LegendTemplates.resolveLegendItemTemplate = function (a) {
        switch (a) {
            case 0: return LegendTemplates.w;
            case 1: return LegendTemplates.x;
        }
        return LegendTemplates.w;
    };
    LegendTemplates.e = function (a) {
        var b = a.data;
        var c = b.series;
        var d = c.legendItemBadgeTemplate;
        if (d == null) {
            d = LegendTemplates.af(c);
        }
        var e = b.itemLabel;
        if (e == null) {
            e = "Series Item";
        }
        LegendItemHelper.c(a.context, a.xPosition, a.yPosition, a.availableWidth, a.availableHeight, a.data, e.toString(), d, a.passInfo);
    };
    LegendTemplates.f = function (a) {
    };
    LegendTemplates.d = function (a) {
    };
    LegendTemplates.h = function (a) {
    };
    LegendTemplates.$t = markType(LegendTemplates, 'LegendTemplates');
    LegendTemplates.z = ((function () {
        var $ret = new DataTemplate();
        $ret.measure = LegendTemplates.f;
        $ret.render = LegendTemplates.j;
        return $ret;
    })());
    LegendTemplates.ae = ((function () {
        var $ret = new DataTemplate();
        $ret.measure = LegendTemplates.f;
        $ret.render = LegendTemplates.o;
        return $ret;
    })());
    LegendTemplates.ad = ((function () {
        var $ret = new DataTemplate();
        $ret.measure = LegendTemplates.f;
        $ret.render = LegendTemplates.n;
        return $ret;
    })());
    LegendTemplates.ah = ((function () {
        var $ret = new DataTemplate();
        $ret.measure = LegendTemplates.f;
        $ret.render = LegendTemplates.q;
        return $ret;
    })());
    LegendTemplates.ab = ((function () {
        var $ret = new DataTemplate();
        $ret.measure = LegendTemplates.f;
        $ret.render = LegendTemplates.p;
        return $ret;
    })());
    LegendTemplates.y = ((function () {
        var $ret = new DataTemplate();
        $ret.measure = LegendTemplates.f;
        $ret.render = LegendTemplates.i;
        return $ret;
    })());
    LegendTemplates.aa = ((function () {
        var $ret = new DataTemplate();
        $ret.measure = LegendTemplates.f;
        $ret.render = LegendTemplates.l;
        return $ret;
    })());
    LegendTemplates.ac = ((function () {
        var $ret = new DataTemplate();
        $ret.measure = LegendTemplates.f;
        $ret.render = LegendTemplates.m;
        return $ret;
    })());
    LegendTemplates.w = ((function () {
        var $ret = new DataTemplate();
        $ret.measure = LegendTemplates.f;
        $ret.render = LegendTemplates.g;
        return $ret;
    })());
    LegendTemplates.x = ((function () {
        var $ret = new DataTemplate();
        $ret.measure = LegendTemplates.d;
        $ret.render = LegendTemplates.e;
        return $ret;
    })());
    return LegendTemplates;
}(Base));
export { LegendTemplates };
//# sourceMappingURL=LegendTemplates.js.map
