/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { TimeAxisBase } from "./TimeAxisBase";
import { TimeAxisDisplayType_$type } from "./TimeAxisDisplayType";
import { DependencyProperty } from "igniteui-react-core";
import { Base, enumGetBox, Number_$type, typeGetValue, typeCast, markType, markDep } from "igniteui-react-core";
import { Rect } from "igniteui-react-core";
import { ScalerParams } from "./ScalerParams";
import { NumericYAxis } from "./NumericYAxis";
import { LinearNumericSnapper } from "./LinearNumericSnapper";
import { LabelPosition } from "./LabelPosition";
import { PropertyMetadata } from "igniteui-react-core";
import { truncate, intDivide, isNaN_, isInfinity } from "igniteui-react-core";
import { dateMinValue, dateFromTicks } from "igniteui-react-core";
import { timeSpanFromMilliseconds } from "igniteui-react-core";
import { CategoryAxisBaseView } from "./CategoryAxisBaseView";
import { AxisDefaults } from "./AxisDefaults";
/**
 * @hidden
 */
var CategoryDateTimeXAxis = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(CategoryDateTimeXAxis, _super);
    function CategoryDateTimeXAxis() {
        var _this = _super.call(this) || this;
        _this.m0 = 0;
        _this.m1 = 0;
        _this.ab = CategoryDateTimeXAxis.$;
        _this.actualMinimumValue = (new Date());
        _this.actualMaximumValue = (new Date());
        return _this;
    }
    CategoryDateTimeXAxis.prototype.get_b8 = function () {
        return this.mv == 0;
    };
    CategoryDateTimeXAxis.prototype.a3 = function () {
        return new CategoryDateTimeXAxisView(this);
    };
    CategoryDateTimeXAxis.prototype.ha = function (a) {
        _super.prototype.ha.call(this, a);
        this.mu = a;
    };
    Object.defineProperty(CategoryDateTimeXAxis.prototype, "m2", {
        get: function () {
            return this.m0;
        },
        set: function (a) {
            if (this.m2 != a) {
                var b = this.m0;
                this.m0 = a;
                this.hk("ActualInterval", b, this.m2);
            }
        },
        enumerable: false,
        configurable: true
    });
    CategoryDateTimeXAxis.prototype.ej = function () {
        return this.m2;
    };
    Object.defineProperty(CategoryDateTimeXAxis.prototype, "m6", {
        get: function () {
            return typeGetValue(this.c(CategoryDateTimeXAxis.nh));
        },
        set: function (a) {
            this.h(CategoryDateTimeXAxis.nh, a);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryDateTimeXAxis.prototype, "m3", {
        get: function () {
            return this.m1;
        },
        set: function (a) {
            if (this.m3 != a) {
                var b = this.m1;
                this.m1 = a;
                this.hk("ActualMinorInterval", b, this.m3);
            }
        },
        enumerable: false,
        configurable: true
    });
    CategoryDateTimeXAxis.prototype.c1 = function (a, b, c) {
        var d = _super.prototype.c1.call(this, a, b, c);
        if (!d) {
            return false;
        }
        return +(this.actualMinimumValue) != +(this.actualMaximumValue);
    };
    CategoryDateTimeXAxis.prototype.dv = function () {
        return this.m2;
    };
    CategoryDateTimeXAxis.prototype.hr = function (a) {
        _super.prototype.hr.call(this, a);
        var b = this.bh != null ? this.bh.pg : Rect.empty;
        var c = !b.isEmpty ? this.js : Rect.empty;
        var d = this.jn();
        var e = this.jm();
        var f = new ScalerParams(0, b, c, this.cc, d);
        if (this.lo == null && !this.lu() && !this.lv()) {
            return;
        }
        if (!b.isEmpty && !c.isEmpty && (this.mv != 1 || this.lo != null)) {
            var g = c.bottom;
            var h = g - c.top;
            if (this.ai != null) {
                var i = typeCast(NumericYAxis.$, this.ai);
                if (i != null) {
                    var j = this.hv(g, h, b, c, d, c.top, c.bottom);
                    g = j.p0;
                    h = j.p1;
                }
            }
            if (isNaN_(g)) {
                g = 0;
            }
            this.g8(this.a4.ay(), g, c, this.a4.e(), true);
            this.av.bc = h;
            var k = this.a4.a1();
            var l = this.a4.f();
            var m = this.a4.az();
            var n = this.a4.a0();
            var o = this.a4.g();
            if (this.mv == 1) {
                var p = this.i$e(b, c, d, e);
                var q = this.i$g(b, c, d, e);
                if (p < 0 || q < 0) {
                    return;
                }
                var r = NaN;
                for (var s = p; s <= q; s++) {
                    var t = this.lx == null ? s : this.lx._inner[s];
                    var u = this.d8(this.lo.item(t).getTime(), f);
                    if (u == r) {
                        continue;
                    }
                    r = u;
                    if (this.categoryMode == 2) {
                        u += this.cc ? -this.getGroupCenter(s, b, c, d) : this.getGroupCenter(s, b, c, d);
                    }
                    if (u < e.left || u > e.right) {
                        continue;
                    }
                    this.h1(m, u, c, l, false);
                    this.kd.add(u);
                    if (this.j6 != null && s < this.j6.count) {
                        var v = this.j6.item(t);
                        var w = _super.prototype.fi.call(this, v);
                        if (!isNaN_(u) && !isInfinity(u) && w != null) {
                            if ((typeof w === 'string') && Base.equalsStatic(w, "")) {
                            }
                            else {
                                this.c5.add1(w);
                                this.c6.add(new LabelPosition(u));
                            }
                        }
                    }
                }
            }
            else {
                var x = this.eb(e.left, f);
                var y = this.eb(e.right, f);
                var z = Math.min(x, y);
                var aa = Math.max(x, y);
                var ab = new LinearNumericSnapper(0, z, aa, e.width, this.el());
                var ac = this.ls ? this.mz() : ab.g;
                this.nd(truncate(ac));
                var ad = truncate(Math.floor((z - this.actualMinimumValue.getTime()) / ac));
                var ae = truncate(Math.ceil((aa - this.actualMinimumValue.getTime()) / ac));
                var af = 0;
                if (this.categoryMode == 2) {
                    af = this.getGroupCenter(0, b, c, d);
                    af = this.cc ? -af : af;
                }
                var ag = truncate(Math.ceil(e.right));
                var ah = truncate(Math.floor(e.left));
                var ai = this.d8(this.actualMinimumValue.getTime() + ad * ac, f) + af;
                for (var aj = ad; aj <= ae; aj++) {
                    var ak = this.d8(this.actualMinimumValue.getTime() + (aj + 1) * ac, f) + af;
                    if (!isNaN_(ai) && !isInfinity(ai)) {
                        var al = truncate(Math.round(ai));
                        if (al <= ag) {
                            if (aj % 2 == 0) {
                                this.h2(k, ai, ak, c);
                            }
                            this.h1(m, ai, c, l, false);
                            this.kd.add(ai);
                            if (this.cs) {
                                var am = this.m4();
                                if (am > 0 && am < ac) {
                                    if (ac / am < 20) {
                                        var an = ai;
                                        var ao = Math.abs(this.d8(this.actualMinimumValue.getTime() + am, f) - this.d8(this.actualMinimumValue.getTime(), f));
                                        while (an + ao < ak) {
                                            if (Math.abs(an + ao - ak) < 0.0001) {
                                                break;
                                            }
                                            an += ao;
                                            if (an > 0) {
                                                this.h1(n, an, c, o, false);
                                            }
                                        }
                                        this.ne(am);
                                    }
                                }
                                else {
                                    for (var ap = 1; ap < ab.i; ++ap) {
                                        var aq = this.d8(this.actualMinimumValue.getTime() + aj * ac + (ap * ac) / ab.i, f) + af;
                                        this.h1(n, aq, c, o, false);
                                    }
                                    if (ab.i > 0) {
                                        this.ne(truncate((ac / ab.i)));
                                    }
                                }
                            }
                        }
                        if (al >= ah && al <= ag) {
                            var ar = this.actualMinimumValue.getTime() + aj * ac;
                            var ticks_ = truncate(Math.floor(ar));
                            var as = (new Date(ticks_));
                            var at = this.fi(as);
                            if (at != null) {
                                this.c5.add1(at);
                                this.c6.add(new LabelPosition(ai));
                            }
                        }
                    }
                    ai = ak;
                }
            }
            if ((this.ay == null || this.ay.visibility == 0) && this.ai != null) {
                if (this.ay != null && (this.ay.location == 4 || this.ay.location == 5)) {
                    this.bh.jq();
                }
            }
            this.av.a5 = this.c5;
            this.av.a6 = this.c6;
            this.ld();
        }
    };
    CategoryDateTimeXAxis.prototype.mz = function () {
        return this.m2;
    };
    CategoryDateTimeXAxis.prototype.m4 = function () {
        return this.m6;
    };
    CategoryDateTimeXAxis.prototype.nd = function (a) {
        this.m2 = a;
    };
    CategoryDateTimeXAxis.prototype.ne = function (a) {
        this.m3 = a;
    };
    CategoryDateTimeXAxis.prototype.mx = function () {
        return this.m5 != 0;
    };
    CategoryDateTimeXAxis.prototype.mw = function () {
        return this.m2 == 0;
    };
    CategoryDateTimeXAxis.prototype.my = function (a) {
        return this.lo == null ? dateMinValue() : this.lo.item(a);
    };
    CategoryDateTimeXAxis.prototype.nc = function (a, b) {
        if (a > b || this.j6 == null || this.j6.count == 0) {
            return;
        }
        var c = (a.getTime() - this.actualMinimumValue.getTime()) / (this.actualMaximumValue.getTime() - this.actualMinimumValue.getTime());
        var d = (b.getTime() - this.actualMinimumValue.getTime()) / (this.actualMaximumValue.getTime() - this.actualMinimumValue.getTime());
        this.bh.pw = new Rect(0, c, this.bh.pw.y, d - c, this.bh.pw.height);
    };
    CategoryDateTimeXAxis.prototype.he = function (a, b, c, d) {
        _super.prototype.he.call(this, a, b, c, d);
        switch (b) {
            case CategoryDateTimeXAxis.$$p[0]:
                this.ck = true;
                this.av.ak = this.mv == 1;
                this.hq(false);
                break;
            case CategoryDateTimeXAxis.$$p[1]:
                this.ck = true;
                this.hq(false);
                break;
        }
    };
    CategoryDateTimeXAxis.prototype.mk = function () {
        _super.prototype.mk.call(this);
        if (this.mx()) {
            this.m2 = this.m5;
            var a = this.bh != null ? this.bh.pg : Rect.empty;
            var b = !a.isEmpty ? this.js : Rect.empty;
            var c = Math.abs(this.actualMaximumValue.getTime() - this.actualMinimumValue.getTime());
            this.ls = this.mw() || (this.mv == 1) || (1 * c / this.mz() > (b.width / a.width)) ? false : true;
        }
        else {
            this.ls = false;
        }
    };
    CategoryDateTimeXAxis.prototype.mi = function (a, b) {
        var c = b.getTime() - a.getTime();
        var timeOffset_ = truncate(Math.round(intDivide(c, this.kq) / 2));
        return timeOffset_ == 0 ? timeSpanFromMilliseconds(1) : timeSpanFromMilliseconds(timeOffset_);
    };
    CategoryDateTimeXAxis.prototype.get_b7 = function () {
        return true;
    };
    Object.defineProperty(CategoryDateTimeXAxis.prototype, "isVertical", {
        get: function () {
            return this.cj;
        },
        enumerable: false,
        configurable: true
    });
    CategoryDateTimeXAxis.prototype.j$c = function (a, b) {
        return this.eb.apply(this, arguments);
    };
    CategoryDateTimeXAxis.prototype.j$b = function (a, b) {
        return this.d8.apply(this, arguments);
    };
    CategoryDateTimeXAxis.prototype.j$d = function (a, b, c, d, e) {
        this.g4.apply(this, arguments);
    };
    CategoryDateTimeXAxis.prototype.j$e = function (a, b, c, d) {
        this.g5.apply(this, arguments);
    };
    CategoryDateTimeXAxis.prototype.j$f = function (a, b, c, d) {
        this.g6.apply(this, arguments);
    };
    Object.defineProperty(CategoryDateTimeXAxis.prototype, "j$a", {
        get: function () {
            return this.cc;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryDateTimeXAxis.prototype, "i$a", {
        get: function () {
            return this.b9;
        },
        enumerable: false,
        configurable: true
    });
    CategoryDateTimeXAxis.$t = markType(CategoryDateTimeXAxis, 'CategoryDateTimeXAxis', TimeAxisBase.$);
    CategoryDateTimeXAxis.nh = DependencyProperty.i("MinorInterval", Number_$type, CategoryDateTimeXAxis.$, new PropertyMetadata(2, 0, function (a, b) {
        (typeCast(CategoryDateTimeXAxis.$, a)).hk("MinorInterval", b.oldValue, b.newValue);
        (typeCast(CategoryDateTimeXAxis.$, a)).hq(false);
    }));
    CategoryDateTimeXAxis.$$p = markDep(DependencyProperty, PropertyMetadata, CategoryDateTimeXAxis, 'hk', ['DisplayType:mv:nf', [TimeAxisDisplayType_$type, enumGetBox(TimeAxisDisplayType_$type, 0)], 'Interval:m5:ng', [1, 0]]);
    return CategoryDateTimeXAxis;
}(TimeAxisBase));
export { CategoryDateTimeXAxis };
/**
 * @hidden
 */
var CategoryDateTimeXAxisView = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(CategoryDateTimeXAxisView, _super);
    function CategoryDateTimeXAxisView(a) {
        var _this = _super.call(this, a) || this;
        _this.bg = null;
        _this.bg = a;
        return _this;
    }
    CategoryDateTimeXAxisView.prototype.ag = function () {
        _super.prototype.ag.call(this);
        this.a.e0 = AxisDefaults.f;
    };
    CategoryDateTimeXAxisView.prototype.o = function (a) {
        var b = this.n(dateFromTicks(truncate(a)));
        return b;
    };
    CategoryDateTimeXAxisView.$t = markType(CategoryDateTimeXAxisView, 'CategoryDateTimeXAxisView', CategoryAxisBaseView.$);
    return CategoryDateTimeXAxisView;
}(CategoryAxisBaseView));
export { CategoryDateTimeXAxisView };
//# sourceMappingURL=CategoryDateTimeXAxis_combined.js.map
