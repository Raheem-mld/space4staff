/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { RangeCategorySeries } from "./RangeCategorySeries";
import { CategoryAxisBase } from "./CategoryAxisBase";
import { DependencyProperty } from "igniteui-react-core";
import { NumericYAxis } from "./NumericYAxis";
import { Axis } from "./Axis";
import { Point_$type, runOn, typeCast, markType, markDep } from "igniteui-react-core";
import { RangeValueList } from "./RangeValueList";
import { ScalerParams } from "./ScalerParams";
import { CategoryXAxis } from "./CategoryXAxis";
import { PropertyMetadata } from "igniteui-react-core";
/**
 * @hidden
 */
var HorizontalRangeCategorySeries = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(HorizontalRangeCategorySeries, _super);
    function HorizontalRangeCategorySeries() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    HorizontalRangeCategorySeries.prototype.fetchXAxis = function () {
        return this.xAxis;
    };
    HorizontalRangeCategorySeries.prototype.fetchYAxis = function () {
        return this.yAxis;
    };
    HorizontalRangeCategorySeries.prototype.ke = function () {
        _super.prototype.ke.call(this);
        this.xAxis = null;
        this.yAxis = null;
    };
    HorizontalRangeCategorySeries.prototype.ah = function (a) {
        var b = this.aj(this.q2(), this.q3.f, this.r3(this.bx), this.r4(this.bx), this.o5(a), true);
        if (b == null) {
            return null;
        }
        var c = b[0];
        var d = b[1];
        var e = new Array(1);
        var f = new Array(2);
        f[0] = { $type: Point_$type, x: c[0], y: c[2] };
        f[1] = { $type: Point_$type, x: d[0], y: d[2] };
        e[0] = f;
        return e;
    };
    HorizontalRangeCategorySeries.prototype.ai = function (a) {
        var b = this.aj(this.q2(), this.q3.f, this.r3(this.bx), this.r4(this.bx), this.o5(a), true);
        if (b == null) {
            return null;
        }
        var c = b[0];
        var d = b[1];
        var e = new Array(1);
        var f = new Array(2);
        f[0] = { $type: Point_$type, x: c[0], y: c[1] };
        f[1] = { $type: Point_$type, x: d[0], y: d[1] };
        e[0] = f;
        return e;
    };
    HorizontalRangeCategorySeries.prototype.get_d5 = function () {
        return true;
    };
    HorizontalRangeCategorySeries.prototype.bo = function () {
        if (this.bp == 0) {
            return 1;
        }
        else {
            return _super.prototype.bo.call(this);
        }
    };
    HorizontalRangeCategorySeries.prototype.getOffsetValue = function () {
        return this.RangeFramePreparer.r(this.xAxis, this.bx.bv, this.bx.bu, this.getEffectiveViewport1(this.bx));
    };
    HorizontalRangeCategorySeries.prototype.getCategoryWidth = function () {
        return this.xAxis.getCategorySize(this.bx.bv, this.bx.bu, this.getEffectiveViewport1(this.bx));
    };
    HorizontalRangeCategorySeries.prototype.g4 = function (a, b) {
        return this.g5(a, b, this.xAxis, runOn(this, this.r1), new RangeValueList(this.highColumn, this.lowColumn));
    };
    HorizontalRangeCategorySeries.prototype.g6 = function (a, b) {
        return this.g7(a, b, this.xAxis, runOn(this, this.r1), new RangeValueList(this.highColumn, this.lowColumn));
    };
    HorizontalRangeCategorySeries.prototype.fu = function (a, b, c, d, e) {
        if (c == null) {
            return Number.POSITIVE_INFINITY;
        }
        var f = this.xAxis.kq;
        return this.fv(a, b, this.xAxis, d, e, f, runOn(this, this.r1));
    };
    HorizontalRangeCategorySeries.prototype.f8 = function (a, b, c) {
        if (this.ca == null) {
            return NaN;
        }
        var d = this.getEffectiveViewport1(this.bx);
        var e = new ScalerParams(0, this.ca.pg, this.bx.bu, this.xAxis.cc, d);
        var f = this.RangeFramePreparer.r(this.xAxis, this.ca.pg, this.bx.bu, d);
        return this.ga(new RangeValueList(this.highColumn, this.lowColumn), a, this.xAxis, e, f, runOn(this, this.r1), b, c);
    };
    HorizontalRangeCategorySeries.prototype.f6 = function (a, b, c) {
        if (this.ca == null) {
            return NaN;
        }
        var d = this.getEffectiveViewport1(this.bx);
        var e = new ScalerParams(0, this.ca.pg, this.bx.bu, this.xAxis.cc, d);
        var f = this.RangeFramePreparer.r(this.xAxis, this.ca.pg, this.bx.bu, d);
        return this.ga(this.lowColumn, a, this.xAxis, e, f, runOn(this, this.r1), b, c);
    };
    HorizontalRangeCategorySeries.prototype.f4 = function (a, b, c) {
        if (this.ca == null) {
            return NaN;
        }
        var d = this.getEffectiveViewport1(this.bx);
        var e = new ScalerParams(0, this.ca.pg, this.bx.bu, this.xAxis.cc, d);
        var f = this.RangeFramePreparer.r(this.xAxis, this.ca.pg, this.bx.bu, d);
        return this.ga(this.highColumn, a, this.xAxis, e, f, runOn(this, this.r1), b, c);
    };
    HorizontalRangeCategorySeries.prototype.oy = function (a, b, c) {
        var _this = this;
        return this.o4(a, b, c, this.RangeFramePreparer.r(this.xAxis, this.bx.bv, this.bx.bu, this.getEffectiveViewport1(this.bx)), this.yAxis, this.xAxis, runOn(this, this.f4), function (d, e) { return _this.g7(d, e, _this.xAxis, runOn(_this, _this.r1), _this.highColumn); }, function (d, e) { return _this.g5(d, e, _this.xAxis, runOn(_this, _this.r1), _this.highColumn); });
    };
    HorizontalRangeCategorySeries.prototype.o0 = function (a, b, c) {
        var _this = this;
        return this.o4(a, b, c, this.RangeFramePreparer.r(this.xAxis, this.bx.bv, this.bx.bu, this.getEffectiveViewport1(this.bx)), this.yAxis, this.xAxis, runOn(this, this.f6), function (d, e) { return _this.g7(d, e, _this.xAxis, runOn(_this, _this.r1), _this.lowColumn); }, function (d, e) { return _this.g5(d, e, _this.xAxis, runOn(_this, _this.r1), _this.lowColumn); });
    };
    HorizontalRangeCategorySeries.prototype.o2 = function (a, b, c) {
        return this.o4(a, b, c, this.RangeFramePreparer.r(this.xAxis, this.bx.bv, this.bx.bu, this.getEffectiveViewport1(this.bx)), this.yAxis, this.xAxis, null, null, null);
    };
    HorizontalRangeCategorySeries.prototype.rx = function () {
        return this.yAxis != null && this.yAxis.cv();
    };
    HorizontalRangeCategorySeries.prototype.lm = function (a, b, c, d) {
        _super.prototype.lm.call(this, a, b, c, d);
        switch (b) {
            case HorizontalRangeCategorySeries.$$p[0]:
                this.kl(typeCast(Axis.$, c));
                this.lr(typeCast(Axis.$, d));
                this.rc.cr.g(this.gh);
                this.l0(false);
                this.k7();
                break;
            case HorizontalRangeCategorySeries.$$p[1]:
                this.kl(typeCast(Axis.$, c));
                this.lr(typeCast(Axis.$, d));
                this.rc.cr.g(this.gh);
                this.rx();
                this.l0(false);
                this.k7();
                break;
        }
    };
    HorizontalRangeCategorySeries.prototype.tb = function (a) {
        if (typeCast(NumericYAxis.$, a) !== null) {
            return true;
        }
        return false;
    };
    HorizontalRangeCategorySeries.prototype.ta = function (a) {
        if (typeCast(CategoryXAxis.$, a) !== null || a.b9) {
            return true;
        }
        return false;
    };
    Object.defineProperty(HorizontalRangeCategorySeries.prototype, "useHighMarkerFidelity", {
        get: function () {
            return this.ry;
        },
        enumerable: false,
        configurable: true
    });
    HorizontalRangeCategorySeries.$t = markType(HorizontalRangeCategorySeries, 'HorizontalRangeCategorySeries', RangeCategorySeries.$);
    HorizontalRangeCategorySeries.$$p = markDep(DependencyProperty, PropertyMetadata, HorizontalRangeCategorySeries, 'raisePropertyChanged', ['XAxis::te', [CategoryAxisBase.$, null], 'YAxis::tf', [NumericYAxis.$, null]]);
    return HorizontalRangeCategorySeries;
}(RangeCategorySeries));
export { HorizontalRangeCategorySeries };
//# sourceMappingURL=HorizontalRangeCategorySeries.js.map
