import { AnnotationLayer } from "./AnnotationLayer";
import { IFastItemColumn$1 } from "igniteui-react-core";
import { Base, Type, Point } from "igniteui-react-core";
import { Series } from "./Series";
import { Brush } from "igniteui-react-core";
import { Thickness } from "igniteui-react-core";
import { CalloutCollisionMode } from "./CalloutCollisionMode";
import { FontInfo } from "igniteui-react-core";
import { Rect } from "igniteui-react-core";
import { CalloutLayerFrame } from "./CalloutLayerFrame";
import { CalloutAnnotationWrapper } from "./CalloutAnnotationWrapper";
import { FastItemsSourceEventAction } from "igniteui-react-core";
import { CalloutLabelUpdatingEventArgs } from "./CalloutLabelUpdatingEventArgs";
import { CalloutSeriesSelectingEventArgs } from "./CalloutSeriesSelectingEventArgs";
import { CalloutStyleUpdatingEventArgs } from "./CalloutStyleUpdatingEventArgs";
import { SeriesView } from "./SeriesView";
import { Frame } from "./Frame";
import { Size } from "igniteui-react-core";
import { CalloutContentUpdatingEventArgs } from "./CalloutContentUpdatingEventArgs";
import { DataContext } from "igniteui-react-core";
import { SeriesHitTestMode } from "./SeriesHitTestMode";
import { HashPool$2 } from "igniteui-react-core";
import { AnnotationLayerView } from "./AnnotationLayerView";
import { RenderingContext } from "igniteui-react-core";
import { TextBlock } from "igniteui-react-core";
import { Visibility } from "igniteui-react-core";
/**
 * @hidden
 */
export declare class CalloutLayer extends AnnotationLayer {
    static $t: Type;
    protected get_c2(): boolean;
    constructor();
    private s9;
    protected kk(a: FastItemsSourceEventAction, b: number, c: number, d: string): void;
    ei(a: boolean): boolean;
    private rl;
    private tl;
    private tm;
    calloutStyleUpdating: (sender: any, args: CalloutStyleUpdatingEventArgs) => void;
    sv: string;
    hk(a: any, b: string): any;
    get q2(): IFastItemColumn$1<any>;
    set q2(a: IFastItemColumn$1<any>);
    private qx;
    s4: string;
    get q3(): IFastItemColumn$1<any>;
    set q3(a: IFastItemColumn$1<any>);
    private qy;
    s7: string;
    get q4(): IFastItemColumn$1<any>;
    set q4(a: IFastItemColumn$1<any>);
    private qz;
    ss: string;
    get q1(): IFastItemColumn$1<any>;
    set q1(a: IFastItemColumn$1<any>);
    private qw;
    rh: boolean;
    sm: string;
    get q0(): IFastItemColumn$1<any>;
    set q0(a: IFastItemColumn$1<any>);
    private qv;
    private rm;
    private rp;
    private tb;
    protected bu(): SeriesView;
    lh(a: SeriesView): void;
    protected qp: CalloutLayerView;
    private rq;
    sx: string;
    qs: Series;
    sj: string;
    rg: boolean;
    rj: boolean;
    ri: boolean;
    r1: number;
    ug: Brush;
    ud: Brush;
    r2: number;
    uf: Brush;
    ue: Brush;
    get uk(): Thickness;
    ru: number;
    rw: number;
    rv: number;
    rt: number;
    qm: CalloutCollisionMode;
    rx: number;
    ry: number;
    s0: string;
    private qt;
    get qu(): FontInfo;
    protected p3(a: Series, b: boolean): void;
    protected p5(a: Frame, b: SeriesView): void;
    private rn;
    private rk;
    private q5;
    private ui;
    protected mn(a: Rect, b: Rect): void;
    protected mm(a: Rect, b: Rect): void;
    private rc;
    private r0;
    private uh;
    get uj(): Rect;
    set uj(a: Rect);
    private ra;
    private th;
    private td;
    private q6;
    private r3;
    private r4;
    private q7;
    private ta;
    private q8;
    private rz;
    private rr;
    private r5;
    protected pq(a: Series): boolean;
    la(): void;
    private rb;
    tg(): void;
    calloutContentUpdating: (sender: any, args: CalloutContentUpdatingEventArgs) => void;
    calloutLabelUpdating: (sender: any, args: CalloutLabelUpdatingEventArgs) => void;
    calloutSeriesSelecting: (sender: any, args: CalloutSeriesSelectingEventArgs) => void;
    private ro;
    private ti;
    private re;
    private rf;
    private rs;
    private rd;
    protected bo(): SeriesHitTestMode;
    at(a: Point, b: boolean): DataContext;
    ep(a: Point, b: boolean): boolean;
    protected tk(a: CalloutLayerFrame, b: boolean): void;
    protected p8(a: Frame, b: SeriesView): void;
    protected eg(): boolean;
    protected lm(a: any, b: string, c: any, d: any): void;
    private tj;
    private q9;
    private te;
    private tc;
    private tf;
    static $$p: string[];
}
/**
 * @hidden
 */
export declare class CalloutLayerView extends AnnotationLayerView {
    static $t: Type;
    constructor(a: CalloutLayer);
    protected b4: CalloutLayer;
    private b9;
    as(): void;
    private b6;
    private cc;
    private ce;
    private cd;
    b8: HashPool$2<CalloutAnnotationWrapper, CalloutView>;
    cm(a: Brush): Brush;
    protected a6(a: RenderingContext, b: boolean): void;
    protected b7(): FontInfo;
    al(a: any): void;
    private ca;
    co(a: TextBlock): Size;
    private cb;
    private b5;
    cn(a: any, b: Thickness): Size;
    cg(a: CalloutView, b: number, c: number): void;
    ch(a: CalloutView, b: CalloutAnnotationWrapper, c: any): void;
    ci(a: Series): Brush;
    cl(): Brush;
    ck(): Brush;
    cj(a: Series): Brush;
    cf(): void;
}
/**
 * @hidden
 */
export declare class CalloutView extends Base {
    static $t: Type;
    constructor(a: CalloutLayerView);
    private a;
    w: Visibility;
    h(a: RenderingContext): void;
    private j;
    private r;
    private o;
    private q;
    get p(): Point;
    set p(a: Point);
    get n(): Brush;
    set n(a: Brush);
    get m(): Brush;
    set m(a: Brush);
    get l(): Brush;
    set l(a: Brush);
    get k(): Brush;
    set k(a: Brush);
    get c(): number;
    set c(a: number);
    private u;
    private t;
    get v(): Thickness;
    set v(a: Thickness);
    get f(): any;
    set f(a: any);
    d: number;
    e: number;
    s(): Size;
    private b;
    i(a: Series, b: CalloutAnnotationWrapper, c: any): void;
    g(a: CalloutLayer, b: FontInfo, c: any): void;
}
