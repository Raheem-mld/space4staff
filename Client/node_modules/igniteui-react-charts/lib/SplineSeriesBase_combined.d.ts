import { HorizontalAnchoredCategorySeries } from "./HorizontalAnchoredCategorySeries";
import { SplineType } from "./SplineType";
import { SeriesView } from "./SeriesView";
import { AxisRange } from "./AxisRange";
import { Axis } from "./Axis";
import { Point, IList$1, Type } from "igniteui-react-core";
import { CategorySeriesView } from "./CategorySeriesView";
import { List$1 } from "igniteui-react-core";
import { Rect } from "igniteui-react-core";
import { CategoryAxisBase } from "./CategoryAxisBase";
import { CollisionAvoider } from "./CollisionAvoider";
import { AnchoredCategorySeriesView } from "./AnchoredCategorySeriesView";
import { CategoryFrame } from "./CategoryFrame";
import { NumericAxisBase } from "./NumericAxisBase";
import { FastItemsSourceEventAction } from "igniteui-react-core";
/**
 * @hidden
 */
export declare abstract class SplineSeriesBase extends HorizontalAnchoredCategorySeries {
    static $t: Type;
    protected bu(): SeriesView;
    lh(a: SeriesView): void;
    ui: SplineSeriesBaseView;
    uk: boolean;
    ap(a: Axis): AxisRange;
    protected get_c8(): boolean;
    uf(a: CategorySeriesView): number[][];
    ug(a: CategorySeriesView): number[][];
    protected uh: number[];
    uv(a: CategoryFrame, b: Rect, c: Rect, d: CategoryAxisBase, e: NumericAxisBase, f: CategorySeriesView): void;
    ul(a: CategoryFrame, b: number[], c: CollisionAvoider, d: number, e: number, f: CategorySeriesView, g: number): boolean;
    aj(a: CategoryAxisBase, b: List$1<number[]>, c: number, d: number, e: Point, f: boolean): number[][];
    si(a: CategoryFrame, b: CategorySeriesView): void;
    uu(a: CategorySeriesView): void;
    private uo;
    f0(a: number, b: IList$1<number>, c: number, d: number, e: number, f: number, g: number, h: boolean): number;
    up(a: CategoryAxisBase, b: Rect, c: Rect, d: Rect): number;
    private un;
    protected get ur(): number;
    protected set ur(a: number);
    private um;
    protected get uq(): number;
    protected set uq(a: number);
    uj: SplineType;
    protected uw(): void;
    protected lm(a: any, b: string, c: any, d: any): void;
    protected kk(a: FastItemsSourceEventAction, b: number, c: number, d: string): void;
    get useHighMarkerFidelity(): boolean;
    static $$p: string[];
}
/**
 * @hidden
 */
export declare class SplineSeriesBaseView extends AnchoredCategorySeriesView {
    static $t: Type;
    protected da: SplineSeriesBase;
    constructor(a: SplineSeriesBase);
    protected af(): void;
}
