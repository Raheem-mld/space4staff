import { AnchoredCategorySeries } from "./AnchoredCategorySeries";
import { NumericXAxis } from "./NumericXAxis";
import { CategoryYAxis } from "./CategoryYAxis";
import { IVerticalAnchoredCategorySeriesInteractionManager } from "./IVerticalAnchoredCategorySeriesInteractionManager";
import { Type, Point } from "igniteui-react-core";
import { CategoryAxisBase } from "./CategoryAxisBase";
import { NumericAxisBase } from "./NumericAxisBase";
import { Axis } from "./Axis";
import { ScalerParams } from "./ScalerParams";
import { SeriesHitTestMode } from "./SeriesHitTestMode";
import { Rect } from "igniteui-react-core";
/**
 * @hidden
 */
export declare abstract class VerticalAnchoredCategorySeries extends AnchoredCategorySeries {
    static $t: Type;
    xAxis: NumericXAxis;
    yAxis: CategoryYAxis;
    ke(): void;
    private tx;
    get ty(): IVerticalAnchoredCategorySeriesInteractionManager;
    protected get_isVertical(): boolean;
    q2(): CategoryAxisBase;
    rn(): NumericAxisBase;
    getOffsetValue(): number;
    getCategoryWidth(): number;
    g4(a: Point, b: boolean): number;
    g6(a: Point, b: boolean): number;
    fu(a: Point, b: number, c: Axis, d: ScalerParams, e: number): number;
    protected bo(): SeriesHitTestMode;
    pd(a: Point): Rect;
    private t6;
    ep(a: Point, b: boolean): boolean;
    f8(a: Point, b: boolean, c: boolean): number;
    o2(a: Point, b: boolean, c: boolean): Point;
    fetchXAxis(): Axis;
    fetchYAxis(): Axis;
    te(a: Axis): void;
    tf(a: Axis): void;
    rx(): boolean;
    qw(a: number, b: number): any[];
    fw(a: Point): number;
    r1(a: Point): number;
    g0(a: Point): number;
    hh(a: Point): any;
    protected lm(a: any, b: string, c: any, d: any): void;
    t1(a: any): boolean;
    t0(a: any): boolean;
    get useHighMarkerFidelity(): boolean;
    static $$p: string[];
}
