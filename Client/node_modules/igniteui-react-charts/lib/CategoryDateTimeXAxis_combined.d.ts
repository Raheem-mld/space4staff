import { TimeAxisBase } from "./TimeAxisBase";
import { TimeAxisDisplayType } from "./TimeAxisDisplayType";
import { DependencyProperty } from "igniteui-react-core";
import { Type, IList$1 } from "igniteui-react-core";
import { AxisView } from "./AxisView";
import { Rect } from "igniteui-react-core";
import { ScalerParams } from "./ScalerParams";
import { CategoryAxisBaseView } from "./CategoryAxisBaseView";
/**
 * @hidden
 */
export declare class CategoryDateTimeXAxis extends TimeAxisBase {
    static $t: Type;
    constructor();
    protected get_b8(): boolean;
    a3(): AxisView;
    ha(a: AxisView): void;
    mu: CategoryDateTimeXAxisView;
    mv: TimeAxisDisplayType;
    m5: number;
    private m0;
    get m2(): number;
    set m2(a: number);
    ej(): number;
    static readonly nh: DependencyProperty;
    get m6(): number;
    set m6(a: number);
    private m1;
    get m3(): number;
    set m3(a: number);
    c1(a: Rect, b: Rect, c: AxisView): boolean;
    dv(): number;
    protected hr(a: boolean): void;
    protected mz(): number;
    private m4;
    private nd;
    private ne;
    private mx;
    private mw;
    private my;
    nc(a: Date, b: Date): void;
    protected he(a: any, b: string, c: any, d: any): void;
    mk(): void;
    protected mi(a: Date, b: Date): number;
    protected get_b7(): boolean;
    get isVertical(): boolean;
    j$c(a: number, b: ScalerParams): number;
    j$b(a: number, b: ScalerParams): number;
    j$d(a: IList$1<number[]>, b: IList$1<number>, c: number, d: number, e: ScalerParams): void;
    j$e(a: IList$1<number>, b: number, c: number, d: ScalerParams): void;
    j$f(a: IList$1<number>, b: number, c: number, d: ScalerParams): void;
    get j$a(): boolean;
    get i$a(): boolean;
    static $$p: string[];
}
/**
 * @hidden
 */
export declare class CategoryDateTimeXAxisView extends CategoryAxisBaseView {
    static $t: Type;
    protected bg: CategoryDateTimeXAxis;
    constructor(a: CategoryDateTimeXAxis);
    ag(): void;
    o(a: number): string;
}
