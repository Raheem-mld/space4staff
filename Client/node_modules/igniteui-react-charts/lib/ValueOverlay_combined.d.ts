import { Series } from "./Series";
import { IHasCategoryModePreference } from "./IHasCategoryModePreference";
import { Axis } from "./Axis";
import { CategoryAxisBase } from "./CategoryAxisBase";
import { Type, Point } from "igniteui-react-core";
import { Brush } from "igniteui-react-core";
import { Thickness } from "igniteui-react-core";
import { SeriesView } from "./SeriesView";
import { Rect } from "igniteui-react-core";
import { AxisRange } from "./AxisRange";
import { Geometry } from "igniteui-react-core";
import { FastItemsSourceEventAction } from "igniteui-react-core";
import { CategoryMode } from "./CategoryMode";
import { RenderSurface } from "./RenderSurface";
import { RenderingContext } from "igniteui-react-core";
/**
 * @hidden
 */
export declare class ValueOverlay extends Series implements IHasCategoryModePreference {
    static $t: Type;
    constructor();
    pi: Axis;
    p0: number;
    py: number;
    pz: number;
    pv: number;
    f8(a: Point, b: boolean, c: boolean): number;
    pw(a: Point, b: Point): number;
    o2(a: Point, b: boolean, c: boolean): Point;
    g0(a: Point): number;
    hh(a: Point): any;
    eh(a: any): boolean;
    ap(a: Axis): AxisRange;
    l1(a: boolean): void;
    px(): number;
    qh(a: number, b: ValueOverlayView): void;
    e3(a: Rect, b: Rect, c: SeriesView): boolean;
    protected mn(a: Rect, b: Rect): void;
    protected mm(a: Rect, b: Rect): void;
    protected kk(a: FastItemsSourceEventAction, b: number, c: number, d: string): void;
    protected lm(a: any, b: string, c: any, d: any): void;
    ky(): void;
    kh(a: boolean, b: SeriesView): void;
    private pn;
    preferredCategoryMode(a: CategoryAxisBase): CategoryMode;
    get categoryAxis(): CategoryAxisBase;
    protected bu(): SeriesView;
    lh(a: SeriesView): void;
    private pl;
    l2(a: Rect, b: RenderSurface): void;
    getOffsetValue(): number;
    getCategoryWidth(): number;
    pm: boolean;
    pk: (item: any) => string;
    qy: Brush;
    qw: Brush;
    p1: number;
    qx: Brush;
    get qz(): Thickness;
    pr: number;
    pt: number;
    ps: number;
    pq: number;
    pu: number;
    ag(): Axis[];
    private pj;
    private pp;
    private po;
    protected qi(a: number, b: boolean): void;
    protected get_ed(): boolean;
    qd(a: number): string;
    get qf(): string;
    static $$p: string[];
}
/**
 * @hidden
 */
export declare class ValueOverlayView extends SeriesView {
    static $t: Type;
    constructor(a: ValueOverlay);
    private bz;
    protected bb(): void;
    protected bc(): void;
    by(a: Geometry): void;
    bx(): void;
    protected a6(a: RenderingContext, b: boolean): void;
    al(a: any): void;
}
