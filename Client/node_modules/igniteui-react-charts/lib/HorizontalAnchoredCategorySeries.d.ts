import { AnchoredCategorySeries } from "./AnchoredCategorySeries";
import { IHorizontalAnchoredCategorySeriesInteractionManager } from "./IHorizontalAnchoredCategorySeriesInteractionManager";
import { Type, Point } from "igniteui-react-core";
import { CategoryAxisBase } from "./CategoryAxisBase";
import { NumericYAxis } from "./NumericYAxis";
import { NumericAxisBase } from "./NumericAxisBase";
import { CategoryMode } from "./CategoryMode";
import { SeriesHitTestMode } from "./SeriesHitTestMode";
import { Rect } from "igniteui-react-core";
import { ScalerParams } from "./ScalerParams";
import { Axis } from "./Axis";
import { FastItemsSourceEventAction } from "igniteui-react-core";
/**
 * @hidden
 */
export declare abstract class HorizontalAnchoredCategorySeries extends AnchoredCategorySeries {
    static $t: Type;
    private t0;
    get t1(): IHorizontalAnchoredCategorySeriesInteractionManager;
    ke(): void;
    xAxis: CategoryAxisBase;
    yAxis: NumericYAxis;
    protected bo(): SeriesHitTestMode;
    q2(): CategoryAxisBase;
    rn(): NumericAxisBase;
    pd(a: Point): Rect;
    private ue;
    protected t6(a: Point, b: Point, c: boolean): boolean;
    ah(a: Point): Point[][];
    ai(a: Point): Point[][];
    ep(a: Point, b: boolean): boolean;
    getOffsetValue(): number;
    getCategoryWidth(): number;
    f8(a: Point, b: boolean, c: boolean): number;
    g6(a: Point, b: boolean): number;
    g4(a: Point, b: boolean): number;
    fu(a: Point, b: number, c: Axis, d: ScalerParams, e: number): number;
    o2(a: Point, b: boolean, c: boolean): Point;
    fetchXAxis(): Axis;
    fetchYAxis(): Axis;
    te(a: Axis): void;
    tf(a: Axis): void;
    rx(): boolean;
    protected tw: CategoryAxisBase;
    protected t2: NumericAxisBase;
    ua(a: CategoryAxisBase): void;
    ub(a: NumericYAxis): void;
    qw(a: number, b: number): any[];
    protected lm(a: any, b: string, c: any, d: any): void;
    protected kk(a: FastItemsSourceEventAction, b: number, c: number, d: string): void;
    t4(a: any): boolean;
    t5(a: any): boolean;
    private ty;
    get tz(): CategoryMode;
    set tz(a: CategoryMode);
    get useHighMarkerFidelity(): boolean;
    static $$p: string[];
}
