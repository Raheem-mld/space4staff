import { VerticalAnchoredCategorySeries } from "./VerticalAnchoredCategorySeries";
import { IBarSeries } from "./IBarSeries";
import { SeriesView } from "./SeriesView";
import { CategoryTransitionInMode } from "./CategoryTransitionInMode";
import { Rect } from "igniteui-react-core";
import { Point, Type } from "igniteui-react-core";
import { CategoryFrame } from "./CategoryFrame";
import { List$1 } from "igniteui-react-core";
import { Axis } from "./Axis";
import { CategoryAxisBase } from "./CategoryAxisBase";
import { CategorySeriesView } from "./CategorySeriesView";
import { CategoryFramePreparer } from "./CategoryFramePreparer";
import { CategoryMode } from "./CategoryMode";
import { Pool$1 } from "igniteui-react-core";
import { Rectangle } from "igniteui-react-core";
import { AxisRange } from "./AxisRange";
import { FastItemsSourceEventAction } from "igniteui-react-core";
import { CategoryBucketCalculator } from "./CategoryBucketCalculator";
import { AnchoredCategorySeriesView } from "./AnchoredCategorySeriesView";
import { RenderingContext } from "igniteui-react-core";
/**
 * @hidden
 */
export declare class BarSeries extends VerticalAnchoredCategorySeries implements IBarSeries {
    static $t: Type;
    protected get_c9(): boolean;
    protected get_dw(): boolean;
    protected bu(): SeriesView;
    protected rd(): CategoryTransitionInMode;
    lh(a: SeriesView): void;
    t7: BarSeriesView;
    protected get_cy(): boolean;
    pb(a: Point): Rect;
    ep(a: Point, b: boolean): boolean;
    constructor();
    q9(a: CategorySeriesView): CategoryFramePreparer;
    ac(): void;
    t8: number;
    t9: number;
    preferredCategoryMode(a: CategoryAxisBase): CategoryMode;
    kh(a: boolean, b: SeriesView): void;
    r6(): number;
    s4(a: CategorySeriesView): number;
    ap(a: Axis): AxisRange;
    eh(a: any): boolean;
    f1(): number;
    sl(a: CategoryFrame, b: CategorySeriesView): void;
    protected kk(a: FastItemsSourceEventAction, b: number, c: number, d: string): void;
    protected lm(a: any, b: string, c: any, d: any): void;
    getPreferredCategoryMode(): CategoryMode;
    get useHighMarkerFidelity(): boolean;
    static $$p: string[];
}
/**
 * @hidden
 */
export declare class BarBucketCalculator extends CategoryBucketCalculator {
    static $t: Type;
    constructor(a: BarSeriesView);
    protected i: BarSeriesView;
    g(a: number): void;
    getBucketWithoutUnknowns(a: number): number[];
    getBucket(a: number): number[];
    private h;
    private j;
    cacheValues(): void;
    unCacheValues(): void;
}
/**
 * @hidden
 */
export declare class BarSeriesView extends AnchoredCategorySeriesView {
    static $t: Type;
    da: BarSeries;
    constructor(a: BarSeries);
    db: Pool$1<Rectangle>;
    as(): void;
    di(): Rectangle;
    dc: List$1<Rectangle>;
    dd(a: Rectangle): void;
    df(a: Rectangle): void;
    de(a: Rectangle): void;
    dg(a: Rectangle, b: number, c: number): void;
    cs(): CategoryBucketCalculator;
    protected bf(a: any, b: number): void;
    protected ac(a: number): any;
    private dh;
    protected ab(a: number): any;
    protected a6(a: RenderingContext, b: boolean): void;
    al(a: any): void;
    protected af(): void;
}
