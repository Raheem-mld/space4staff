import { CategoryAxisBase } from "./CategoryAxisBase";
import { Type, IList$1 } from "igniteui-react-core";
import { DependencyProperty } from "igniteui-react-core";
import { AxisOrientation } from "./AxisOrientation";
import { AxisView } from "./AxisView";
import { AxisLabelPanelBase } from "./AxisLabelPanelBase";
import { Rect } from "igniteui-react-core";
import { ScalerParams } from "./ScalerParams";
import { SeriesViewer } from "./SeriesViewer";
import { CategoryMode } from "./CategoryMode";
import { IGetItemAtIndex } from "igniteui-react-core";
import { CategoryAxisBaseView } from "./CategoryAxisBaseView";
/**
 * @hidden
 */
export declare class CategoryXAxis extends CategoryAxisBase {
    static $t: Type;
    a3(): AxisView;
    ha(a: AxisView): void;
    lo: CategoryXAxisView;
    constructor();
    private l1;
    get l3(): number;
    set l3(a: number);
    private l0;
    get l2(): number;
    set l2(a: number);
    au(): AxisLabelPanelBase;
    getCategorySize(a: Rect, b: Rect, c: Rect): number;
    ki(a: Rect, b: Rect, c: Rect): number;
    getGroupCenter(a: number, b: Rect, c: Rect, d: Rect): number;
    dv(): number;
    l9(a: any): void;
    d8(a: number, b: ScalerParams): number;
    protected ln(a: IList$1<number[]>): number[][];
    g4(a: IList$1<number[]>, b: IList$1<number>, c: number, d: number, e: ScalerParams): void;
    d9(a: number, b: ScalerParams, c: CategoryMode): number;
    private lx;
    eb(a: number, b: ScalerParams): number;
    ec(a: number, b: ScalerParams, c: CategoryMode): number;
    getUnscaledValue3(a: number, b: Rect, c: Rect, d: CategoryMode): number;
    ma(a: number, b: number): void;
    l4: any;
    protected hr(a: boolean): void;
    cx(): boolean;
    static readonly mb: DependencyProperty;
    get ly(): number;
    set ly(a: number);
    lq(): boolean;
    private lr;
    get lt(): number;
    set lt(a: number);
    ej(): number;
    static readonly mc: DependencyProperty;
    get lz(): number;
    set lz(a: number);
    private ls;
    get lu(): number;
    set lu(a: number);
    j9(a: SeriesViewer): boolean;
    protected get_a1(): AxisOrientation;
    get a1(): AxisOrientation;
    protected lp(): IGetItemAtIndex;
    protected lw(a: number, b: ScalerParams): number;
    protected lv(a: number, b: number, c: boolean, d: ScalerParams): number;
    get isVertical(): boolean;
    j$c(a: number, b: ScalerParams): number;
    j$b(a: number, b: ScalerParams): number;
    j$d(a: IList$1<number[]>, b: IList$1<number>, c: number, d: number, e: ScalerParams): void;
    j$e(a: IList$1<number>, b: number, c: number, d: ScalerParams): void;
    j$f(a: IList$1<number>, b: number, c: number, d: ScalerParams): void;
    get j$a(): boolean;
}
/**
 * @hidden
 */
export declare class CategoryXAxisView extends CategoryAxisBaseView {
    static $t: Type;
    protected bg: CategoryXAxis;
    constructor(a: CategoryXAxis);
    ag(): void;
}
